line	predicate	lable
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns < columnDimension	0
org.apache.commons.math.util.FastMath#double#floor#?,double#3330	!(y == 0)	0
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#57	!(columnDimension < 1)	0
org.apache.commons.math.util.FastMath#double#floor#?,double#3321	x >= TWO_POWER_52 || x <= -TWO_POWER_52	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns >= rowDimension	1
org.apache.commons.math.util.FastMath#double#floor#?,double#3326	!(x < 0 && y != x)	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#122	this.missingEntries > missingEntries	1
org.apache.commons.math.util.FastMath#double#ceil#?,double#3344	!(x != x)	0
org.apache.commons.math.util.FastMath#double#floor#?,double#3317	x != x	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows != rowDimension	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#122	this.missingEntries >= missingEntries	0
org.apache.commons.math.util.FastMath#double#ceil#?,double#3344	x != x	1
org.apache.commons.math.util.FastMath#double#floor#?,double#3334	(y)< 0	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask != expectedSize	0
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows >= rowDimension	1
org.apache.commons.math.util.FastMath#double#floor#?,double#3334	(y)<= 0	1
org.apache.commons.math.util.FastMath#double#ceil#?,double#3350	(y)== 0	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows <= columnDimension	1
org.apache.commons.math.util.FastMath#double#floor#?,double#3334	(y)== 0	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows > columnDimension	0
org.apache.commons.math.util.FastMath#double#ceil#?,double#3349	y == x	0
org.apache.commons.math.util.FastMath#double#floor#?,double#3334	(y)!= 0	0
org.apache.commons.math.util.FastMath#double#ceil#?,double#3350	(y)< 0	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask < capacity	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#155	powerOfTwo == capacity	0
org.apache.commons.math.util.FastMath#double#ceil#?,double#3348	y == x	0
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows > rowDimension	0
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#54	rowDimension < 1	1
org.apache.commons.math.util.FastMath#double#ceil#?,double#3350	(y)<= 0	1
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#54	!(rowDimension < 1)	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#156	(capacity)>= 0	0
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns > rowDimension	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask == capacity	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns <= rowDimension	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#122	this.missingEntries != missingEntries	1
org.apache.commons.math.util.FastMath#double#ceil#?,double#3350	(y)!= 0	0
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows >= columnDimension	0
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows == columnDimension	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask < expectedSize	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns < rowDimension	0
org.apache.commons.math.util.FastMath#double#ceil#?,double#3348	y != x	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows != columnDimension	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask <= capacity	0
org.apache.commons.math.util.FastMath#double#ceil#?,double#3349	!(y == x)	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows == rowDimension	1
org.apache.commons.math.util.FastMath#double#ceil#?,double#3348	y > x	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#150	!(expectedSize == 0)	0
org.apache.commons.math.util.FastMath#double#floor#?,double#3334	(y)>= 0	0
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#57	columnDimension < 1	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns >= columnDimension	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns > columnDimension	0
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns != rowDimension	1
org.apache.commons.math.util.FastMath#double#ceil#?,double#3348	y <= x	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask > expectedSize	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask <= expectedSize	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#155	!(powerOfTwo == capacity)	1
org.apache.commons.math.util.FastMath#double#floor#?,double#3334	(y)> 0	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask == expectedSize	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#122	this.missingEntries == missingEntries	0
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns <= columnDimension	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#156	(capacity)<= 0	1
org.apache.commons.math.util.FastMath#double#ceil#?,double#3350	(y)>= 0	0
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows < columnDimension	1
org.apache.commons.math.util.FastMath#double#floor#?,double#3326	x < 0 && y != x	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#156	(capacity)> 0	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#156	(capacity)!= 0	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#122	this.missingEntries <= missingEntries	0
org.apache.commons.math.util.FastMath#double#ceil#?,double#3348	y >= x	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#156	(capacity)< 0	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#150	expectedSize == 0	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#156	(capacity)== 0	1
org.apache.commons.math.util.FastMath#double#ceil#?,double#3348	y < x	1
org.apache.commons.math.util.FastMath#double#ceil#?,double#3350	(y)> 0	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask != capacity	0
org.apache.commons.math.util.FastMath#double#floor#?,double#3330	y == 0	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows <= rowDimension	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns == rowDimension	0
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns != columnDimension	0
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#51	this.columns == columnDimension	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask >= capacity	1
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#122	this.missingEntries < missingEntries	1
org.apache.commons.math.linear.OpenMapRealMatrix#?#OpenMapRealMatrix#?,int,int#50	this.rows < rowDimension	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask >= expectedSize	0
org.apache.commons.math.util.FastMath#double#floor#?,double#3321	!(x >= TWO_POWER_52 || x <= -TWO_POWER_52)	0
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#123	mask > capacity	1
org.apache.commons.math.util.FastMath#double#floor#?,double#3317	!(x != x)	0