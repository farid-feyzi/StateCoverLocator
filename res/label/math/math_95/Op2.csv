line	predicate	lable
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#148	(ret)>= 0	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainUpperBound#?,double#132	(Double.MAX_VALUE)< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= a	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret >= tmp	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == p2	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret < p	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == x	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret == sum	0
org.apache.commons.math.distribution.FDistributionImpl#void#setDenominatorDegreesOfFreedom#?,double#180	!(degreesOfFreedom <= 0.0)	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < relativeError	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#178	(c)> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == q2	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret != x	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret > epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < c	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret == epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == b	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#59	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#178	(c)== 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= p2	0
org.apache.commons.math.distribution.FDistributionImpl#void#setDenominatorDegreesOfFreedom#?,double#180	degreesOfFreedom <= 0.0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= r	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainUpperBound#?,double#132	(Double.MAX_VALUE)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= q2	0
org.apache.commons.math.distribution.FDistributionImpl#void#setDenominatorDegreesOfFreedom#?,double#184	this.denominatorDegreesOfFreedom <= degreesOfFreedom	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < q1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	(ret)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > epsilon	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret != epsilon	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#59	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == q0	0
org.apache.commons.math.distribution.FDistributionImpl#void#setDenominatorDegreesOfFreedom#?,double#184	this.denominatorDegreesOfFreedom != degreesOfFreedom	0
org.apache.commons.math.distribution.FDistributionImpl#double#getNumeratorDegreesOfFreedom#?#170	(numeratorDegreesOfFreedom)> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#140	!(n < maxIterations && relativeError > epsilon)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= q0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret != sum	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == relativeError	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret >= p	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != p2	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#148	(ret)!= 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > x	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= x	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainLowerBound#?,double#119	(0.0)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < q1	0
org.apache.commons.math.distribution.FDistributionImpl#void#setNumeratorDegreesOfFreedom#?,double#162	this.numeratorDegreesOfFreedom == degreesOfFreedom	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > q2	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < p1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum <= g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > a	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret <= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= a	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainUpperBound#?,double#132	(Double.MAX_VALUE)== 0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == p1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret >= g	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#161	(ret)== 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < p0	0
org.apache.commons.math.distribution.FDistributionImpl#void#setNumeratorDegreesOfFreedom#?,double#162	this.numeratorDegreesOfFreedom > degreesOfFreedom	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#72	!(x <= 0.0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= q0	0
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#106	(super.inverseCumulativeProbability(p))> 0	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#82	(ret)== 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < p0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum != g	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret > sum	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < q0	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret >= n	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > r	0
org.apache.commons.math.distribution.AbstractContinuousDistribution#double#inverseCumulativeProbability#?,double#61	p < 0.0 || p > 1.0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == q1	0
org.apache.commons.math.analysis.UnivariateRealSolverUtils#double[]#bracket#?,UnivariateRealFunction,double,double,double,int#178	initial < lowerBound || initial > upperBound || lowerBound >= upperBound	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == q1	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#204	(ret)> 0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > relativeError	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > q0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret <= g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == p1	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret >= x	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDenominatorDegreesOfFreedom#?#192	(denominatorDegreesOfFreedom)<= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= epsilon	0
org.apache.commons.math.analysis.UnivariateRealSolverUtils#double[]#bracket#?,UnivariateRealFunction,double,double,double,int#174	maximumIterations <= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == p2	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#130	x > (a + 1.0) / (a + b + 2.0)	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret <= epsilon	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret > d	1
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#204	(ret)== 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#146	Double.isInfinite(p2) || Double.isInfinite(q2)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != r	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret == x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= b	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDenominatorDegreesOfFreedom#?#192	(denominatorDegreesOfFreedom)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= a	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#197	Double.isNaN(a) || Double.isNaN(b) || (a <= 0.0)|| (b <= 0.0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= x	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#59	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != relativeError	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum < g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < a	0
org.apache.commons.math.distribution.FDistributionImpl#void#setDenominatorDegreesOfFreedom#?,double#184	this.denominatorDegreesOfFreedom == degreesOfFreedom	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#148	(ret)== 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < b	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum == x	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#178	(c)<= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= r	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#96	!(i > 0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != x	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret >= m	0
org.apache.commons.math.distribution.FDistributionImpl#double#getNumeratorDegreesOfFreedom#?#170	(numeratorDegreesOfFreedom)< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= q0	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#197	!(Double.isNaN(a) || Double.isNaN(b) || (a <= 0.0)|| (b <= 0.0))	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= q2	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#161	(ret)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#178	(c)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= b	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret > a	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == p2	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret > g	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > q1	0
org.apache.commons.math.distribution.FDistributionImpl#void#setNumeratorDegreesOfFreedom#?,double#162	this.numeratorDegreesOfFreedom != degreesOfFreedom	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < p1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum > g	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret != b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > q1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum <= x	0
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#106	(super.inverseCumulativeProbability(p))== 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > r	0
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#106	(super.inverseCumulativeProbability(p))!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != p2	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret <= m	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret < m	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= relativeError	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret <= n	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == q2	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret == d	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= p2	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == epsilon	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#161	(ret)> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != p2	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#82	(ret)< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < c	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum > g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == r	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#161	(ret)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == a	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= q1	0
org.apache.commons.math.distribution.FDistributionImpl#double#getNumeratorDegreesOfFreedom#?#170	(numeratorDegreesOfFreedom)<= 0	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#148	(ret)< 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != relativeError	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum >= g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < b	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#126	!(Double.isNaN(x) || Double.isNaN(a) || Double.isNaN(b)|| (x < 0)|| (x > 1)|| (a <= 0.0)|| (b <= 0.0))	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != p2	0
org.apache.commons.math.distribution.AbstractContinuousDistribution#double#inverseCumulativeProbability#?,double#61	!(p < 0.0 || p > 1.0)	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= r	0
org.apache.commons.math.analysis.UnivariateRealSolverUtils#double[]#bracket#?,UnivariateRealFunction,double,double,double,int#178	!(initial < lowerBound || initial > upperBound || lowerBound >= upperBound)	1
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret < d	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != c	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#126	Double.isNaN(x) || Double.isNaN(a) || Double.isNaN(b)|| (x < 0)|| (x > 1)|| (a <= 0.0)|| (b <= 0.0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < p2	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret != g	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#82	(ret)>= 0	0
org.apache.commons.math.analysis.UnivariateRealSolverUtils#double[]#bracket#?,UnivariateRealFunction,double,double,double,int#171	!(function == null)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != b	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret > b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < p0	0
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#103	!(p == 1)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == r	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < a	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#204	(ret)>= 0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == r	0
org.apache.commons.math.analysis.UnivariateRealSolverUtils#double[]#bracket#?,UnivariateRealFunction,double,double,double,int#174	!(maximumIterations <= 0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < q2	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret < n	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= p1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret <= sum	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= b	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret < g	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#82	(ret)<= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != q1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret == tmp	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= epsilon	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainLowerBound#?,double#119	(0.0)< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == r	0
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#106	(super.inverseCumulativeProbability(p))>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != q1	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDenominatorDegreesOfFreedom#?#192	(denominatorDegreesOfFreedom)< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= x	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret != p	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#178	(c)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > q1	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#59	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))<= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < q2	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainUpperBound#?,double#132	(Double.MAX_VALUE)<= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == c	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#204	(ret)<= 0	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#148	(ret)<= 0	1
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainLowerBound#?,double#119	(0.0)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != a	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDenominatorDegreesOfFreedom#?#192	(denominatorDegreesOfFreedom)> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != c	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret < sum	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == b	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum == g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 == a	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret > tmp	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == b	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum != g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#172	n >= maxIterations	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 != epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= epsilon	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret < tmp	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != p0	0
org.apache.commons.math.distribution.FDistributionImpl#void#setDenominatorDegreesOfFreedom#?,double#184	this.denominatorDegreesOfFreedom > degreesOfFreedom	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret == p	1
org.apache.commons.math.distribution.FDistributionImpl#double#getNumeratorDegreesOfFreedom#?#170	(numeratorDegreesOfFreedom)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > b	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret == n	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#161	(ret)< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= a	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDenominatorDegreesOfFreedom#?#192	(denominatorDegreesOfFreedom)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == x	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	(ret)< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != x	0
org.apache.commons.math.distribution.FDistributionImpl#void#setDenominatorDegreesOfFreedom#?,double#184	this.denominatorDegreesOfFreedom >= degreesOfFreedom	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret < b	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#204	(ret)!= 0	0
org.apache.commons.math.distribution.FDistributionImpl#double#getNumeratorDegreesOfFreedom#?#170	(numeratorDegreesOfFreedom)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != r	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainUpperBound#?,double#132	(Double.MAX_VALUE)> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= epsilon	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret > n	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < b	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret > m	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == c	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret >= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != epsilon	0
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#100	p == 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= epsilon	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret <= tmp	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#140	n < maxIterations && relativeError > epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c > x	0
org.apache.commons.math.distribution.FDistributionImpl#void#setNumeratorDegreesOfFreedom#?,double#158	degreesOfFreedom <= 0.0	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret >= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != q2	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDenominatorDegreesOfFreedom#?#192	(denominatorDegreesOfFreedom)== 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#172	!(n >= maxIterations)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 <= p2	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#59	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= epsilon	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret > p	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#90	Double.isNaN(x) || (x <= 0.0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < b	0
org.apache.commons.math.analysis.UnivariateRealSolverUtils#double[]#bracket#?,UnivariateRealFunction,double,double,double,int#171	function == null	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#146	!(Double.isInfinite(p2) || Double.isInfinite(q2))	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#130	!(x > (a + 1.0) / (a + b + 2.0))	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= q1	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret == m	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= q0	0
org.apache.commons.math.distribution.FDistributionImpl#double#getNumeratorDegreesOfFreedom#?#170	(numeratorDegreesOfFreedom)== 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < r	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret != n	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret < a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < epsilon	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret <= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == p1	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret != d	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != p1	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainUpperBound#?,double#132	(Double.MAX_VALUE)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c == relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > a	0
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#100	!(p == 0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c >= q0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#90	!(Double.isNaN(x) || (x <= 0.0))	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != c	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	(ret)> 0	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#82	(ret)> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= p2	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret == b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 == p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 <= q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > p0	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#161	(ret)<= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < q1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum < g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 == relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 < epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > p1	0
org.apache.commons.math.distribution.FDistributionImpl#void#setNumeratorDegreesOfFreedom#?,double#162	this.numeratorDegreesOfFreedom >= degreesOfFreedom	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= q1	0
org.apache.commons.math.distribution.FDistributionImpl#void#setDenominatorDegreesOfFreedom#?,double#184	this.denominatorDegreesOfFreedom < degreesOfFreedom	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= relativeError	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#72	x <= 0.0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= r	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#204	(ret)< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < a	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum == x	0
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#106	(super.inverseCumulativeProbability(p))<= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > a	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret > x	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#78	ret != m	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= q0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum <= g	0
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#82	(ret)!= 0	0
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#103	p == 1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 != q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= p2	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret == g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 < q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 >= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > relativeError	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#96	i > 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 <= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < r	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainLowerBound#?,double#119	(0.0)<= 0	0
org.apache.commons.math.distribution.FDistributionImpl#void#setNumeratorDegreesOfFreedom#?,double#158	!(degreesOfFreedom <= 0.0)	0
org.apache.commons.math.distribution.FDistributionImpl#void#setNumeratorDegreesOfFreedom#?,double#162	this.numeratorDegreesOfFreedom <= degreesOfFreedom	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainLowerBound#?,double#119	(0.0)> 0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError != p2	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#59	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))== 0	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret <= d	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 >= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c <= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 <= p0	0
org.apache.commons.math.distribution.FDistributionImpl#void#setNumeratorDegreesOfFreedom#?,double#162	this.numeratorDegreesOfFreedom < degreesOfFreedom	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#178	(c)< 0	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret >= a	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret == a	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum == g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != q0	0
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainLowerBound#?,double#119	(0.0)== 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > q2	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret >= d	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError == epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= p2	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret == x	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	(ret)<= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError < p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 > p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError > p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#167	p1 != r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > p2	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	ret < epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 >= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#165	c < p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 >= p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError <= q1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#99	sum >= g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 > c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#162	relativeError >= r	0
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#106	(super.inverseCumulativeProbability(p))< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == r	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	ret <= p	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret >= sum	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 > relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == q2	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	(ret)!= 0	0
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#148	(ret)> 0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	(ret)== 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 != relativeError	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	sum < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#169	q1 < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#166	p0 < epsilon	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#102	ret != tmp	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#168	q0 == q1	0