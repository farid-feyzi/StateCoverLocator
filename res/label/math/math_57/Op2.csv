line	predicate	lable
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))< 0	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#325	!(distance < minDistance)	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#81	point.length != otherPoint.length	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#187	i < dx2.length	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#326	minDistance >= distance	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#188	dx2[i] >= r	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1878	(FastMath.sqrt(sum))> 0	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#181	dx2[i] < d	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#181	dx2[i] == d	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1876	sum > dp	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#181	dx2[i] > d	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum != k	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#172	!(resultSet.size() < k)	1
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	(Math.sqrt(a))>= 0	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1878	(FastMath.sqrt(sum))< 0	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum >= k	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum < i	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1878	(FastMath.sqrt(sum))>= 0	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#81	!(point.length != otherPoint.length)	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#326	minDistance != distance	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum > i	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1878	(FastMath.sqrt(sum))<= 0	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#181	dx2[i] >= d	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#326	minDistance < distance	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#77	!(other instanceof EuclideanIntegerPoint)	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#181	dx2[i] != d	1
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))<= 0	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum >= i	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1876	sum < dp	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum < k	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum > k	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#326	minDistance > distance	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#84	i < point.length	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#187	!(i < dx2.length)	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#176	i < pointSet.size()	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1878	(FastMath.sqrt(sum))!= 0	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#84	!(i < point.length)	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#326	minDistance == distance	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#325	distance < minDistance	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#188	!(dx2[i] >= r)	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum == i	1
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#77	!(!(other instanceof EuclideanIntegerPoint))	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1874	i < p1.length	0
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	(Math.sqrt(a))<= 0	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#85	!(point[i] != otherPoint[i])	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#181	dx2[i] <= d	1
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	(Math.sqrt(a))== 0	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1874	!(i < p1.length)	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))> 0	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1876	sum <= dp	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#176	!(i < pointSet.size())	1
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	(Math.sqrt(a))< 0	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#326	minDistance <= distance	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum == k	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum != i	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1876	sum == dp	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum <= k	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1878	(FastMath.sqrt(sum))== 0	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1876	sum != dp	1
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#85	point[i] != otherPoint[i]	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))>= 0	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))== 0	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#180	sum <= i	1
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	(Math.sqrt(a))!= 0	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1876	sum >= dp	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#172	resultSet.size() < k	1
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	(Math.sqrt(a))> 0	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))!= 0	0