line	predicate	lable
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#208	(result)== 0	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#111	a > b	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#262	n < 0	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#294	i <= n - k	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#134	!(a <= Long.MAX_VALUE - b)	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientDouble#?,int,int#236	(Math.floor(Math.exp(binomialCoefficientLog(n,k)) + 0.5))> 0	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#179	(1)== 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret >= a	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#179	(1)< 0	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#182	(n)<= 0	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#134	a <= Long.MAX_VALUE - b	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#174	!(n < 0)	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#182	(n)== 0	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret > b	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#269	(k == 1) || (k == n - 1)	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret > a	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret <= b	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret >= b	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#141	(ret)>= 0	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#170	n < k	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#179	(1)>= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret >= b	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#298	(logSum)>= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret >= a	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#289	i <= n	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientDouble#?,int,int#236	(Math.floor(Math.exp(binomialCoefficientLog(n,k)) + 0.5))>= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#141	(ret)> 0	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#208	(result)<= 0	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#178	!((n == k) || (k == 0))	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#178	(n == k) || (k == 0)	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret == a	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret < a	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret < b	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#141	(ret)!= 0	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#294	!(i <= n - k)	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret == a	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#258	!(n < k)	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#208	(result)< 0	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#208	(result)!= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret == b	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#208	(result)>= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long#95	(addAndCheck(a,b,"overflow: add"))== 0	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#117	a < 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret != a	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret < a	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#298	(logSum)<= 0	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#266	(n == k) || (k == 0)	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientDouble#?,int,int#236	(Math.floor(Math.exp(binomialCoefficientLog(n,k)) + 0.5))< 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret == b	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#298	(logSum)== 0	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#258	n < k	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#185	result == Long.MAX_VALUE	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret < b	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#182	(n)> 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long#95	(addAndCheck(a,b,"overflow: add"))>= 0	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#179	(1)<= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#111	!(a > b)	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientDouble#?,int,int#236	(Math.floor(Math.exp(binomialCoefficientLog(n,k)) + 0.5))!= 0	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#185	!(result == Long.MAX_VALUE)	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#269	!((k == 1) || (k == n - 1))	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#179	(1)!= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#141	(ret)<= 0	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#182	(n)< 0	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#182	(n)>= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long#95	(addAndCheck(a,b,"overflow: add"))!= 0	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientDouble#?,int,int#236	(Math.floor(Math.exp(binomialCoefficientLog(n,k)) + 0.5))== 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret != a	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#208	(result)> 0	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#298	(logSum)!= 0	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#266	!((n == k) || (k == 0))	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret != b	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#117	!(a < 0)	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#298	(logSum)> 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#141	(ret)< 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long#95	(addAndCheck(a,b,"overflow: add"))<= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long#95	(addAndCheck(a,b,"overflow: add"))< 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#135	ret <= a	0
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#170	!(n < k)	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#179	(1)> 0	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#182	(n)!= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#141	(ret)== 0	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#298	(logSum)< 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long#95	(addAndCheck(a,b,"overflow: add"))> 0	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#262	!(n < 0)	1
org.apache.commons.math.util.MathUtils#double#binomialCoefficientDouble#?,int,int#236	(Math.floor(Math.exp(binomialCoefficientLog(n,k)) + 0.5))<= 0	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret <= b	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#181	!((k == 1) || (k == n - 1))	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret <= a	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#174	n < 0	1
org.apache.commons.math.util.MathUtils#long#binomialCoefficient#?,int,int#181	(k == 1) || (k == n - 1)	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret != b	0
org.apache.commons.math.util.MathUtils#double#binomialCoefficientLog#?,int,int#289	!(i <= n)	1
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret > b	0
org.apache.commons.math.util.MathUtils#long#addAndCheck#?,long,long,String#113	ret > a	0