line	predicate	lable
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum > dp	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum != i	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum == i	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))!= 0	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum >= dp	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum < i	1
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))> 0	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1629	(Math.sqrt(sum))< 0	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum <= dp	1
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#157	!(distance < minDistance)	0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#157	distance < minDistance	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum <= i	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum >= i	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1629	(Math.sqrt(sum))>= 0	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1625	i < p1.length	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum < dp	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1629	(Math.sqrt(sum))!= 0	1
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))>= 0	1
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))<= 0	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1629	(Math.sqrt(sum))> 0	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum > i	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1629	(Math.sqrt(sum))<= 0	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum == dp	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))== 0	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1629	(Math.sqrt(sum))== 0	0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	(MathUtils.distance(point,p.getPoint()))< 0	0
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1627	sum != dp	1
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1625	!(i < p1.length)	1