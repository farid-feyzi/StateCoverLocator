line	predicate	lable
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1854	SINE_TABLE_A[i] == x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] < count	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count > idx	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] >= d	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] != z	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] == c	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1785	facts[0] <= x	0
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	((a <= b) ? a : b)== 0	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1150	result[1] == tmp	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] != b	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1040	c < 8e298 && c > -8e298	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS != i	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1838	result[1] == x	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[0] != x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count >= i	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] > err	1
org.apache.commons.math.util.MultidimensionalCounter$Iterator#int#getCount#?,int#147	(counter[dim])== 0	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[1] > x	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[1] <= x	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1859	COSINE_TABLE_B[i] != x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] == index	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] != index	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1753	y[0] == xi	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count != idx	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] == c	1
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] < d	0
org.apache.commons.math.util.MultidimensionalCounter#int#getDimension#?#205	(dimension)>= 0	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1007	!(result != null)	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1724	x[0] > xi	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] <= a	0
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	((a <= b) ? a : b)< 0	1
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count != index	0
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	((a <= b) ? a : b)!= 0	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1753	y[0] >= xi	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] < z	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count == i	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count >= index	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1113	i < 2	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] > tS	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1004	ys[1] != x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[0] > x	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#228	count <= index	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	x[0] <= xi	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1863	!(i < 14)	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] < i	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] <= c	0
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	(ys[0] + ys[1])< 0	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count < idx	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] < err	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#238	count < index	1
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] != d	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	(ys[0] + ys[1])> 0	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count < index	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] != b	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] < a	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] == b	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] >= i	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#272	(count + c[last])== 0	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] < a	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1009	result[1] != x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[0] < x	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1794	result[0] == x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#181	uniCounterOffset[last] < tS	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] >= b	0
org.apache.commons.math.util.MultidimensionalCounter#int#getSize#?#281	(totalSize)< 0	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count == idx	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1829	facts[1] >= x	0
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	(ys[0] + ys[1])== 0	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1828	facts[0] > x	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] > a	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] >= i	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#997	ys[1] == x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1837	result[0] != x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] > d	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1743	!(i >= 0)	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] <= b	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1175	result[0] < tmp	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#996	ys[0] <= x	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1794	result[0] != x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count != j	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] < index	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] <= c	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count > j	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] != c	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] == a	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count == tS	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[1] != x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS == count	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1159	result[1] != tmp	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	(ys[0] + ys[1])== 0	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count != idx	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1795	result[1] <= x	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1003	ys[0] < x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] > z	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count < index	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] >= a	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[1] <= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] >= idx	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1838	result[1] <= x	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#int#getCount#?,int#147	(counter[dim])< 0	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1740	y[0] <= xi	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count < i	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] > idx	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[1] == x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count <= idx	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1008	result[0] >= x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] >= tS	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[0] == x	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] == b	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1148	result[0] > tmp	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#997	ys[1] < x	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] <= err	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1151	result[0] != tmp	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1785	facts[0] < x	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count >= i	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	x[0] == xi	1
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1919	i < 14	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1794	result[0] >= x	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#int#getCount#?,int#147	(counter[dim])!= 0	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1172	result[0] == tmp	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS != count	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1841	(ys[0] + ys[1])< 0	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count < idx	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1829	facts[1] == x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#175	j < dimension	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1151	result[0] <= tmp	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1162	result[1] != tmp	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1162	result[1] == tmp	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1746	y[1] < xi	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] > z	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err >= a	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[0] >= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] != index	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count < offset	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1749	y[1] != xi	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[0] > x	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1003	ys[0] > x	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#int#getCount#?,int#147	(counter[dim])> 0	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] <= z	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] > idx	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1754	y[1] != xi	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[0] == x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#187	totalSize > tS	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[0] >= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count == idx	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] != c	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1008	result[0] > x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] < tS	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#181	uniCounterOffset[last] > tS	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1748	y[0] == xi	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1820	!((i & 1) != 0)	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1009	result[1] > x	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[0] >= x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1172	result[0] >= tmp	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[0] > x	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] <= b	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1003	ys[0] >= x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1829	facts[1] < x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] >= z	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1163	result[0] > tmp	1
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1870	(i & 1) == 0	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err > b	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] >= b	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[0] < x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#181	uniCounterOffset[last] == tS	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1008	result[0] == x	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[0] <= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count <= i	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err <= a	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count < tS	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count <= offset	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1098	in[0] == 0.0	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1841	(ys[0] + ys[1])> 0	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1854	SINE_TABLE_A[i] < x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1151	result[0] < tmp	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[1] > x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1148	result[0] != tmp	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[1] <= x	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1786	facts[1] < x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#183	tS <= 0	1
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] <= d	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[1] > x	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count == i	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1004	ys[1] > x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1749	y[1] >= xi	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[1] <= x	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1021	d < 8e298 && d > -8e298	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[1] >= x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1746	y[1] != xi	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#115	(++count)< 0	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[0] != x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count == offset	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1175	result[0] > tmp	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] == z	1
org.apache.commons.math.util.MultidimensionalCounter$Iterator#boolean#hasNext#?#94	counter[i] != size[i] - 1	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#228	!(count <= index)	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count != index	1
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1858	COSINE_TABLE_A[i] == x	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1741	y[1] != xi	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1745	y[0] > xi	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err == b	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] > offset	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] >= index	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[1] > x	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1175	result[0] <= tmp	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1858	COSINE_TABLE_A[i] > x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] != tS	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1171	result[1] > tmp	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1007	result != null	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[1] < x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#173	i < last	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count < i	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] < z	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1160	result[0] < tmp	1
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1854	SINE_TABLE_A[i] > x	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] != a	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1745	y[0] >= xi	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] >= count	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count <= index	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count < idx	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1754	y[1] >= xi	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS >= count	1
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#264	!(i < dimension)	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1748	y[0] > xi	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count < index	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1753	y[0] < xi	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] < d	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count < offset	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] != c	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#264	i < dimension	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] < a	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1743	i >= 0	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[0] <= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count == index	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] >= count	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[0] <= x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] != d	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[0] < x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS <= i	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1009	result[1] <= x	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#int#getCount#?,int#147	(counter[dim])>= 0	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[0] == x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#173	!(i < last)	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#217	!(index < 0 || index >= totalSize)	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[1] == x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1745	y[0] != xi	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] < idx	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] <= i	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] == z	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[0] < x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] >= c	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] >= count	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[1] >= x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] == c	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] > i	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] != d	0
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	(ys[0] + ys[1])> 0	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] == a	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1163	result[0] >= tmp	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] < d	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1859	COSINE_TABLE_B[i] >= x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] < d	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1785	facts[0] > x	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1162	result[1] > tmp	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] > a	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] < index	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1786	facts[1] != x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count >= index	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1147	result[1] <= tmp	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1740	y[0] < xi	0
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	(ys[0] + ys[1])<= 0	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#996	ys[0] < x	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[1] > x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1171	result[1] <= tmp	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1731	x[1] > xi	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] > c	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[1] > x	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1151	result[0] == tmp	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#187	totalSize < tS	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count > index	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1151	result[0] > tmp	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1724	x[0] <= xi	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count <= tS	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1850	!(i < 7)	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#996	ys[0] >= x	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1855	SINE_TABLE_B[i] != x	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#int#getCount#?,int#147	(counter[dim])<= 0	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1012	(ys[0] + ys[1])<= 0	1
org.apache.commons.math.util.MultidimensionalCounter#int#getSize#?#281	(totalSize)>= 0	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#115	(++count)>= 0	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] == count	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] < idx	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#997	ys[1] >= x	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	(ys[0] + ys[1])<= 0	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] <= index	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count >= idx	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] <= d	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#994	!(i >= 0)	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1870	!((i & 1) == 0)	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1175	result[0] == tmp	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1731	x[1] != xi	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] == i	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] != idx	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count == offset	1
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	((a <= b) ? a : b)<= 0	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1159	result[1] == tmp	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] >= d	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] < b	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count != idx	1
org.apache.commons.math.util.MultidimensionalCounter#int#getDimension#?#205	(dimension)== 0	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1795	result[1] != x	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count == index	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1741	y[1] <= xi	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err == a	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] >= b	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count <= idx	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1040	!(c < 8e298 && c > -8e298)	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] < d	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] == tS	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1004	ys[1] <= x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[1] != x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1754	y[1] <= xi	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] != err	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1162	result[1] < tmp	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1786	facts[1] >= x	0
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1201	!(p > 0)	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1786	facts[1] == x	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1773	i >= 0	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] <= b	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] > b	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1816	i >= 0	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1147	result[1] == tmp	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1160	result[0] >= tmp	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1160	result[0] == tmp	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1785	facts[0] == x	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] == c	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] > c	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] <= count	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err != b	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1785	facts[0] >= x	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] >= z	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] == b	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[1] <= x	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] > b	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1147	result[1] < tmp	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count <= j	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS >= i	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1008	result[0] <= x	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count == index	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] != count	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] <= z	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1163	result[0] != tmp	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] == count	1
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1850	i < 7	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#183	!(tS <= 0)	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[1] == x	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] != b	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1150	result[1] < tmp	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1175	result[0] != tmp	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[0] != x	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1858	COSINE_TABLE_A[i] != x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1746	y[1] > xi	1
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count != i	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1795	result[1] == x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[1] < x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] > c	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1724	x[0] >= xi	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1172	result[0] <= tmp	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] < b	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1731	x[1] <= xi	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#115	(++count)> 0	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1753	y[0] <= xi	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[0] != x	0
org.apache.commons.math.util.MultidimensionalCounter#int#getSize#?#281	(totalSize)== 0	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] >= d	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS <= count	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1171	result[1] < tmp	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count != offset	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1009	result[1] >= x	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1784	(i & 2) != 0	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1841	(ys[0] + ys[1])>= 0	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1794	result[0] < x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[0] > x	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1838	result[1] >= x	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] < a	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] >= d	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1162	result[1] >= tmp	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[1] != x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] != z	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1854	SINE_TABLE_A[i] <= x	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#272	(count + c[last])<= 0	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	(ys[0] + ys[1])!= 0	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS > count	1
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1855	SINE_TABLE_B[i] <= x	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] != a	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] != count	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1741	y[1] == xi	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1746	y[1] >= xi	1
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count > i	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1828	facts[0] < x	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1855	SINE_TABLE_B[i] >= x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1150	result[1] <= tmp	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1003	ys[0] != x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] == i	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] < i	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[1] == x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1159	result[1] < tmp	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1828	facts[0] != x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1816	!(i >= 0)	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS == i	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1150	result[1] > tmp	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] == a	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1727	x[0] < xi	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1004	ys[1] < x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] != i	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1012	(ys[0] + ys[1])!= 0	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] < b	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[1] < x	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] >= d	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1727	x[0] > xi	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] <= count	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1784	!((i & 2) != 0)	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1859	COSINE_TABLE_B[i] <= x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] == d	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] <= idx	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[0] >= x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1829	facts[1] <= x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1841	(ys[0] + ys[1])== 0	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1098	!(in[0] == 0.0)	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1859	COSINE_TABLE_B[i] > x	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[1] >= x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1159	result[1] <= tmp	0
org.apache.commons.math.util.MultidimensionalCounter#int#getDimension#?#205	(dimension)!= 0	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1827	(i & 2) != 0	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1745	y[0] < xi	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1163	result[0] <= tmp	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1793	!(result != null)	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1828	facts[0] >= x	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] <= d	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1836	result != null	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count <= index	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count >= tS	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1793	result != null	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count > i	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[1] >= x	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1919	!(i < 14)	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[0] < x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] < d	0
org.apache.commons.math.util.MultidimensionalCounter#int#getDimension#?#205	(dimension)< 0	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count <= offset	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1148	result[0] <= tmp	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#115	(++count)== 0	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1150	result[1] != tmp	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#272	(count + c[last])>= 0	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] <= c	0
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1202	(p & 1) != 0	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] == d	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1172	result[0] < tmp	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1012	(ys[0] + ys[1])== 0	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1741	y[1] < xi	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1820	(i & 1) != 0	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count == i	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count >= offset	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1746	y[1] == xi	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] != a	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count == index	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1745	y[0] == xi	1
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1858	COSINE_TABLE_A[i] < x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count <= idx	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1748	y[0] != xi	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] <= tS	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1724	x[0] < xi	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[1] <= x	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1794	result[0] > x	1
org.apache.commons.math.util.MultidimensionalCounter#int#getSize#?#281	(totalSize)> 0	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count != i	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] > index	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1794	result[0] <= x	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1858	COSINE_TABLE_A[i] <= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] > count	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count <= i	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] > b	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[0] < x	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] <= a	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1727	x[0] >= xi	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1828	facts[0] <= x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1172	result[0] > tmp	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] < count	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[1] != x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1731	x[1] == xi	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1172	result[0] != tmp	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1150	result[1] >= tmp	1
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] > a	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#181	uniCounterOffset[last] >= tS	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count >= index	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count != i	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count != index	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] != d	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#boolean#hasNext#?#93	i < dimension	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1174	result[1] < tmp	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1746	y[1] <= xi	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1749	y[1] <= xi	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[1] == x	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err < a	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	x[0] >= xi	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1159	result[1] > tmp	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[0] == x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count == i	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#272	(count + c[last])> 0	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1777	!((i & 1) == 0)	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#107	counter[i] == size[i] - 1	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err <= b	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] >= a	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1855	SINE_TABLE_B[i] > x	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1171	result[1] == tmp	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[0] == x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1147	result[1] > tmp	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count > offset	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] >= offset	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1021	!(d < 8e298 && d > -8e298)	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] != a	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1837	result[0] > x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1148	result[0] >= tmp	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1151	result[0] >= tmp	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#260	c.length != dimension	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] > c	0
org.apache.commons.math.util.MultidimensionalCounter#int#getDimension#?#205	(dimension)<= 0	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count == j	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] <= a	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] < z	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1012	(ys[0] + ys[1])>= 0	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1777	(i & 1) == 0	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1754	y[1] > xi	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1745	y[0] <= xi	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] != count	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[0] > x	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1724	x[0] == xi	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1795	result[1] > x	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err >= b	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#187	totalSize == tS	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[1] > x	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count >= i	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1741	y[1] >= xi	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count >= j	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] >= a	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] != d	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] == a	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] < offset	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1786	facts[1] <= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count != i	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] >= z	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] == z	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] >= b	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] == count	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count != offset	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] <= a	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[0] <= x	0
org.apache.commons.math.util.MultidimensionalCounter#int#getSize#?#281	(totalSize)!= 0	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1773	!(i >= 0)	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err > a	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#997	ys[1] <= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count > idx	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1162	result[1] <= tmp	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count != tS	0
org.apache.commons.math.util.MultidimensionalCounter#int#getDimension#?#205	(dimension)> 0	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count >= idx	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1008	result[0] < x	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[1] == x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1741	y[1] > xi	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1785	facts[0] != x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1749	y[1] > xi	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[1] >= x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1748	y[0] >= xi	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count >= index	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#996	ys[0] == x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] > z	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] != d	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[0] <= x	0
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1201	p > 0	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count <= index	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[1] >= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#217	index < 0 || index >= totalSize	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#187	totalSize >= tS	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#106	i >= 0	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1795	result[1] >= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] > index	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1724	x[0] != xi	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1731	x[1] < xi	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] > z	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1838	result[1] > x	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count > index	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1829	facts[1] > x	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1859	COSINE_TABLE_B[i] < x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#238	!(count < index)	1
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#272	(count + c[last])< 0	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1106	result[1] != result[1]	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1174	result[1] <= tmp	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	x[0] != xi	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1740	y[0] > xi	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] != a	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count < j	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count > i	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1003	ys[0] <= x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#181	uniCounterOffset[last] <= tS	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#115	(++count)<= 0	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count > idx	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1753	y[0] > xi	1
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#107	!(counter[i] == size[i] - 1)	0
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1202	!((p & 1) != 0)	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] > d	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1753	y[0] != xi	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1836	!(result != null)	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] <= z	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count < i	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count <= i	1
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] > d	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[0] > x	1
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#272	(count + c[last])!= 0	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] >= index	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	x[0] > xi	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err != a	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] != z	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1171	result[1] >= tmp	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1740	y[0] != xi	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	(ys[0] + ys[1])< 0	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] > count	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[1] != x	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1008	result[0] != x	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] >= a	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#996	ys[0] > x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count < i	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS < count	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1148	result[0] == tmp	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[0] == x	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[1] != x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#187	totalSize != tS	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] != z	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] < z	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1754	y[1] == xi	1
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count > index	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] != b	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] >= d	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] == d	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] != c	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#175	!(j < dimension)	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] >= c	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1863	i < 14	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[1] < x	0
org.apache.commons.math.util.MultidimensionalCounter#int#getSize#?#281	(totalSize)<= 0	1
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1213	result != null	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	err < b	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[1] < x	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#997	ys[1] > x	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count >= idx	1
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#106	!(i >= 0)	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] == b	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[0] != x	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[0] != x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] < c	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1147	result[1] >= tmp	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] <= idx	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[0] <= x	0
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	((a <= b) ? a : b)> 0	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#266	index < 0 || index >= size[i]	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1731	x[1] >= xi	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] >= err	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] != a	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] == idx	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1829	facts[1] != x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] > i	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1163	result[0] < tmp	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1838	result[1] < x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1174	result[1] >= tmp	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count <= index	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] == a	1
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] <= d	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] < c	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] <= count	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1841	(ys[0] + ys[1])!= 0	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1106	!(result[1] != result[1])	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1727	x[0] != xi	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] != offset	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[0] > x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1174	result[1] == tmp	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	ys[1] <= x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1749	y[1] < xi	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1175	result[0] >= tmp	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#178	uniCounterOffset[i] <= i	1
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] > d	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] >= idx	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] > count	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1159	result[1] >= tmp	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] == index	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count >= offset	1
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1748	y[0] <= xi	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1827	!((i & 2) != 0)	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1009	result[1] < x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1174	result[1] != tmp	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#225	!(i < last)	1
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] <= a	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[1] != x	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS < i	1
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#181	uniCounterOffset[last] != tS	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1855	SINE_TABLE_B[i] == x	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] > b	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	result[1] < a	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1147	result[1] != tmp	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] <= c	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#179	tS > i	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#997	ys[1] != x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[1] >= x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count == idx	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1160	result[0] <= tmp	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[1] == x	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] <= offset	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] >= c	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1837	result[0] == x	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] == err	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] < a	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] > a	1
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] == d	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1855	SINE_TABLE_B[i] < x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] <= d	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1160	result[0] > tmp	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	(ys[0] + ys[1])>= 0	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1004	ys[1] == x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] <= z	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count > tS	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1828	facts[0] == x	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#225	i < last	1
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1160	result[0] != tmp	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] <= index	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#994	i >= 0	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#187	totalSize <= tS	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] != i	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count > i	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count > index	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] > d	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#115	(++count)!= 0	0
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	(ys[0] + ys[1])!= 0	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	x[0] < xi	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	result[1] <= a	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	split[0] == d	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1858	COSINE_TABLE_A[i] >= x	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	ys[1] < x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[0] >= x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1748	y[0] < xi	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1171	result[1] != tmp	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	a[0] <= d	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1795	result[1] < x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] == d	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1754	y[1] < xi	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] < count	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] < c	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#243	indices[last] == idx	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] > d	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] <= b	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] != idx	0
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	count >= i	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#234	indices[i] == offset	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1727	x[0] == xi	1
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1113	!(i < 2)	0
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	ys[0] >= x	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1854	SINE_TABLE_A[i] != x	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1012	(ys[0] + ys[1])> 0	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1003	ys[0] == x	1
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	(ys[0] + ys[1])>= 0	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	ys[0] != x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1727	x[0] <= xi	1
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#270	count <= i	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1837	result[0] < x	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1012	(ys[0] + ys[1])< 0	1
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1854	SINE_TABLE_A[i] >= x	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#260	!(c.length != dimension)	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[1] < x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1148	result[0] < tmp	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] < c	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] >= a	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1004	ys[1] >= x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1838	result[1] != x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1740	y[0] == xi	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[0] == x	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#boolean#hasNext#?#94	!(counter[i] != size[i] - 1)	1
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#239	count != index	1
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#996	ys[0] != x	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1749	y[1] == xi	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	a[1] == z	1
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	ys[0] <= x	0
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	((a <= b) ? a : b)>= 0	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1174	result[1] > tmp	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1786	facts[1] > x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1837	result[0] <= x	0
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1163	result[0] == tmp	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1837	result[0] >= x	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] > a	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#233	count > offset	0
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] >= a	0
org.apache.commons.math.util.MultidimensionalCounter$Iterator#boolean#hasNext#?#93	!(i < dimension)	1
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	split[1] > a	0
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1009	result[1] == x	0
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1859	COSINE_TABLE_B[i] == x	0
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	a[0] >= z	0
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1213	!(result != null)	1
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	a[1] >= c	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	result[1] < b	0
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#266	!(index < 0 || index >= size[i])	0
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1740	y[0] >= xi	1
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	ys[0] >= x	0
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	result[0] == a	0
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#229	count < index	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	ys[0] < x	0
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1841	(ys[0] + ys[1])<= 0	1