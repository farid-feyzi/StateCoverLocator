line	predicate	lable
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum <= g	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == iBlock	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows <= columns	0
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy <= degreesOfFreedom	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY <= y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#205	(c)> 0	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= rows	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	Double.isNaN(x) || (x <= 0.0)	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != p	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= p0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= p2	0
org.apache.commons.math.linear.BlockRealMatrix#int#getRowDimension#?#1345	(rows)< 0	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY < dy	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getTotalSumSquares#?#351	!(n < 2)	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns >= rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > r	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows >= columns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == q0	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != pStart	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns > columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == epsilon	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != b	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == pStart	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= p2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == c	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX >= dx	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= c	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getR#?#434	!(b1 < 0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= q1	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < jWidth	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= relativeError	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == epsilon	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != b	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret == epsilon	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == q2	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > blockRows	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret >= a	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == qStart	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getR#?#434	b1 < 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == x	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getR#?#437	(result)!= 0	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#214	!(length != columns)	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns < rows	0
org.apache.commons.math.linear.BlockRealMatrix#int#blockWidth#?,int#1684	((blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE)< 0	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getSumSquaredErrors#?#337	(Math.max(0d,sumYY - sumXY * sumXY / sumXX))< 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > b	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar != y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != r	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY < dy	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= jWidth	0
org.apache.commons.math.linear.BlockRealMatrix#void#setEntry#?,int,int,double#1259	blocks[iBlock * blockColumns + jBlock][k] == value	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns < rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= x	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum < g	0
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy >= degreesOfFreedom	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#143	(ret)>= 0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret < tmp	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > p0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > p2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar <= y	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar >= y	0
org.apache.commons.math.linear.BlockRealMatrix#void#setEntry#?,int,int,double#1259	blocks[iBlock * blockColumns + jBlock][k] > value	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= b	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar == x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= p2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != epsilon	0
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret == t	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > q2	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar < dy	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != x	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows == rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != p1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#113	(ret)> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < c	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= x	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar <= x	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == r	0
org.apache.commons.math.linear.BlockRealMatrix#int#blockWidth#?,int#1684	((blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE)<= 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == p0	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns <= rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != c	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#165	!(j < nVars)	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY > y	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY == dx	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum >= x	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == p2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar == x	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret == x	1
org.apache.commons.math.linear.BlockRealMatrix#double[]#getColumn#?,int#1196	!(i < iHeight)	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns <= rows	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows > rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= q0	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns < columns	1
org.apache.commons.math.linear.BlockRealMatrix#int#blockHeight#?,int#1675	((blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= p2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < relativeError	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret == g	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar <= x	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getRSquare#?#456	((ssto - getSumSquaredErrors()) / ssto)<= 0	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] != r	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= a	1
org.apache.commons.math.linear.BlockRealMatrix#double#getEntry#?,int,int#1242	(blocks[iBlock * blockColumns + jBlock][k])!= 0	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != blockIndex	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= epsilon	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar < dy	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > a	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#184	Double.isNaN(r)	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar > dx	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < blockIndex	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != p2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > q1	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < epsilon	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns >= columns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < c	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum >= g	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > jBlock	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY < y	0
org.apache.commons.math.linear.BlockRealMatrix#void#setEntry#?,int,int,double#1259	blocks[iBlock * blockColumns + jBlock][k] < value	1
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#199	(ret)< 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > b	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > p	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == jBlock	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > c	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar >= dx	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == p0	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar <= dx	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY <= y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != x	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum != x	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#113	(ret)<= 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= q2	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns == rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == q0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#97	!(Double.isNaN(x) || (x <= 0.0))	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns != columns	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX != y	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret <= tmp	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == a	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getTotalSumSquares#?#354	(sumYY)> 0	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows != columns	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#224	!(iBlock < blockRows)	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows <= rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != q2	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#230	(regression.getR())<= 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == r	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY <= dx	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= pEnd	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar > y	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows <= rows	0
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= b	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#199	(ret)> 0	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX <= dx	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows == rows	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#54	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > r	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY == y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == q1	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar > y	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#226	xArray.length == yArray.length && xArray.length > 1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= r	1
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#61	!(columnDimension <= 0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != c	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar == x	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#computeCorrelationMatrix#?,RealMatrix#189	i < nVars	0
org.apache.commons.math.linear.BlockRealMatrix#double[]#getColumn#?,int#1193	!(iBlock < blockRows)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < p2	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns != columns	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > iBlock	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#228	!(jBlock < blockColumns)	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX != dx	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= q1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == p1	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX == x	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX > y	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] > t	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns <= columns	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#165	iBlock < blockRows	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#167	!(jBlock < blockColumns)	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#192	!(Double.isNaN(a) || Double.isNaN(b) || (a <= 0.0)|| (b <= 0.0))	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows != columns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == p1	0
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy != degreesOfFreedom	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar == dy	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret != x	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY >= x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > q1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < a	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getTotalSumSquares#?#354	(sumYY)== 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != q2	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == b	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#230	(regression.getR())>= 0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX > y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == p0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > p2	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#166	!(i == j)	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < relativeError	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= r	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < p	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret <= a	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == blockRows	1
org.apache.commons.math.distribution.TDistributionImpl#void#setDegreesOfFreedomInternal#?,double#93	this.degreesOfFreedom > newDegreesOfFreedom	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns <= columns	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == qEnd	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar <= dy	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= b	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns == columns	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar == dy	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > p0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > q0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#142	Double.isInfinite(p2) || Double.isInfinite(q2)	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#205	(c)>= 0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == x	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns <= rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= q1	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#166	i == j	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX < y	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == q1	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= iBlock	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > p1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= c	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows < columns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < epsilon	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= c	0
org.apache.commons.math.linear.BlockRealMatrix#int#blockHeight#?,int#1675	((blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE)<= 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < relativeError	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= qStart	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= p2	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getRSquare#?#456	((ssto - getSumSquaredErrors()) / ssto)< 0	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > p2	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getTotalSumSquares#?#354	(sumYY)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= c	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows < rows	1
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#156	(ret)< 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= p0	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#125	x > (a + 1.0) / (a + b + 2.0)	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar < y	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#173	copyArray	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#205	(c)< 0	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#113	(ret)< 0	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret != sum	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= epsilon	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < q0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY == dy	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns > columns	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#113	(ret)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < q2	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#computeCorrelationMatrix#?,RealMatrix#189	!(i < nVars)	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < q1	1
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy < degreesOfFreedom	0
org.apache.commons.math.linear.BlockRealMatrix#int#getColumnDimension#?#1351	(columns)> 0	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#276	jBlock < blockColumns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < p1	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum == x	1
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#199	(ret)<= 0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum > g	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows > columns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > q2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == q2	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] < t	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX >= y	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows != columns	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#156	!(copyArray)	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX >= y	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX != y	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows >= rows	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret <= epsilon	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar <= x	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] >= t	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows > columns	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < qStart	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= p0	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows <= rows	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar > x	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret < x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == p1	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#165	!(iBlock < blockRows)	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getR#?#437	(result)< 0	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows >= rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= x	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar >= dx	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns > rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= p0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > q0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= b	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns >= columns	1
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#54	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))!= 0	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getSumSquaredErrors#?#337	(Math.max(0d,sumYY - sumXY * sumXY / sumXX))!= 0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar != dy	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns > rows	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#301	!(Math.abs(sumXX) < 10 * Double.MIN_VALUE)	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret <= x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > a	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= p0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= p2	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#212	!(i < rawData.length)	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows != rows	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY == x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < p1	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#224	iBlock < blockRows	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= pStart	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns > rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < relativeError	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= p0	0
org.apache.commons.math.linear.BlockRealMatrix#double#getEntry#?,int,int#1242	(blocks[iBlock * blockColumns + jBlock][k])< 0	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns != rows	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > jWidth	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX <= dy	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum < g	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > columns	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= qStart	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY > dx	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns >= columns	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] > r	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < p2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= relativeError	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#304	(sumXY / sumXX)> 0	0
org.apache.commons.math.linear.BlockRealMatrix#int#getColumnDimension#?#1351	(columns)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != p2	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY >= dx	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= blockIndex	0
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#128	!(x == 0.0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < c	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getR#?#437	(result)<= 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < c	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < pStart	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > pStart	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum <= g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == a	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= columns	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret == a	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns < columns	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret >= epsilon	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#199	!(n >= maxIterations)	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] < r	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < b	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == epsilon	1
org.apache.commons.math.linear.BlockRealMatrix#int#blockWidth#?,int#1684	((blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == p1	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows < columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > q2	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows < columns	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == b	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != relativeError	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY >= dx	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX <= y	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows == columns	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#156	(ret)>= 0	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= iHeight	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar >= y	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#computeCorrelationMatrix#?,RealMatrix#190	!(j < i)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < b	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= q1	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#168	blockData[index].length != iHeight * blockWidth(jBlock)	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#304	(sumXY / sumXX)== 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == c	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY != y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > q2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == a	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX < dy	0
org.apache.commons.math.linear.BlockRealMatrix#int#getRowDimension#?#1345	(rows)> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= x	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getRSquare#?#456	((ssto - getSumSquaredErrors()) / ssto)!= 0	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= iHeight	0
org.apache.commons.math.linear.BlockRealMatrix#double[]#getColumn#?,int#1196	i < iHeight	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == c	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX == x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY > x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > x	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows < rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < epsilon	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY != dx	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > a	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < r	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != r	0
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#143	(ret)<= 0	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar < x	0
org.apache.commons.math.linear.BlockRealMatrix#void#setEntry#?,int,int,double#1259	blocks[iBlock * blockColumns + jBlock][k] <= value	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows <= columns	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX == dx	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#239	p < pEnd	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows < columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < p2	1
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret < b	0
org.apache.commons.math.distribution.TDistributionImpl#void#setDegreesOfFreedomInternal#?,double#93	this.degreesOfFreedom == newDegreesOfFreedom	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > p1	0
org.apache.commons.math.distribution.TDistributionImpl#void#setDegreesOfFreedomInternal#?,double#93	this.degreesOfFreedom < newDegreesOfFreedom	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < p2	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum != g	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == blockIndex	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < p0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY != dy	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= pStart	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar > x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < p2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= epsilon	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows == rows	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < iHeight	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != q0	0
org.apache.commons.math.linear.BlockRealMatrix#int#blockHeight#?,int#1675	((blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE)> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != r	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= q1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#113	(ret)== 0	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > rows	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= blockRows	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar != x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == q1	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows == columns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < p0	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret > tmp	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= jWidth	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY >= y	0
org.apache.commons.math.linear.BlockRealMatrix#int#getColumnDimension#?#1351	(columns)>= 0	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#304	(sumXY / sumXX)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == q1	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > blockIndex	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > iHeight	1
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret > epsilon	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= a	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret >= sum	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum < x	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns < rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= a	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < rows	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != iBlock	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar >= y	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows <= rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= p2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY == y	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > x	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#164	i < nVars	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum == x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == relativeError	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != columns	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY <= y	0
org.apache.commons.math.linear.BlockRealMatrix#int#getRowDimension#?#1345	(rows)>= 0	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#230	(regression.getR())!= 0	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getSumSquaredErrors#?#337	(Math.max(0d,sumYY - sumXY * sumXY / sumXX))>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != relativeError	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns >= columns	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#272	iBlock < blockRows	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum >= g	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#214	length != columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= p2	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= columns	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY <= dy	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > pEnd	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= relativeError	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns < columns	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != jWidth	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret != t	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != p0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY > dx	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == p1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= c	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar == x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= b	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret > x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= c	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != q2	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getR#?#437	(result)>= 0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#138	!(n > 2)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != p1	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret < sum	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > a	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= q1	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY >= y	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret > a	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows <= columns	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar >= y	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == c	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < a	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret != epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= p1	1
org.apache.commons.math.linear.BlockRealMatrix#int#getRowDimension#?#1345	(rows)== 0	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < jBlock	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == a	1
org.apache.commons.math.distribution.TDistributionImpl#void#setDegreesOfFreedomInternal#?,double#93	this.degreesOfFreedom != newDegreesOfFreedom	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY <= x	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY == x	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] != t	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] <= t	1
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#54	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > c	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows <= columns	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#167	jBlock < blockColumns	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#230	(regression.getR())== 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < x	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar < dx	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#156	(ret)> 0	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != blockColumns	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar == dx	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= x	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY == dy	0
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#56	!(rowDimension <= 0)	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= blockColumns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > epsilon	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX >= dy	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#227	i < xArray.length	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows > columns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= epsilon	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != r	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > b	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getRSquare#?#456	((ssto - getSumSquaredErrors()) / ssto)> 0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar < x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < b	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= relativeError	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#227	!(i < xArray.length)	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar <= y	0
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#143	(ret)> 0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar < y	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != qEnd	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != x	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns == columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= b	0
org.apache.commons.math.linear.BlockRealMatrix#double#getEntry#?,int,int#1242	(blocks[iBlock * blockColumns + jBlock][k])>= 0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret == x	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#164	!(i < nVars)	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX > dy	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret != g	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar >= x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= p1	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#165	j < nVars	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > blockColumns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= c	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar != y	0
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= x	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY < dx	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#175	infinite	1
org.apache.commons.math.distribution.TDistributionImpl#void#setDegreesOfFreedomInternal#?,double#93	this.degreesOfFreedom >= newDegreesOfFreedom	0
org.apache.commons.math.linear.BlockRealMatrix#int#getColumnDimension#?#1351	(columns)== 0	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] == t	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret != b	0
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy > inverseCumAccuracy	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret == sum	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == relativeError	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#205	(c)<= 0	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar >= dy	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#212	i < rawData.length	0
org.apache.commons.math.linear.BlockRealMatrix#double#getEntry#?,int,int#1242	(blocks[iBlock * blockColumns + jBlock][k])<= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > p1	0
org.apache.commons.math.linear.BlockRealMatrix#void#setEntry#?,int,int,double#1259	blocks[iBlock * blockColumns + jBlock][k] != value	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= q2	0
org.apache.commons.math.linear.BlockRealMatrix#double#getEntry#?,int,int#1242	(blocks[iBlock * blockColumns + jBlock][k])> 0	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < blockColumns	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows != rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != q2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > epsilon	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY > y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= c	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != a	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#136	x < 0.0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != relativeError	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#113	(ret)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < relativeError	1
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#54	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))< 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > a	1
org.apache.commons.math.linear.BlockRealMatrix#void#setEntry#?,int,int,double#1259	blocks[iBlock * blockColumns + jBlock][k] >= value	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= q1	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getTotalSumSquares#?#354	(sumYY)< 0	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret <= t	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#135	n < maxIterations && relativeError > epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > epsilon	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= blockRows	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= jBlock	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < r	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#173	!(copyArray)	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX < dx	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == columns	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns == rows	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getTotalSumSquares#?#354	(sumYY)>= 0	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows != rows	0
org.apache.commons.math.stat.regression.SimpleRegression#void#setDistribution#?,TDistribution#617	!(n > 2)	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows == columns	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#175	!(infinite)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > p1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= a	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != x	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns >= rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= p1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= p0	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows >= columns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < b	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY < x	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > qEnd	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= q0	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#199	(ret)>= 0	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#138	n > 2	0
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy >= inverseCumAccuracy	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > epsilon	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret >= g	0
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret > t	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX > x	1
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#61	columnDimension <= 0	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns != rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= q0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY <= x	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret < epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > c	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getRSquare#?#456	((ssto - getSumSquaredErrors()) / ssto)>= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < c	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns != columns	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar <= dx	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] <= r	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == b	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > r	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar != dx	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows < rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < r	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX != x	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns >= rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= r	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret != x	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows == columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < r	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= p	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= x	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY == dx	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#void#checkSufficientData#?,RealMatrix#275	!(nRows < 2 || nCols < 2)	0
org.apache.commons.math.linear.BlockRealMatrix#int#getColumnDimension#?#1351	(columns)<= 0	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX <= y	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#272	!(iBlock < blockRows)	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows >= rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= a	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getSumSquaredErrors#?#337	(Math.max(0d,sumYY - sumXY * sumXY / sumXX))<= 0	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= blockColumns	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < qEnd	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= blockIndex	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX >= x	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == iHeight	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX < x	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY <= dy	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#156	(ret)<= 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > q2	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns <= columns	0
org.apache.commons.math.linear.BlockRealMatrix#int#blockWidth#?,int#1684	((blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE)== 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == q0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= relativeError	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < epsilon	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows > rows	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar == y	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns > rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#135	!(n < maxIterations && relativeError > epsilon)	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#void#checkSufficientData#?,RealMatrix#275	nRows < 2 || nCols < 2	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY == x	1
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy > degreesOfFreedom	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY == y	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#228	jBlock < blockColumns	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#304	(sumXY / sumXX)< 0	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != jBlock	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == p2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == relativeError	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX != dy	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar > dy	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY != y	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != qStart	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar <= dy	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret > g	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY < y	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getR#?#437	(result)== 0	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns != rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != epsilon	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#125	!(x > (a + 1.0) / (a + b + 2.0))	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows > rows	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#226	!(xArray.length == yArray.length && xArray.length > 1)	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#205	(c)== 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < q1	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar >= dy	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#computeCorrelationMatrix#?,RealMatrix#190	j < i	0
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy != inverseCumAccuracy	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != c	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret <= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == r	1
org.apache.commons.math.linear.BlockRealMatrix#double#getEntry#?,int,int#1242	(blocks[iBlock * blockColumns + jBlock][k])== 0	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] == r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < q2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != q1	1
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#156	(ret)!= 0	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows >= columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= a	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#171	out[i][j] >= r	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar < x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= q2	1
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#54	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))== 0	1
org.apache.commons.math.linear.BlockRealMatrix#int#blockHeight#?,int#1675	((blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > c	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns <= columns	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < p0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY < dx	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getSumSquaredErrors#?#337	(Math.max(0d,sumYY - sumXY * sumXY / sumXX))> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == epsilon	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == r	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= p	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > p2	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns != rows	1
org.apache.commons.math.linear.BlockRealMatrix#int#blockWidth#?,int#1684	((blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE)> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= c	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > p1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == q0	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#143	(ret)< 0	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= qEnd	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getTotalSumSquares#?#351	n < 2	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar > dy	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar < dx	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum != g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= relativeError	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY < y	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != pEnd	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#156	copyArray	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError != p2	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows >= columns	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns <= rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > a	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= pEnd	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= q2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#184	!(Double.isNaN(r))	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == q2	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar > x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == epsilon	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= b	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar > dx	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= a	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == p	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= relativeError	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar == dx	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError <= p1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum < x	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#122	n == 0	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns == rows	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#136	!(x < 0.0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > epsilon	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns > columns	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY > y	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > q0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY >= y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= q2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < q0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < x	1
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#121	Double.isNaN(x) || Double.isNaN(a) || Double.isNaN(b)|| (x < 0)|| (x > 1)|| (a <= 0.0)|| (b <= 0.0)	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= p2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == q2	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum != x	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= qEnd	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#103	i > 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == p0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar < y	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar <= y	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#142	!(Double.isInfinite(p2) || Double.isInfinite(q2))	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getSumSquaredErrors#?#337	(Math.max(0d,sumYY - sumXY * sumXY / sumXX))== 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != epsilon	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == p2	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#134	sumX == y	1
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#230	(regression.getR())> 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > q1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c >= p1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == p2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == a	0
org.apache.commons.math.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#544	!(column < 0 || column >= m.getColumnDimension())	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == c	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#135	sumY != x	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret > sum	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#276	!(jBlock < blockColumns)	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#103	!(i > 0)	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index <= iBlock	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == r	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#298	!(n < 2)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < q1	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns == rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#setDistribution#?,TDistribution#617	n > 2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == epsilon	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret <= sum	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getR#?#437	(result)> 0	0
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret >= x	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret >= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= relativeError	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum > x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < q2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > p0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= relativeError	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError >= x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= p1	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#304	(sumXY / sumXX)!= 0	0
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret >= t	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY > dy	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX >= x	0
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#156	(ret)== 0	1
org.apache.commons.math.linear.BlockRealMatrix#int#blockWidth#?,int#1684	((blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 == b	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY != dy	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY >= dy	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= x	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar > x	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns > columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == b	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > r	0
org.apache.commons.math.distribution.TDistributionImpl#void#setDegreesOfFreedomInternal#?,double#93	this.degreesOfFreedom <= newDegreesOfFreedom	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= p1	0
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#143	(ret)!= 0	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	blockColumns < rows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != x	0
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#230	(regression.getR())< 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < r	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum > g	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == pEnd	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= r	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret == b	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar != dy	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows < rows	0
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy == inverseCumAccuracy	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret <= g	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 > relativeError	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY != y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == p2	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret >= tmp	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < epsilon	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar >= x	1
org.apache.commons.math.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#544	column < 0 || column >= m.getColumnDimension()	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == p2	1
org.apache.commons.math.linear.BlockRealMatrix#double[]#getColumn#?,int#1193	iBlock < blockRows	0
org.apache.commons.math.linear.BlockRealMatrix#int#blockHeight#?,int#1675	((blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE)< 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= b	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX == dy	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < b	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 >= relativeError	0
org.apache.commons.math.distribution.TDistributionImpl#void#setDegreesOfFreedomInternal#?,double#88	!(newDegreesOfFreedom <= 0.0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 != c	0
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy == degreesOfFreedom	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#298	n < 2	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	blockRows >= rows	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 < a	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#104	sum == g	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 > b	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= epsilon	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == blockColumns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == r	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 == b	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > q1	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret < g	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns == columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c != p1	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret < a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= r	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY <= x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < p0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#205	(c)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#122	!(n == 0)	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > x	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < iBlock	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= r	1
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#56	rowDimension <= 0	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index >= jBlock	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar == y	1
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#192	Double.isNaN(a) || Double.isNaN(b) || (a <= 0.0)|| (b <= 0.0)	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c > q0	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != blockRows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#199	n >= maxIterations	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < a	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != q1	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index > qStart	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 != a	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > relativeError	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < blockRows	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < epsilon	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getRSquare#?#456	((ssto - getSumSquaredErrors()) / ssto)== 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > r	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < p1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= r	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 > relativeError	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == q2	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns == columns	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 < p1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= b	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY >= dy	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getTotalSumSquares#?#354	(sumYY)<= 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= q0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar >= x	1
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret != a	0
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#199	(ret)== 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError > b	0
org.apache.commons.math.linear.BlockRealMatrix#int#getRowDimension#?#1345	(rows)!= 0	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 != p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != q1	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= q2	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows != columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar != x	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError < b	1
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#121	!(Double.isNaN(x) || Double.isNaN(a) || Double.isNaN(b)|| (x < 0)|| (x > 1)|| (a <= 0.0)|| (b <= 0.0))	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= q2	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar != dx	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#189	relativeError == q0	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar != y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c <= b	1
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret > b	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != iHeight	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 == relativeError	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#150	this.columns < columns	1
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	ret >= b	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index == jWidth	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c < q0	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret == tmp	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX > dx	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 >= p1	0
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	sum == g	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 >= epsilon	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < p2	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#192	c == x	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > q1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 <= b	1
org.apache.commons.math.linear.BlockRealMatrix#int#getRowDimension#?#1345	(rows)<= 0	1
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#301	Math.abs(sumXX) < 10 * Double.MIN_VALUE	1
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy < inverseCumAccuracy	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	ret < t	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < p0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 <= p1	0
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#304	(sumXY / sumXX)<= 0	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#131	xbar < y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 <= epsilon	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY <= dx	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 < p1	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != r	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#132	ybar <= y	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 >= r	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX == y	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < pEnd	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows > rows	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#128	sumXX < y	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY > dy	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#149	this.rows != rows	1
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	this.columns >= rows	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index != rows	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar > y	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar == y	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	blockColumns != columns	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	blockRows > columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 == relativeError	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	sumYY != dx	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar > y	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#128	x == 0.0	1
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#199	(ret)!= 0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#123	xbar == y	1
org.apache.commons.math.linear.BlockRealMatrix#int#blockHeight#?,int#1675	((blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE)== 0	1
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#54	(regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE))<= 0	1
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	ret != tmp	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#194	p1 <= a	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	this.rows == rows	0
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#239	!(p < pEnd)	0
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	solverAbsoluteAccuracy <= inverseCumAccuracy	0
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#168	!(blockData[index].length != iHeight * blockWidth(jBlock))	0
org.apache.commons.math.linear.BlockRealMatrix#int#getColumnDimension#?#1351	(columns)< 0	1
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#143	(ret)== 0	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#193	p0 != p2	0
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#195	q0 > p2	0
org.apache.commons.math.distribution.TDistributionImpl#void#setDegreesOfFreedomInternal#?,double#88	newDegreesOfFreedom <= 0.0	1
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	index < columns	1
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#196	q1 < q0	0
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#124	ybar != y	1
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#130	sumXY >= x	0