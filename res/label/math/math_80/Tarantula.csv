line	predicate	lable
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] != si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] > lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#680	realEigenvalues[i] < tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] < eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi <= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right <= relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left == absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1544	!(end - start > 3)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#678	i < j	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin <= diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] != minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong != n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] > di	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper != margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left <= right	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin >= offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1315	dMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] > li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] == ePrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1386	dMin == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left > upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] >= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] >= diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper <= absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong != n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#961	!((MathUtils.SAFE_MIN * work[i + 2] < work[j]) && (MathUtils.SAFE_MIN * work[j] < work[i + 2]))	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin <= offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1382	work[j4 - 2] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j >= step	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#956	work[i] <= TOLERANCE_2 * d	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j != n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] >= eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] > diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1162	i < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin > diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 != i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower > margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#851	dN2 == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left != middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot >= dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower >= right	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z >= n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right != left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi == t	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 >= eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra == eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#852	tau != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z <= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right <= tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right > range	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1312	work[j4 - 2] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI > nM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent >= ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 <= j4	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left == upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] != pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right == left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 <= n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1353	eMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax != offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] != t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1315	dMin >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin <= offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 >= i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 > n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1301	dMin2 >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si > lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left == margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r != i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] < eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1397	dMin != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] > diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] <= offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#874	diagMin >= 4 * offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di < ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 == eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] <= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r >= sixI	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 > start	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right >= margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] != n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left >= upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di >= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax >= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1385	dN1 > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 <= k	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right < margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left < upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z > n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] >= diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] != eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] != di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra > ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] == si	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j <= n	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI < r	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] != si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#852	tau >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 > j4	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent < ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 <= i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi >= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot >= upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1139	work[i + k] <= tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left != absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 <= j4	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1405	dN == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] < di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di != eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1163	lower <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] > si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] == diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] > ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 > minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 < start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1309	dMin1 == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent > ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] <= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra <= dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] >= ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1419	work[j4 + 2] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 < start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1387	eMin >= d	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,RealVector#870	(dotProduct((ArrayRealVector)v))== 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] >= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 != j4p2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] > diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow >= t	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] != diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1121	(deflatedEnd)> 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG < absG	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow > shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left > middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#699	absDCurrent > absDPrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] > splitTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] > diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#680	realEigenvalues[i] > tmp	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z < eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1081	!((dMin >= 0) && (dMin1 > 0))	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin != offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma <= shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 >= j4p2	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] <= n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#RealVector#getEigenvector#?,int#336	!(eigenvectors == null)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r > i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right > upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra >= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] > lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di < ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1564	a2 < cnst1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#852	tau <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI < i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 <= n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left >= range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1312	work[j4 - 2] < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] == minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] == eiM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right > left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1304	work[j4 - 2] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] != di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] < diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] >= eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] <= si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma <= shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#869	!(i >= 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] != diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower == relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1099	!(dMin1 > 0.0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] <= di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra == radius	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1527	!(dMin == dN2)	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1386	dMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] <= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma > t	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right < upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1301	dMin2 < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] >= eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 < end	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] == upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left <= margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower != absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] < eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z <= n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] == diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1015	(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) || (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11])	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1404	work[j4] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di == ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1439	dMin <= 0.0	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] > minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma >= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 > z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong > k	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left != absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right < tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] <= radius	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] != ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong != i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot > eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] < s	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] > liP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] > n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right > margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left < relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right > margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax < diagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI > m	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1181	!((range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left),Math.abs(right))))	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1385	dN1 <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 > minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1318	work[4 * end - pingPong - 1] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra >= eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong > maxIter	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1684	sigmaLow >= shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] >= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] > di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] <= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra < radius	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1313	work[j4] > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left >= relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] == minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#850	dN1 > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower < margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1317	work[j4 + 2] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] != n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#959	work[j + 2] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1163	lower >= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin < diagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 >= start	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] == z	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] < minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra <= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi < t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] > si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] != diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong == n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] >= mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left <= tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1301	dMin2 > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] > di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin > diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI <= m	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] < ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 < z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1338	work[j4 - 2] == 0.0	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1085	(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))&& (Math.abs(dN) < TOLERANCE * sigma)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1305	work[j4] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI != i	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j >= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z >= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong >= k	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra > eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong > n0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] == ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] <= di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] != liP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] < di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#846	tType < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1276	dMin < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 >= n	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#847	dMin1 < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] < t	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG <= absG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#944	work[i + 2] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left <= margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] >= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] >= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#957	work[i] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z == minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z < n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di == mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left > relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right >= relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1053	(dMin <= 0) || (deflatedEnd < end)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI <= i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra == eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper <= right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax >= offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di >= ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow != t	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow == t	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower <= left	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower != margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#849	dN != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow != t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] == mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] == ePrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] >= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] != eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#680	realEigenvalues[i] != tmp	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right >= upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z <= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] <= ePrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 > j4	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right != absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] < dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] != t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 >= start	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#851	dN2 >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 == k	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra >= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] < dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#997	!(deflating)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#849	dN == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 == eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra >= radius	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1015	!((start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) || (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11]))	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1084	(deflatedEnd)> 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper >= left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] <= si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1495	!(work[nn - 9] > work[nn - 11])	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd == k	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1404	work[j4] > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin > diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra > lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left < relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#937	pingPong != n	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left != range	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1001	(deflatedEnd)> 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot < eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 != start	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower >= absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] > li	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper >= margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper >= relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 >= end	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1763	i >= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 < k	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot <= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin >= offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] <= pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] >= mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1001	(deflatedEnd)>= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra < ePrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1137	k < 4	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] <= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] > li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma <= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1084	(deflatedEnd)<= 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#199	i < squaredSecondary.length	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] >= n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] != radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] != mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] >= ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] < eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] <= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] < eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax >= diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 < eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1020	work[k - 3] > work[k - 7]	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] > eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra < dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin > diagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin == offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left <= tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG <= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow <= shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1315	dMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] > eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] < di	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right == range	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1277	dMin1 != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] > li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#888	i0 < n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] != diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1404	work[j4] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] >= n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] > eMax	0
org.apache.commons.math.linear.ArrayRealVector#RealVector#subtract#?,double[]#285	i < data.length	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1164	upper <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1382	work[j4 - 2] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1417	dMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 <= start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1408	!((MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]))	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#672	begin < n	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI != i	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si != liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong < k	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z != n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1054	flipIfWarranted(deflatedEnd,1)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1378	dN2 != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] != di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1378	dN2 == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra != ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] > eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra != eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper >= tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] >= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd < k	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 == z	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] > dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1750	!(absG < minG)	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1121	(deflatedEnd)< 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left <= relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z <= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] < upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1309	dMin1 < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] != di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#955	work[j] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left > right	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right == absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#956	!(work[i] <= TOLERANCE_2 * d)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left < relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right > relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z <= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1239	(count)<= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right >= middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si > liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] >= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1397	dMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] > minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi >= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent >= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right == relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong > n0	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right > middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 > n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra >= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] > eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1163	lower < upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#899	!((pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax)&& (work[4 * n0 - 2] <= TOLERANCE_2 * sigma))	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j <= i	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left < right	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1188	countEigenValues(middle,index,n) >= 1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper > tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] == diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] != offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] == si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#848	dMin2 <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1233	i < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent == eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#831	sumOffDiag >= ei	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right > relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1343	(MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1])	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 >= z	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right < range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra == eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] >= z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right >= left	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper <= left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1306	dN1 < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma == shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin == offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#697	!(i < secondary.length)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] <= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di > lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 == minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] <= mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z < n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra != eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] != si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] < li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] <= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra >= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z >= n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] > minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] != diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1239	(count)== 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z <= n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right == left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1378	dN2 > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower != right	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] > si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] >= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] <= dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left <= range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] > lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 >= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#850	dN1 <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi != diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si <= liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] == pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] != di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 < maxIter	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper < relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax == offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1140	work[j - k] < tmp	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1384	work[j4] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right == margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z == n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#953	i < 4 * n - 2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] < di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1828	i >= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1684	sigmaLow > shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si == liP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] >= ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] != diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 <= maxIter	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI > r	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra <= eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#846	tType <= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#958	work[j] > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1800	i < nM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot < upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot < eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z >= n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z > minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] < diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] < eiM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right < middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1318	work[4 * end - pingPong - 1] == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] == ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] >= dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] > lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] <= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper < margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1020	!(work[k - 3] > work[k - 7])	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z <= n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1333	dMin == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#971	work[4 * n - 3 - pingPong] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] <= offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] <= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong == k	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] <= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra > eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] <= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] == eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1527	dMin == dN2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1337	work[j4 - 2] < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] == n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI != nM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z >= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi > diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] != pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di == eiM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax < diagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra == lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] < liP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot <= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 != n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd == start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot != eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax >= offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1313	work[j4] >= d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] == di	1
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,double[]#889	(dot)> 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#959	work[j + 2] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] >= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 != end	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong != n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] == liP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z != minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra > ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#850	dN1 == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right >= tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong != i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right != middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#848	dMin2 < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] >= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di > eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1777	i < m	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1407	eMin >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#937	pingPong >= n	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] < minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 <= start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1312	work[j4 - 2] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra != eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1094	dMin < 0.0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#857	n0 > 0	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,ArrayRealVector#900	(dotProduct(v.data))!= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1307	dMin == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra >= radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right <= absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] >= diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong >= maxIter	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z == minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] == eiM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#955	work[j] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1309	dMin1 >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower == absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower != tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left != margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin == offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 == i	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right <= margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1419	work[j4 + 2] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1276	dMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] <= pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI == i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong >= n0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra < lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra > radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong >= i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1301	dMin2 <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin >= offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 >= end	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right < relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI == r	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1318	work[4 * end - pingPong - 1] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left == right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] >= eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] == diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra <= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#955	work[j] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper >= absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z > eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra != ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper == left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong < n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd > end	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left <= margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong >= k	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1200	!(i < maxIter)	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 >= i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 != k	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left != margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1684	sigmaLow != shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] != splitTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax > diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right != left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1408	(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1337	work[j4 - 2] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1093	(deflatedEnd)== 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] >= si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong > i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow < shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax > diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] < diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 >= k	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper <= tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1318	work[4 * end - pingPong - 1] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1081	(dMin >= 0) && (dMin1 > 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#971	work[4 * n - 3 - pingPong] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si != li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 == end	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] > t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 == n0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] <= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] != z	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower < relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#861	sigmaLow < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1006	!((start == deflatedEnd - 1) || ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))))	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] < pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra <= ePrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j > step	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong <= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra == eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#847	dMin1 > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1305	work[j4] == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] == minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z == minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1352	dMin >= d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] == eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1763	!(i >= 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent <= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] != ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#953	!(i < 4 * n - 2)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1353	eMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI < i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax >= diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 > j4p2	0
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#699	absDCurrent == absDPrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower >= margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 != n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] >= lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] > di	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 < z	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z < eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd != end	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI <= i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin != diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1385	dN1 == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1279	!(pingPong == 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] >= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow > t	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong <= i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#579	i < m - 1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left < absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#672	begin >= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] >= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si >= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd < end	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1300	dN2 > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 <= end	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra >= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right == middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin != offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] > pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra <= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z >= eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1402	work[j4 - 2] < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left >= tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left >= upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent > dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper < right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG != eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower < right	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1405	dN >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI != m	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI < i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#889	!(k >= maxIter)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin != offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right == tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#681	realEigenvalues[j] == tmp	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax >= ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 > end	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1164	upper != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1276	dMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left >= absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left <= absoluteTolerance	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,ArrayRealVector#900	(dotProduct(v.data))> 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] >= si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] != li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#861	sigmaLow > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1769	!(i < m)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 <= end	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma > shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] > eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1234	ratio == t	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z == n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper > margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1407	eMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin >= offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] >= z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra != radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z < n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower > tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax != offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] < splitTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left < tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] != eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1479	dMin == dN	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 == n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di == ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper <= margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow <= shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent <= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] <= eiM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin == diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper < absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1140	work[j - k] <= tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra > eMax	0
org.apache.commons.math.linear.ArrayRealVector#void#checkVectorDimensions#?,int#1287	!(data.length != n)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#955	work[j] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1279	pingPong == 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] < si	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j < i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] != di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1305	work[j4] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1406	dMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1234	ratio >= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right >= margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1313	work[j4] < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] > radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1420	work[4 * end - pingPong - 1] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1399	dMin1 == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax != offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j == n	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] < eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper == tNorm	1
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,ArrayRealVector#900	(dotProduct(v.data))< 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di > eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right <= absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left >= margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1307	dMin < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1335	!(pingPong == 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] < t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#851	dN2 > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] == si	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower >= upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] > radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1402	work[j4 - 2] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1094	!(dMin < 0.0)	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left > middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] == eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] == liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] <= si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#831	sumOffDiag < ei	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 < eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left <= absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left >= right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#869	i >= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] > lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 >= maxIter	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] > offDiagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra > lower	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,double[]#889	(dot)<= 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right == relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si == li	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] != eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong > n	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower > right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra < eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] == li	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#831	sumOffDiag == ei	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] <= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] != mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#846	tType != n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1314	dN > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra >= eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] < diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] < z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1384	work[j4] < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z != eigenvalue	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,RealVector#870	(dotProduct((ArrayRealVector)v))<= 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1684	sigmaLow == shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] >= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra != eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI != r	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra == eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#957	work[i] > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] < z	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd >= k	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] < radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left >= upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1084	(deflatedEnd)!= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin != offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] < ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma < t	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#870	!(work[i + 2] <= 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra < eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1343	!((MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1]))	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax < eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] < diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left > relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper >= right	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z <= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] <= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1335	pingPong == 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 != maxIter	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left > margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow < t	0
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] == splitTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#697	i < secondary.length	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1235	ratio <= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1399	dMin1 <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left >= margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong >= n	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left == right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1276	dMin >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#204	this.splitTolerance != splitTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right > tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] >= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left > margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow != shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] > di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#672	begin != n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] <= diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z != eigenvalue	0
org.apache.commons.math.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#97	d == null	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1304	work[j4 - 2] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right < relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1307	dMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] != di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] >= si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#870	work[i + 2] <= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong == n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] == diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1379	dMin2 > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] != ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong <= i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] > mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] > lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1067	(dMin < 0) || (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1],Math.min(work[l - 9],dMin2 + work[l - 2 * pingPong])))	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] != lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1384	work[j4] > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax == diagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 == end	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1096	tType < -22	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] < di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax == diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1304	work[j4 - 2] <= d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left < tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#937	pingPong == n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] < t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong != k	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] <= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] > di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma >= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1387	eMin <= d	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,double[]#889	(dot)== 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left == relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#828	!(i < n - 1)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1417	dMin < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI <= nM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] > offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left > right	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] <= z	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#997	deflating	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] == eiM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] > mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] >= lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di >= ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1387	eMin < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#944	work[i + 2] > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] > dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI != nM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right != absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] < di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1397	dMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r != m	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi > t	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left == tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1352	dMin < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] == eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] <= ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax != ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] <= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r == m	1
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#699	absDCurrent <= absDPrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#937	pingPong > n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] >= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] != ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin != diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 < end	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1318	work[4 * end - pingPong - 1] < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#831	sumOffDiag != ei	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right > upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow > t	1
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] <= s	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1402	work[j4 - 2] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] > upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 == j4p2	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left > upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI > i	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower != left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] >= pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] < di	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] <= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] != di	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z != n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] >= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent != ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1710	i < m	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 == i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1405	dN <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] == t	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r <= sixI	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI == m	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#849	dN > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong == i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di <= mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#958	work[j] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] == li	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right >= margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#861	sigmaLow >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 < j4p2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] >= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#958	work[j] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r >= m	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 < j4	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 == minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI < m	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#680	realEigenvalues[i] <= tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1235	!(ratio <= 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin < offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 <= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right != relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 > start	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z > eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] >= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1026	!(work[k - 5] > TOLERANCE_2 * work[k - 3])	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1314	dN < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 > z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] != li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] != eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra <= ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd == end	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left <= tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] <= si	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1239	(count)>= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] >= pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#661	chooseLeft	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] < n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z < minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin > offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi < diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] > eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1387	eMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax > offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] < diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1084	(deflatedEnd)== 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left <= middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r >= i	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] >= offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right != tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin != diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left == absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1384	work[j4] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right > upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#848	dMin2 == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 > j4p2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] > lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si == diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin < offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1203	!((range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left),Math.abs(right))))	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right >= range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] <= mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] <= pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left != relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] < li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax <= diagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 >= end	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 < end	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 == end	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra <= upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] < eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] <= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI <= r	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#944	work[i + 2] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1748	i < m - 1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right == absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1306	dN1 > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI < nM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] < si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#971	work[4 * n - 3 - pingPong] < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra >= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left != absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] != eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra >= dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra < eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1313	work[j4] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] == n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right > absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] != upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] > dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right > absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#579	!(i < m - 1)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1383	work[j4 - 2] == 0.0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1750	absG < minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1317	work[j4 + 2] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1386	dMin >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi > di	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI <= i	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper == relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di == eiM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot >= eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#860	sigma < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 >= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] <= ratio	1
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,ArrayRealVector#900	(dotProduct(v.data))== 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right <= left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] < radius	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] >= di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left > range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot == eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong == n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] >= n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] > di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1406	dMin == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] < inv	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right <= relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] != minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi < li	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] != z	1
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,RealVector#870	(dotProduct((ArrayRealVector)v))!= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] == n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] >= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left >= relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z != n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] < liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1385	dN1 < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] != minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong <= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1164	upper > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong >= n	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z < eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1315	dMin != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1406	dMin != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] >= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j == i	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z != minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra < ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 <= j4p2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#672	begin == n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow >= shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j >= i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] <= pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1136	i < j	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd >= end	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi != li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] == di	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG == eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] < dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax < dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1314	dN == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1317	work[j4 + 2] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin < diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI < nM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] > lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#849	dN < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di <= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right <= tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 < minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] > lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax < offDiagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1337	work[j4 - 2] <= d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot > dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#204	this.splitTolerance > splitTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] > pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#899	(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax)&& (work[4 * n0 - 2] <= TOLERANCE_2 * sigma)	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] >= lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong > k	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra <= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] != eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z != minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower == margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] != eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 > start	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z >= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#849	dN <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] != s	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi >= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] != diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] == radius	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#942	i >= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1352	dMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] > t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin > offDiagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] > lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right == tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 >= start	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#680	realEigenvalues[i] >= tmp	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 == z	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] <= ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] != eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1382	work[j4 - 2] < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra == upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di < eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#955	work[j] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right >= absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right == middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin == diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower <= right	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left < absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1313	work[j4] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower == tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra == eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] == inv	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] < li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 != n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI >= nM1	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,double[]#886	!(i < data.length)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] <= eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#959	work[j + 2] > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] > eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right > tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right != tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow == shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right <= left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1333	dMin >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] == eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax != diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1121	(deflatedEnd)== 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#958	work[j] != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1137	!(k < 4)	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1234	ratio != t	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1777	!(i < m)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left < margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 != start	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] >= si	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right == margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1276	dMin != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower >= relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] == diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1479	!(dMin == dN)	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z == eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left > lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z > eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1256	!(i < n)	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1140	work[j - k] != tmp	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] <= n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] != eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di != mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1312	work[j4 - 2] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1312	work[j4 - 2] == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin != diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] > si	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left > right	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right >= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] < ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] == diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#846	tType >= n	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower <= relativeTolerance	1
org.apache.commons.math.linear.ArrayRealVector#double#getNorm#?#909	(Math.sqrt(sum))< 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1277	dMin1 > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma == shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] < offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1403	!(work[j4 - 2] == 0.0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI == nM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1402	work[j4 - 2] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z < minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] > eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#849	dN >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right < left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra >= eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 < minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] > di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] > upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#204	this.splitTolerance <= splitTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] >= splitTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra <= radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#204	this.splitTolerance == splitTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax < offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#852	tau == sumOffDiag	1
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,ArrayRealVector#900	(dotProduct(v.data))<= 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 > end	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left == relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r <= i	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] < pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi <= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r < sixI	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] > eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot == upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1203	(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left),Math.abs(right)))	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 != minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1133	1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right < tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1239	(count)< 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong <= n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] > liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] <= diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1419	work[j4 + 2] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG != absG	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1301	dMin2 == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1379	dMin2 < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] >= eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1397	dMin == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#957	work[i] < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] < eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1378	dN2 < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1455	!(dMin == dN && dMin1 == dN1)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] != radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin > offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left != middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 == start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 < n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] > z	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1075	loop	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] >= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1309	dMin1 <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] >= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin < diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra <= dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1140	work[j - k] > tmp	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] > diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left < middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1379	dMin2 == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1495	work[nn - 9] > work[nn - 11]	1
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] > s	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra < dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left < tNorm	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,RealVector#870	(dotProduct((ArrayRealVector)v))>= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax == diagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#937	pingPong < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1386	dMin != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left > tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 != start	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z >= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] == diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong < i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right != range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI >= i	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 < i	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1096	!(tType < -22)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left >= relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra < radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] >= ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra <= eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG < eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#848	dMin2 >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z > minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z < minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] <= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right < left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#861	sigmaLow != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left == range	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z >= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1336	!(j4 < 4 * (end - 3))	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left < right	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] < minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] > di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong != maxIter	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax <= ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1317	work[j4 + 2] == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma < t	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower >= left	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right > left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong == k	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1300	dN2 == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1306	dN1 != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] == eiM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra >= ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma != t	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right > tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi != t	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left > tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma == t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] == eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong != n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra >= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong < k	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax == offDiagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 != j4	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di >= mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] == lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1085	!((dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))&& (Math.abs(dN) < TOLERANCE * sigma))	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] == radius	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] >= diP1	0
org.apache.commons.math.linear.ArrayRealVector#double#getNorm#?#909	(Math.sqrt(sum))!= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] >= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#678	!(i < j)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] >= si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1399	dMin1 < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] >= liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI >= i	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#666	!(i < n)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1407	eMin < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra == upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot < dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j < step	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] > eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] == s	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] > eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1387	eMin != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right != margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 < i0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 != end	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] > pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1538	!(work[np - 8] > b2 || work[np - 4] > b1)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower > relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1419	work[j4 + 2] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right == margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower < left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] < mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#846	tType > n	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd >= start	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 >= j4	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1333	dMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#851	dN2 != sumOffDiag	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,double[]#889	(dot)!= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right != margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra < dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong <= k	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] > t	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right >= left	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left <= middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1140	work[j - k] == tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] > z	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1719	i < m	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1312	work[j4 - 2] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 > n0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#942	!(i >= 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1384	work[j4] != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#847	dMin1 <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong == n0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1029	!(s <= t)	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left != tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] > mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] == liP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left >= absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 == n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 != n	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right >= absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left >= margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra > eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper == margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1420	work[4 * end - pingPong - 1] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right != relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] <= eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#959	work[j + 2] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG == absG	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1210	countEigenValues(middle,index,n) >= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di <= ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax <= diagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right >= relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] > z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] <= dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#857	!(n0 > 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] != liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra < dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] < pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right != margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] > ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#RealVector#getEigenvector#?,int#336	eigenvectors == null	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] >= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 > maxIter	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent != eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra != eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1564	!(a2 < cnst1)	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1449	dMin == dN || dMin == dN1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra <= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin > offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] >= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong < maxIter	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot > eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 <= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left > absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] < pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] < ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r == i	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd <= start	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1385	dN1 != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI == i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot != eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1163	lower == upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#971	work[4 * n - 3 - pingPong] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left >= right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] <= mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#860	sigma > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 <= start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra > lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 != z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 >= end	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma == t	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1029	s <= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent < dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1307	dMin >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] > diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra <= radius	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1307	dMin != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1353	eMin >= d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di < mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right != absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax >= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 == n	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right > left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] > eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1337	work[j4 - 2] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 != n	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left < middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1163	lower > upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#874	!(diagMin >= 4 * offDiagMax)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] < si	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] != eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left != range	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right <= upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1067	!((dMin < 0) || (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1],Math.min(work[l - 9],dMin2 + work[l - 2 * pingPong]))))	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] == n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] >= liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 >= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z == n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1276	dMin == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 != i	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin <= offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi > li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j != step	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] < eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong > n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#938	k < 2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] > di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1417	dMin != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right > absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1399	dMin1 != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] == li	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#957	work[i] != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1084	(deflatedEnd)< 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1315	dMin == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] == li	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 <= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma != shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] >= offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 != minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1314	dN >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right < middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1164	upper == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] <= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper <= relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] <= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 < end	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1239	(count)> 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right == upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1399	dMin1 >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] >= minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1420	work[4 * end - pingPong - 1] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right == upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] >= dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1388	(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left < right	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1379	dMin2 <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot > upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper == right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1386	dMin < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] > inv	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] >= lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left < range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1719	!(i < m)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1521	a2 < cnst1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin < offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 <= minG	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,RealVector#870	(dotProduct((ArrayRealVector)v))< 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di >= lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper != right	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1121	(deflatedEnd)!= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left > margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1093	(deflatedEnd)>= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1684	sigmaLow < shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] <= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] >= n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 > n	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z == eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1305	work[j4] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#681	realEigenvalues[j] <= tmp	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1181	(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left),Math.abs(right)))	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right == absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] != pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] != si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma > shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] <= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right == range	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin >= diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra <= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra <= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] < eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left != right	0
org.apache.commons.math.linear.ArrayRealVector#double#getNorm#?#909	(Math.sqrt(sum))>= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] < n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax < ePrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 >= start	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] >= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong == maxIter	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] < di	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI >= i	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI >= nM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1234	ratio <= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] <= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] >= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left == range	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] <= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] > liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left > upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi != di	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,double[]#889	(dot)>= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 > eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] == eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1337	work[j4 - 2] == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1139	work[i + k] != tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1140	work[j - k] >= tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right < upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin >= diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd < start	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra == ePrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1420	work[4 * end - pingPong - 1] < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left >= middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1417	dMin >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] == eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si <= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1378	dN2 <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax <= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] != upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1093	(deflatedEnd)< 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si < liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent > eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra > eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 > i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] != n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] == li	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi > lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di < eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left > relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower > absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left <= range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow >= shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left != tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin >= diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] < li	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left >= tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] > lambda	0
org.apache.commons.math.linear.ArrayRealVector#double#getNorm#?#909	(Math.sqrt(sum))<= 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma < shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1164	upper < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left > absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1162	!(i < n)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left < lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1053	!((dMin <= 0) || (deflatedEnd < end))	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left == middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#681	realEigenvalues[j] > tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] != minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#944	work[i + 2] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma > t	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1449	!(dMin == dN || dMin == dN1)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 != end	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd <= end	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] != ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1404	work[j4] != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin > diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left != right	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] < di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] >= lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 > end	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left >= absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1026	work[k - 5] > TOLERANCE_2 * work[k - 3]	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1277	dMin1 >= d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#957	work[i] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper != relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#680	realEigenvalues[i] == tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax > offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1417	dMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra == eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#861	sigmaLow == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#944	work[i + 2] < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#889	k >= maxIter	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1306	dN1 == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax != diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1405	dN != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right <= margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#938	!(k < 2)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right <= middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 >= n0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong >= i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong < n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#850	dN1 < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin >= diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left >= right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1459	!(gap1 > 0.0 && gap1 > b1)	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] < z	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi <= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1491	!(work[np - 4] > work[np - 2])	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si >= liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right != range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#958	work[j] == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow != shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra > eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower == left	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper != tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1121	(deflatedEnd)<= 0	1
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,RealVector#870	(dotProduct((ArrayRealVector)v))> 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1210	!(countEigenValues(middle,index,n) >= n)	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z <= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent >= dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left == absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin <= diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si < di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 >= j4p2	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left >= tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left < absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin == offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong >= n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower != relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1301	dMin2 != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin >= diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] < upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1683	shift < sigma	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left > absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin <= offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#699	absDCurrent != absDPrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1054	!(flipIfWarranted(deflatedEnd,1))	0
org.apache.commons.math.linear.ArrayRealVector#RealVector#subtract#?,double[]#285	!(i < data.length)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right == upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper > absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#834	sumOffDiag == 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1455	dMin == dN && dMin1 == dN1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower < absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right > middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra != eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper > left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] < offDiagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right != tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow > shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma >= shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] > lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 == j4p2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra >= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right < relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1234	ratio < t	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1139	work[i + k] < tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra > upper	0
org.apache.commons.math.linear.ArrayRealVector#double#getNorm#?#909	(Math.sqrt(sum))== 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax <= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] < li	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] != z	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right == left	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#999	start >= deflatedEnd	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] == pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#199	!(i < squaredSecondary.length)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1687	sigma >= shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#851	dN2 < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] <= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra < lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin < offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#701	!(Math.abs(secondary[i]) <= max)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#834	!(sumOffDiag == 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1406	dMin >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] < ePrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 < start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] > lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j <= step	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right < upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra >= dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1099	dMin1 > 0.0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left < range	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] <= z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 > start	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin != diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1306	dN1 <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] == eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 >= n	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j < n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#852	tau < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1300	dN2 != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax <= diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1402	work[j4 - 2] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right != middle	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1403	work[j4 - 2] == 0.0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#944	work[i + 2] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left != margin	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,ArrayRealVector#900	(dotProduct(v.data))>= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper > right	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1382	work[j4 - 2] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] > eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1383	!(work[j4 - 2] == 0.0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1317	work[j4 + 2] < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax > offDiagMin	0
org.apache.commons.math.linear.ArrayRealVector#double#getNorm#?#909	(Math.sqrt(sum))> 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 > eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] == ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin >= offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1333	dMin < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1402	work[j4 - 2] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax == ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 != eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] >= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left != relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1304	work[j4 - 2] < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left <= absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right < absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right <= relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left <= relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1093	(deflatedEnd)!= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra > dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1419	work[j4 + 2] < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1352	dMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 < j4p2	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 != eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1239	(count)!= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] == pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower < tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi == li	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1809	sixI == i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] <= n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma != shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right < left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] < mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] < ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r != sixI	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] <= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1404	work[j4] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot == eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1397	dMin >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 <= z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] == t	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1336	j4 < 4 * (end - 3)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] != mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left == tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow < shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin != offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi == diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#672	begin > n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 != end	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] > pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 > k	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1277	dMin1 < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left == tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1001	(deflatedEnd)!= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#961	(MathUtils.SAFE_MIN * work[i + 2] < work[j]) && (MathUtils.SAFE_MIN * work[j] < work[i + 2])	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] > ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right >= range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax > eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1388	!((MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]))	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 > n0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow < t	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r < i	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] != si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1353	eMin != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 != j4p2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1405	dN < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di > mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#672	begin <= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left < margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di >= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 > end	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent == ePrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#851	dN2 <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#831	sumOffDiag <= ei	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1768	z > n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] <= pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] != eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 != start	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] < di	0
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#699	absDCurrent >= absDPrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1385	dN1 >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1769	i < m	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] <= ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] == minG	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right == relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1404	work[j4] < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper == absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r < m	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] > dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#847	dMin1 == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] > pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#850	dN1 >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra == eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent < eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong >= n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1333	dMin != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right < tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot >= eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow <= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] >= eigenvalue	0
org.apache.commons.math.linear.ArrayRealVector#void#checkVectorDimensions#?,int#1287	data.length != n	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1001	(deflatedEnd)< 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 <= start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] == offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra == radius	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j == step	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin == diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI > nM1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] > diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1139	work[i + k] == tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] < eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right < margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right > range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong == i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] <= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1491	work[np - 4] > work[np - 2]	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#701	Math.abs(secondary[i]) <= max	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax != eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG > absG	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1353	eMin == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] != li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] == pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] <= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#860	sigma != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong > i0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1407	eMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra < upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#204	this.splitTolerance >= splitTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra < eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#943	!(work[i + 2] <= TOLERANCE_2 * d)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra > radius	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1684	sigmaLow <= shift	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra <= eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1420	work[4 * end - pingPong - 1] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] > lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower > upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] < di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] > li	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r > m	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left <= relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1353	eMin < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG >= absG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1459	gap1 > 0.0 && gap1 > b1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax > ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 > i	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left >= range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 <= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd != start	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper != left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#957	work[i] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1800	!(i < nM1)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right >= relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1300	dN2 >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax <= offDiagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] != li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] >= mu	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin < diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right <= absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1001	(deflatedEnd)== 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot <= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] != offDiagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right != relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1683	!(shift < sigma)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1277	dMin1 == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] >= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] != li	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper != absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1382	work[j4 - 2] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1439	!(dMin <= 0.0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#661	!(chooseLeft)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong != k	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] < n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#828	i < n - 1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] > diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] >= pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right == tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1538	work[np - 8] > b2 || work[np - 4] > b1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] < eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#860	sigma >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 != j4	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] < eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] <= di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 == maxIter	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] >= pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1305	work[j4] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left == margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1333	dMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1300	dN2 <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si != di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si >= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 == n0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#959	work[j + 2] != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper < left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] <= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra < eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] > ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] != diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi < di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#888	!(i0 < n0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1136	!(i < j)	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] > n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] <= liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1812	work[6 * nM1] < si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 <= j4p2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1352	dMin == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 >= eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower > left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma < shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z == eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#681	realEigenvalues[j] < tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower == right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#666	i < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1178	!(i < maxIter)	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] == li	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] > ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] != di	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower < upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1310	j4 <= end	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra > dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] <= si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#846	tType == n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax >= offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r > sixI	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra > dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] <= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] > di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] != pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#847	dMin1 != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 < start	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left <= right	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra < eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] <= radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] != eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] == mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra < upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] < n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower == upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#958	work[j] < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI >= r	0
org.apache.commons.math.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#97	!(d == null)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#831	sumOffDiag > ei	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si <= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra != eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1318	work[4 * end - pingPong - 1] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left == relativeTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] > ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] != pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax == eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#699	absDCurrent < absDPrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j > n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1710	!(i < m)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1521	!(a2 < cnst1)	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right >= upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#681	realEigenvalues[j] >= tmp	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1200	i < maxIter	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] <= inv	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] <= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1338	!(work[j4 - 2] == 0.0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] < li	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower >= tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si != diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1093	(deflatedEnd)> 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] != di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#860	sigma == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd > start	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#681	realEigenvalues[j] != tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 <= i	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] > eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot != lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1378	dN2 >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] >= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#971	work[4 * n - 3 - pingPong] > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1352	dMin != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si < diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra >= ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd > k	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax <= offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 >= z	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1188	!(countEigenValues(middle,index,n) >= 1)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#937	pingPong <= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1828	!(i >= 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] != lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin < offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left >= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left == middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax < diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1406	dMin < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#871	i0 < n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 != z	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left >= middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left != right	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] != li	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1164	upper >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] == eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra > eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] >= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong == n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 <= z	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r == sixI	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] >= diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow <= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#852	tau > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower <= margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong > n	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin <= diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1277	dMin1 <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1751	r <= m	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right < margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di <= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] >= inv	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#894	n0 < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1006	(start == deflatedEnd - 1) || ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])))	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin <= offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax == sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] == di	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left == upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin < sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right != left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong != n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] >= liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1233	!(i < n)	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,double[]#886	i < data.length	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 == start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] >= li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin > offDiagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] > n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left <= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1304	work[j4 - 2] != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI > i	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#868	i0 >= n0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] >= eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1690	sigmaLow >= t	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di > ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] >= z	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left > tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1317	work[j4 + 2] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left != relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left <= right	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right <= range	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] != t	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper > relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1256	i < n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] == mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1139	work[i + k] >= tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI >= m	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right > margin	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left > range	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1178	i < maxIter	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di > ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra > dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] == z	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right > relativeTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1234	ratio > t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] >= pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra != eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#955	work[j] < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] == si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax >= diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] == offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax > dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 == start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#881	work[4 * n0 - 2] < diagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong < i0	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1121	(deflatedEnd)>= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di != ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax <= offDiagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#583	eCurrent <= ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra > eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] < si	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] >= ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] != eiM1	0
org.apache.commons.math.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#100	d.length == 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot <= upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1764	z > minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1772	n2 <= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1397	dMin < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#876	offDiagMax > diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#860	sigma <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong <= n0	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] <= n2	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra > upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1001	(deflatedEnd)<= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] != di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra <= eMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1754	sixI > i	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1379	dMin2 != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin == diagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi >= diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1084	(deflatedEnd)>= 0	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#850	dN1 != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin <= diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1420	work[4 * end - pingPong - 1] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right >= middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 < j4	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] <= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	upperSpectra >= eMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1309	dMin1 != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left == margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#847	dMin1 >= sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma <= t	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] < eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1304	work[j4 - 2] == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1313	work[j4] == d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1337	work[j4 - 2] > d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI != i	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] <= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra < eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	work[6 * nM1 + 1] == si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1387	eMin == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left < upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1379	dMin2 >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si > diP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right < range	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si >= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1093	(deflatedEnd)<= 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] != n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di <= ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] <= lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#884	dMin <= diagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1306	dN1 >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	work[0] <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra <= dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right <= middle	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] < liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1709	d[0] < mu	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#895	pingPong <= maxIter	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1405	dN > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right >= left	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] < diP1	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 <= end	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#943	work[i + 2] <= TOLERANCE_2 * d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1314	dN <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left < margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] < minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	sigma != t	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 == j4	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] >= radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1834	work[sixI + 10] == t	1
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd != k	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#848	dMin2 != sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right <= tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1544	end - start > 3	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper > lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#974	pingPong <= k	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] != ePrevious	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI <= nM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	offDiagMin == diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax < offDiagMin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#592	work[upperStart + i] >= radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] != eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right < absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#971	work[4 * n - 3 - pingPong] != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1315	dMin < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1748	!(i < m - 1)	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1765	eigenvector[i] <= z	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1309	dMin1 > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower <= absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1133	!(1.5 * work[pingPong] < work[4 * (n - 1) + pingPong])	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1311	j4p2 == j4	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] < eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] > di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1399	dMin1 > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si > di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] >= ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1262	work[fourI] <= ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	work[3] < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] <= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di != ratio	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] == pi	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#604	minPivot != dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] >= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1163	lower != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1382	work[j4 - 2] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] == lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1400	j4 == start	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] >= di	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z != eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] > li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#600	lowerSpectra == lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] < lower	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1406	dMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1840	work[4] < pi	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#584	eMax == dCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1261	di < lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] < di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1417	dMin == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#886	pingPong <= n	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] >= di	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1419	work[j4 + 2] <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1013	deflatedEnd <= k	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right <= range	1
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j != i	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right <= margin	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax == offDiagMax	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1195	lower <= tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] == eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right >= absoluteTolerance	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right >= tNorm	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] >= eigenvalue	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 >= j4	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1407	eMin != d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#588	work[lowerStart + i] < dCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1142	j > i	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1770	z > n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1211	right <= left	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1714	l[i - 1] != di	0
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,double[]#889	(dot)< 0	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	diagMax != diagMin	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra >= eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] == eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right != upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1139	work[i + k] > tmp	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1761	eigenvector[r] > n2	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] > eCurrent	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] >= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] >= s	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1189	right < absoluteTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#602	work[upperStart + m - 1] == upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si <= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1715	d[i] == ratio	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1766	n2 <= minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin < diagMax	1
org.apache.commons.math.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#100	!(d.length == 0)	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#999	!(start >= deflatedEnd)	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] > lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1217	upper < tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1305	work[j4] < d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1771	eigenvector[i] > minG	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#848	dMin2 > sumOffDiag	1
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] == z	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	work[lowerStart + m - 1] <= lower	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] != lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1386	dMin <= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1384	work[j4] >= d	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#589	lowerSpectra != radius	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1837	sixI == nM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si < li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1260	work[fourI - 2] != eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1075	!(loop)	1
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	squaredSecondary[i] <= splitTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1300	dN2 < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] <= liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1198	left == upper	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] > si	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow == shift	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1307	dMin > d	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1407	eMin == d	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1778	eigenvector[i] != inv	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1835	work[sixI + 5] == lambda	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1833	work[sixI + 9] >= lambda	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra == ePrevious	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#593	upperSpectra < eCurrent	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	sigmaLow == t	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1836	pi == di	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1806	work[sixI + 1] != liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1401	j4p2 == end	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left < upper	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1213	left == right	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#875	diagMin == offDiagMax	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	di != eiM1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#959	work[j + 2] < d	1
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#204	this.splitTolerance < splitTolerance	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1807	work[sixI + 2] >= di	1
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1199	right >= tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG >= eigenvalue	1
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#861	sigmaLow <= sumOffDiag	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1805	work[sixI] <= liP1	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1808	si > li	0
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1314	dN != d	0
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1191	left != tNorm	0
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1752	minG > eigenvalue	1