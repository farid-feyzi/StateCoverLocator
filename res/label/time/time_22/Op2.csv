line	predicate	lable
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	!(value < 10)	0
org.joda.time.base.BaseDuration#long#getMillis#?#115	(iMillis)== 0	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#120	total < Integer.MIN_VALUE || total > Integer.MAX_VALUE	0
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))== 0	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)> 0	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)> 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset >= hours	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)< 0	0
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))> 0	0
org.joda.time.field.FieldUtils#int#safeToInt#?,long#185	((int)value)!= 0	0
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)== 0	0
org.joda.time.base.BaseDuration#long#getMillis#?#115	(iMillis)<= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#254	!(hoursOffset == 0 && minutesOffset == 0)	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)<= 0	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)< 0	0
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)> 0	0
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))< 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#551	isSupported(f=chrono.era())	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset <= standardOffset	0
org.joda.time.PeriodType#PeriodType#standard#?#103	type == null	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#518	isSupported(f=chrono.dayOfWeek())	0
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#49	cCache == null	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	value < 10	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#?#ZonedDurationField#?,DurationField,DateTimeZone#285	!field.isSupported()	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	!(isSupported(f=chrono.clockhourOfHalfday()))	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#102	!((val1 ^ diff) < 0 && (val1 ^ val2) < 0)	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())!= 0	0
org.joda.time.DateTimeUtils#PeriodType#getPeriodType#?,PeriodType#286	type == null	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] > size	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#539	isSupported(f=chrono.year())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#536	isSupported(f=chrono.monthOfYear())	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#527	isSupported(f=chrono.weekOfWeekyear())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#521	!(isSupported(f=chrono.dayOfMonth()))	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)== 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#469	isSupported(f=chrono.months())	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] <= size	0
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))>= 0	0
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))<= 0	0
org.joda.time.base.BaseDuration#?#BaseDuration#?,long#62	iMillis <= duration	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#457	!(isSupported(f=chrono.halfdays()))	0
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#488	isSupported(f=chrono.millisOfDay())	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags >= flags	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))< 0	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)== 0	0
org.joda.time.Period#int#getWeeks#?#722	(getPeriodType().getIndexedField(this,PeriodType.WEEK_INDEX))<= 0	0
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))> 0	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)> 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)== 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#491	!(isSupported(f=chrono.secondOfMinute()))	0
org.joda.time.base.BasePeriod#int#size#?#313	(iType.size())> 0	0
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#212	!(field == null || !field.isSupported())	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)<= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))< 0	0
org.joda.time.field.MillisDurationField#int#getDifference#?,long,long#125	(FieldUtils.safeToInt(FieldUtils.safeSubtract(minuendInstant,subtrahendInstant)))!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#545	!(isSupported(f=chrono.yearOfCentury()))	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#466	!(isSupported(f=chrono.weekyears()))	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#360	(offset)== 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)>= 0	0
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))== 0	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)>= 0	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)< 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#360	(offset)< 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#280	!(i < size)	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))< 0	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)>= 0	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)<= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#460	isSupported(f=chrono.days())	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#360	(offset)> 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getDifference#?,long,long#331	(iField.getDifference(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)),subtrahendInstant + offset))!= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset >= hoursInMinutes	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#539	!(isSupported(f=chrono.year()))	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#60	base == null	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)!= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))>= 0	0
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	!(type == null)	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))== 0	0
org.joda.time.base.BaseDuration#?#BaseDuration#?,long#62	iMillis == duration	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#284	current != duration	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#320	!(iBase != null)	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset == offset	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#445	!(isSupported(f=chrono.millis()))	0
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)< 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#551	!(isSupported(f=chrono.era()))	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)!= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getDifference#?,long,long#331	(iField.getDifference(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)),subtrahendInstant + offset))> 0	0
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#357	!(ref != null)	0
org.joda.time.DateTimeZone#DateTimeZone#getDefault#?#134	zone == null	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#506	isSupported(f=chrono.clockhourOfDay())	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset < offset	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#545	isSupported(f=chrono.yearOfCentury())	0
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	type == null	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset > wallOffset	0
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#506	!(isSupported(f=chrono.clockhourOfDay()))	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#448	isSupported(f=chrono.seconds())	0
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)!= 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#278	!(duration != 0)	0
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset != hours	0
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))< 0	0
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)!= 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#284	current >= duration	0
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	chrono == null	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#503	!(isSupported(f=chrono.hourOfDay()))	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset != standardOffset	0
org.joda.time.field.MillisDurationField#int#getDifference#?,long,long#125	(FieldUtils.safeToInt(FieldUtils.safeSubtract(minuendInstant,subtrahendInstant)))>= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset != hoursOffset	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset < hoursInMinutes	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset >= minutes	0
org.joda.time.field.FieldUtils#int#safeToInt#?,long#184	!(Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#542	!(isSupported(f=chrono.yearOfEra()))	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#472	isSupported(f=chrono.years())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#466	isSupported(f=chrono.weekyears())	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] > i	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#63	zone == null	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	chrono != null && chrono.getZone() == zone	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset >= wallOffset	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset < hours	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#451	isSupported(f=chrono.minutes())	0
org.joda.time.PeriodType#boolean#equals#?,Object#835	!(this == obj)	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#102	(val1 ^ diff) < 0 && (val1 ^ val2) < 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#500	isSupported(f=chrono.minuteOfDay())	0
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))<= 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset > wallOffset	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset <= hoursInMinutes	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#515	isSupported(f=chrono.halfdayOfDay())	0
org.joda.time.field.FieldUtils#int#safeToInt#?,long#185	((int)value)< 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset <= hoursOffset	0
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	field == null	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	!(value < 0)	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)== 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] == size	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#494	!(isSupported(f=chrono.secondOfDay()))	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getDifference#?,long,long#331	(iField.getDifference(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)),subtrahendInstant + offset))< 0	0
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#521	isSupported(f=chrono.dayOfMonth())	0
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset < hours	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))== 0	0
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#49	!(cCache == null)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#527	!(isSupported(f=chrono.weekOfWeekyear()))	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset <= wallOffset	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset <= minutes	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset >= hoursInMinutes	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)>= 0	0
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))== 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#254	hoursOffset == 0 && minutesOffset == 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset < hoursOffset	0
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)< 0	0
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)!= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#257	minutesOffset < 0 || minutesOffset > 59	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)<= 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset >= standardOffset	0
org.joda.time.field.MillisDurationField#int#getDifference#?,long,long#125	(FieldUtils.safeToInt(FieldUtils.safeSubtract(minuendInstant,subtrahendInstant)))== 0	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)<= 0	0
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)!= 0	0
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))>= 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] >= i	0
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#212	field == null || !field.isSupported()	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getDifference#?,long,long#331	(iField.getDifference(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)),subtrahendInstant + offset))>= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset == hoursOffset	0
org.joda.time.DateTimeZone#String#printOffset#?,int#647	!(offset == 0)	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset > hoursOffset	0
org.joda.time.field.FieldUtils#int#safeToInt#?,long#185	((int)value)>= 0	0
org.joda.time.DateTimeZone#DateTimeZone#getDefault#?#134	!(zone == null)	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)>= 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#282	!(field.isPrecise())	0
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	type == null	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)== 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#263	hoursInMinutes < 0	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))!= 0	0
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)<= 0	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#457	isSupported(f=chrono.halfdays())	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#357	(instant ^ diff) < 0 && (instant ^ offset) < 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags != flags	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags > flags	0
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	!(type == null)	0
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))!= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#?#ZonedDurationField#?,DurationField,DateTimeZone#285	!(!field.isSupported())	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset > standardOffset	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#518	!(isSupported(f=chrono.dayOfWeek()))	0
org.joda.time.base.BaseDuration#?#BaseDuration#?,long#62	iMillis >= duration	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#360	(offset)!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#536	!(isSupported(f=chrono.monthOfYear()))	0
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#357	ref != null	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset > hoursInMinutes	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)< 0	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	isSupported(f=chrono.clockhourOfHalfday())	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset >= offset	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#357	!((instant ^ diff) < 0 && (instant ^ offset) < 0)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#500	!(isSupported(f=chrono.minuteOfDay()))	0
org.joda.time.DateTimeZone#String#printOffset#?,int#632	!(offset >= 0)	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#533	isSupported(f=chrono.weekyearOfCentury())	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))<= 0	0
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)== 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())> 0	0
org.joda.time.DateTimeZone#void#setDefault#?,DateTimeZone#178	!(zone == null)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#451	!(isSupported(f=chrono.minutes()))	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset == minutes	0
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#352	iFixedOffsetCache == null	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#320	iBase != null	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset < wallOffset	0
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#200	!(field == null || !field.isSupported())	0
org.joda.time.DateTimeZone#String#printOffset#?,int#632	offset >= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())== 0	0
org.joda.time.field.FieldUtils#int#safeToInt#?,long#185	((int)value)<= 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#284	current < duration	0
org.joda.time.DateTimeZone#void#setDefault#?,DateTimeZone#175	sm != null	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#448	!(isSupported(f=chrono.seconds()))	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#360	(offset)<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#485	isSupported(f=chrono.millisOfSecond())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#530	!(isSupported(f=chrono.weekyear()))	0
org.joda.time.PeriodType#boolean#equals#?,Object#835	this == obj	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset != standardOffset	0
org.joda.time.base.BasePeriod#int#size#?#313	(iType.size())< 0	0
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))<= 0	0
org.joda.time.Period#int#getWeeks#?#722	(getPeriodType().getIndexedField(this,PeriodType.WEEK_INDEX))> 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset >= minutesOffset	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)>= 0	0
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))!= 0	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)< 0	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)< 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#548	!(isSupported(f=chrono.centuryOfEra()))	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)< 0	0
org.joda.time.DateTimeZone#void#setDefault#?,DateTimeZone#178	zone == null	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset < minutes	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset == hoursInMinutes	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#488	!(isSupported(f=chrono.millisOfDay()))	0
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)<= 0	0
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#203	converted.containsKey(field)	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset < standardOffset	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset == standardOffset	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)<= 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset <= wallOffset	0
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))>= 0	0
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))< 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset == hoursOffset	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#524	isSupported(f=chrono.dayOfYear())	0
org.joda.time.field.FieldUtils#int#safeToInt#?,long#184	Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset != minutes	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset > minutes	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	zone == null	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))!= 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)> 0	0
org.joda.time.base.BasePeriod#int#size#?#313	(iType.size())<= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#?#ZonedDateTimeField#?,DateTimeField,DateTimeZone,DurationField,DurationField,DurationField#390	!(!field.isSupported())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#530	isSupported(f=chrono.weekyear())	0
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)< 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] != size	0
org.joda.time.base.BaseDuration#?#BaseDuration#?,long#62	iMillis < duration	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] != i	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)!= 0	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)!= 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset == hours	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset != minutesOffset	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#56	base == null	0
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#548	isSupported(f=chrono.centuryOfEra())	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags < flags	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] >= size	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset < hoursOffset	0
org.joda.time.field.FieldUtils#int#safeToInt#?,long#185	((int)value)== 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#478	!(isSupported(f=chrono.eras()))	0
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#349	offset == 0	0
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))== 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	!((instant ^ sum) < 0 && (instant ^ offset) >= 0)	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#475	!(isSupported(f=chrono.centuries()))	0
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))< 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] < value	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)<= 0	0
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)== 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset >= hoursOffset	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset >= hoursOffset	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())< 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags <= flags	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset != wallOffset	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset < standardOffset	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)!= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#257	!(minutesOffset < 0 || minutesOffset > 59)	0
org.joda.time.base.BasePeriod#int#size#?#313	(iType.size())!= 0	0
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#497	!(isSupported(f=chrono.minuteOfHour()))	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#284	current == duration	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset != hoursInMinutes	0
org.joda.time.base.BasePeriod#int#getValue#?,int#335	(iValues[index])!= 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#63	!(zone == null)	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] >= value	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)< 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset != wallOffset	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getDifference#?,long,long#331	(iField.getDifference(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)),subtrahendInstant + offset))== 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset != hours	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset <= hours	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#445	isSupported(f=chrono.millis())	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	size > 1	0
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#690	!(id == null)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#469	!(isSupported(f=chrono.months()))	0
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)< 0	0
org.joda.time.DateTimeUtils#PeriodType#getPeriodType#?,PeriodType#286	!(type == null)	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset < minutesOffset	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset == minutesOffset	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#278	duration != 0	0
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#690	id == null	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#284	current <= duration	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)> 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#647	offset == 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	!(size > 1)	0
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	getBase().getZone() == DateTimeZone.UTC	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset > minutesOffset	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#475	isSupported(f=chrono.centuries())	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())<= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))!= 0	0
org.joda.time.field.MillisDurationField#int#getDifference#?,long,long#125	(FieldUtils.safeToInt(FieldUtils.safeSubtract(minuendInstant,subtrahendInstant)))> 0	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)< 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset == wallOffset	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset == hoursInMinutes	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset <= hoursInMinutes	0
org.joda.time.field.MillisDurationField#int#getDifference#?,long,long#125	(FieldUtils.safeToInt(FieldUtils.safeSubtract(minuendInstant,subtrahendInstant)))< 0	0
org.joda.time.base.BasePeriod#int#getValue#?,int#335	(iValues[index])== 0	0
org.joda.time.base.BaseDuration#?#BaseDuration#?,long#62	iMillis > duration	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset == wallOffset	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)<= 0	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#120	!(total < Integer.MIN_VALUE || total > Integer.MAX_VALUE)	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] > value	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] == i	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] <= value	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#60	!(base == null)	0
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))>= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)>= 0	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)<= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))<= 0	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)== 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset == standardOffset	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)> 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset <= minutesOffset	0
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))> 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset > offset	0
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset <= hours	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)== 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#542	isSupported(f=chrono.yearOfEra())	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset < hoursInMinutes	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#360	(offset)>= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#?#ZonedDateTimeField#?,DateTimeField,DateTimeZone,DurationField,DurationField,DurationField#390	!field.isSupported()	0
org.joda.time.base.BasePeriod#int#getValue#?,int#335	(iValues[index])< 0	0
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#203	!(converted.containsKey(field))	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#454	isSupported(f=chrono.hours())	0
org.joda.time.base.BaseDuration#?#BaseDuration#?,long#62	iMillis != duration	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] <= i	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))> 0	0
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)>= 0	0
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)> 0	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)> 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)< 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset >= standardOffset	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)!= 0	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)<= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset != offset	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)>= 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)== 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#497	isSupported(f=chrono.minuteOfHour())	0
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)<= 0	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	!(chrono != null && chrono.getZone() == zone)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#454	!(isSupported(f=chrono.hours()))	0
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)== 0	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)!= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)> 0	0
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#215	converted.containsKey(field)	0
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)>= 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#56	!(base == null)	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset > standardOffset	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)!= 0	0
org.joda.time.DateTimeZone#void#setDefault#?,DateTimeZone#175	!(sm != null)	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)< 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#282	field.isPrecise()	0
org.joda.time.base.BaseDuration#long#getMillis#?#115	(iMillis)> 0	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)== 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset <= hoursOffset	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#460	!(isSupported(f=chrono.days()))	0
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))!= 0	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#503	isSupported(f=chrono.hourOfDay())	0
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)>= 0	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)== 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	iBase == null	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset < wallOffset	0
org.joda.time.base.BasePeriod#int#getValue#?,int#335	(iValues[index])> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#472	!(isSupported(f=chrono.years()))	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)!= 0	0
org.joda.time.base.BaseDuration#long#getMillis#?#115	(iMillis)>= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset > hoursInMinutes	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))== 0	0
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	!(getBase().getZone() == DateTimeZone.UTC)	0
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset > hours	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset > hours	0
org.joda.time.Period#int#getWeeks#?#722	(getPeriodType().getIndexedField(this,PeriodType.WEEK_INDEX))== 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags == flags	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] != value	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)> 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] < i	0
org.joda.time.base.BasePeriod#int#size#?#313	(iType.size())>= 0	0
org.joda.time.base.BasePeriod#int#getValue#?,int#335	(iValues[index])>= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))> 0	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)!= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset != hoursOffset	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#515	!(isSupported(f=chrono.halfdayOfDay()))	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)!= 0	0
org.joda.time.base.BaseDuration#long#getMillis#?#115	(iMillis)< 0	0
org.joda.time.base.BaseDuration#long#getMillis#?#115	(iMillis)!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#533	!(isSupported(f=chrono.weekyearOfCentury()))	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)== 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	!(iBase == null)	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset != hoursInMinutes	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#491	isSupported(f=chrono.secondOfMinute())	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)>= 0	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)> 0	0
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#352	!(iFixedOffsetCache == null)	1
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)== 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	(instant ^ sum) < 0 && (instant ^ offset) >= 0	0
org.joda.time.field.MillisDurationField#int#getDifference#?,long,long#125	(FieldUtils.safeToInt(FieldUtils.safeSubtract(minuendInstant,subtrahendInstant)))<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#485	!(isSupported(f=chrono.millisOfSecond()))	0
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	!(chrono == null)	0
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))!= 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] < size	0
org.joda.time.PeriodType#PeriodType#standard#?#103	!(type == null)	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#284	current > duration	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset >= wallOffset	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#463	isSupported(f=chrono.weeks())	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)== 0	0
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	!(field == null)	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))>= 0	0
org.joda.time.Period#int#getWeeks#?#722	(getPeriodType().getIndexedField(this,PeriodType.WEEK_INDEX))!= 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset == hours	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))> 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#280	i < size	0
org.joda.time.base.BasePeriod#int#size#?#313	(iType.size())== 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#509	isSupported(f=chrono.hourOfHalfday())	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset >= hours	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)>= 0	0
org.joda.time.field.FieldUtils#int#safeToInt#?,long#185	((int)value)> 0	0
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#349	!(offset == 0)	0
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#215	!(converted.containsKey(field))	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset <= standardOffset	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#285	values[i] == value	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)< 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#263	!(hoursInMinutes < 0)	0
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#200	field == null || !field.isSupported()	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#463	!(isSupported(f=chrono.weeks()))	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#494	isSupported(f=chrono.secondOfDay())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#509	!(isSupported(f=chrono.hourOfHalfday()))	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#524	!(isSupported(f=chrono.dayOfYear()))	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)!= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset > hoursOffset	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset <= offset	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)> 0	0
org.joda.time.Period#int#getWeeks#?#722	(getPeriodType().getIndexedField(this,PeriodType.WEEK_INDEX))< 0	0
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)> 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getDifference#?,long,long#331	(iField.getDifference(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)),subtrahendInstant + offset))<= 0	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	!(zone == null)	0
org.joda.time.Period#int#getWeeks#?#722	(getPeriodType().getIndexedField(this,PeriodType.WEEK_INDEX))>= 0	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)< 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)<= 0	0
org.joda.time.base.BasePeriod#int#getValue#?,int#335	(iValues[index])<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#478	isSupported(f=chrono.eras())	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())>= 0	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))>= 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	value < 0	0