line	predicate	lable
org.joda.time.DateTimeZone#String#printOffset#?,int#631	offset >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2103	displayOffset == 0 && iMinFields <= 1	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start == instant	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2378	(position)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == monthOfYear	1
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#211	!(zone != null)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1534	!(i < transitions.length)	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#215	iStandardOffset == Integer.MIN_VALUE	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset != minutesOffset	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())< 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < thisYear	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos > i	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)== 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimePrinter,DateTimeParser[]#290	!((copyOfParsers[i]=parsers[i]) == null)	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])!= 0	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)<= 0	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst >= i	0
org.joda.time.convert.ConverterSet#ConverterSet#remove#?,int,Converter[]#229	i < length	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendSignedDecimal#?,DateTimeFieldType,int,int#454	minDigits < 0 || maxDigits <= 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2705	parsePos > bestInvalidPos	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset != hours	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#204	!(id == null)	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos == i	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= monthOfYear	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1941	i < length	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())== 0	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1940	buf != null	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > dayOfMonth	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis >= instant	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1079	!(printer == parser || parser == null)	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2692	!(parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits <= maxDigits	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1300	length >= 9	1
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimatePrintedLength#?#1208	(iValue.length())== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value < n	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#estimateParsedLength#?#2664	(iParsedLengthEstimate)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1324	(position)>= 0	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean#1000	(instantUTC)>= 0	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#339	!(count > 0)	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits == maxDigits	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#721	!(daysToAdd < 0)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position < value	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2116	!(displayOffset == 0 && iMinFields <= 2)	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#131	(iZone.hashCode())<= 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos > length	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1184	a == b	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction < instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#451	isSupported(f=chrono.minutes())	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos < length	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start <= instant	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1181	a < b	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst > i	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2271	!(hours > 23)	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateOptionalTimeParser#?#799	!(dotp == null)	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value <= i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == dayOfWeek	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2511	elements == null	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position == value	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#263	hoursInMinutes < 0	1
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#256	supportedType == null || (type != null && !supportedType.isAssignableFrom(type))	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos >= length	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1896	!(--minDigits >= 0)	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#486	(result)== 0	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset >= minutesOffset	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#?#ZonedDateTimeField#?,DateTimeField,DateTimeZone,DurationField,DurationField,DurationField#390	!(!field.isSupported())	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))!= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next > instant	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset < offset	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#497	!(isSupported(f=chrono.minuteOfHour()))	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1182	b >= a	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position > i	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))< 0	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)>= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#220	(iNextInfo.getStandardOffset(millis))== 0	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart != periodStart	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= thisMonth	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))> 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#?#ZonedDurationField#?,DurationField,DateTimeZone#285	!field.isSupported()	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset >= hoursInMinutes	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#long[]#getFractionData#?,long,DateTimeField#1986	((rangeMillis * scalar) / scalar) == rangeMillis	0
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset > minutes	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))> 0	0
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)!= 0	0
org.joda.time.format.DateTimeParserBucket$SavedState#boolean#restoreState#?,DateTimeParserBucket#432	!(this.iSavedFieldsCount < enclosing.iSavedFieldsCount)	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos == parsePos	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end == instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1555	(iStandardOffsets[i - 1])<= 0	1
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 >= instant	1
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#134	iDefaultYear == defaultYear	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value >= position	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] > i	1
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1254	iMaxParsedDigits <= maxParsedDigits	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] != size	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1208	!(instant > 0 && start < 0)	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)== 0	1
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#916	(instantLocal)> 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))>= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#long[]#getFractionData#?,long,DateTimeField#1986	!(((rangeMillis * scalar) / scalar) == rangeMillis)	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2010	c < '0' || c > '9'	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos != i	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))<= 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart > next	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] <= size	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#500	b == null || !b.isSupported()	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)< 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > months	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value == i	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#530	isSupported(f=chrono.weekyear())	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] <= i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)> 0	0
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#215	converted.containsKey(field)	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2207	(estimatePrintedLength())>= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset <= hoursOffset	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#509	!(isSupported(f=chrono.hourOfHalfday()))	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2395	(amount)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	!(iDayOfWeek == 0)	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)>= 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))>= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset <= hoursOffset	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position > length	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)> 0	0
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	!(getBase().getZone() == DateTimeZone.UTC)	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)== 0	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#468	!(get(result) != value)	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2713	!(bestValidPos > position || (bestValidPos == position && isOptional))	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != millisOfDay	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value == limit	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != thisYear	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#466	localInstant < instant	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos > position	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset < hoursOffset	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value != limit	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start == instant	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset != hoursOffset	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#478	!(isSupported(f=chrono.eras()))	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos != bestValidPos	0
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#252	savedFieldsCount == savedFields.length || iSavedFieldsShared	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start <= instant	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position == hours	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimateParsedLength#?#1232	(iValue.length())< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 > instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= thisYear	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != thisYear	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset <= hours	1
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	zone == null	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit >= offset	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2112	iMaxFields == 2	1
org.joda.time.convert.ConverterSet#ConverterSet#remove#?,int,Converter[]#218	index >= length	1
org.joda.time.chrono.GregorianChronology#GregorianChronology#getInstance#?,DateTimeZone,int#111	zone == null	1
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#259	this == readableInstant	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dayOfMonthElement#?#1572	dme == null	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= thisYear	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2613	element instanceof Composite	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos != i	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean#997	(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#498	(-1)<= 0	0
org.joda.time.convert.ConverterSet#Converter#select#?,Class<?>#86	entries[i] == null	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end == start	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst < size	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))>= 0	0
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)== 0	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#readFrom#?,InputStream,String#95	in instanceof DataInput	1
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)!= 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#640	offset < hours	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dayOfYearElement#?#1611	dye == null	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != months	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != thisMonth	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos >= bestInvalidPos	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1289	c < '0' || c > '9'	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	months == 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1184	a >= b	0
org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber#int#estimatePrintedLength#?#1338	(iMaxParsedDigits)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start > instant	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#916	!(iChrono != null)	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos < length	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])<= 0	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset > hoursOffset	0
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	(base=iBase) != null	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2622	!(element instanceof Composite)	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))> 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart > end	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#minuteElement#?#1639	!(mhe == null)	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#916	iChrono != null	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos <= position	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == months	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	isLeapYear(year)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	iAdvance	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2077	(est)<= 0	1
org.joda.time.format.FormatUtils#int#parseTwoDigits#?,String,int#353	(((value << 3) + (value << 1)) + text.charAt(position + 1) - '0')>= 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis < instant	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis < instant	1
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#470	!(reset)	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2019	value >= n	0
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#452	iValue == value	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#1997	(iMaxDigits)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset != hours	0
org.joda.time.format.FormatUtils#int#parseTwoDigits#?,String,int#353	(((value << 3) + (value << 1)) + text.charAt(position + 1) - '0')== 0	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)>= 0	0
org.joda.time.convert.ConverterSet#Converter#select#?,Class<?>#56	e.iType == type	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimePrinter,DateTimeParser[]#289	!(i < length - 1)	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos > position	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos == parsePos	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)!= 0	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))!= 0	0
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	!(type == null)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != thisMonth	0
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)> 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset <= standardOffset	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#463	isSupported(f=chrono.weeks())	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1559	!(iTailZone == null)	0
org.joda.time.format.DateTimeFormatter#long#parseMillis#?,String#736	(bucket.computeMillis(true,text))<= 0	1
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#133	minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#146	instant == null	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#167	next == periodStart || next > end	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#377	(millis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == millisOfDay	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendSignedDecimal#?,DateTimeFieldType,int,int#448	fieldType == null	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))> 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	!(isLeapYear(year))	0
org.joda.time.format.DateTimeParserBucket#void#sort#?,SavedField[],int#402	!(i < high)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd != dayOfWeek	0
org.joda.time.DateTime#DateTime#toDateTime#?,Chronology#519	!(getChronology() == chronology)	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#182	!(!isLeapYear(year))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))> 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1145	(1)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate == size	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#545	isSupported(f=chrono.yearOfCentury())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset <= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next != instant	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendSignedDecimal#?,DateTimeFieldType,int,int#451	!(maxDigits < minDigits)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#1997	(iMaxDigits)!= 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)>= 0	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))== 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getStandardOffset#?,long#1191	(iStandardOffset)== 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())> 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis >= firstDayMillis	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])>= 0	0
org.joda.time.format.DateTimeFormatter#long#parseMillis#?,String#736	(bucket.computeMillis(true,text))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2691	parsePos > bestValidPos	0
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimatePrintedLength#?#1208	(iValue.length())> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart == periodStart	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != months	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)== 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2090	!(displayOffset >= 0)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] < poolSize	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#218	(iStandardOffset)== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis == millis	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset <= hours	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)<= 0	1
org.joda.time.format.DateTimeFormatter#DateTimeParser#requireParser#?#901	!(parser == null)	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#218	(iStandardOffset)<= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart > periodStart	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst >= size	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2077	(est)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#488	!(isSupported(f=chrono.millisOfDay()))	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end <= instant	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1183	!(a != b)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == dayOfWeek	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))> 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#640	offset >= hours	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits > minDigits	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)> 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos != bestValidPos	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index >= size	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2116	displayOffset == 0 && iMinFields <= 2	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#475	!(isSupported(f=chrono.centuries()))	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#126	instant >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1933	length <= 1 || str.charAt(length - 1) != '0'	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end == start	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2718	(bestValidPos)<= 0	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)< 0	1
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#211	zone != null	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est >= len	0
org.joda.time.DateTimeZone#int#hashCode#?#1196	(57 + getID().hashCode())<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next >= instant	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())!= 0	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))>= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	!(dayOfYear > (31 + 28))	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate <= size	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > dayOfWeek	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimeFormatter#209	!(formatter == null)	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next >= instant	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position != value	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos < parsePos	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#460	!(isSupported(f=chrono.days()))	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))> 0	0
org.joda.time.convert.StringConverter#long#getInstantMillis#?,Object,Chronology#65	(p.withChronology(chrono).parseMillis(str))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1184	a < b	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1192	(position + 1)> 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#882	!(offsetLocal != offsetAdjusted)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index > size	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2263	digitCount(text,position,2) < 2	1
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#134	iDefaultYear != defaultYear	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est < i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n >= value	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	!(iDayOfMonth >= 0)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end != start	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos > parsePos	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#535	maxDigits < minDigits	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos < i	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags >= flags	0
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek < minDaysInFirstWeek	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index <= i	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#1997	(iMaxDigits)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos > bestInvalidPos	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#218	(iStandardOffset)>= 0	1
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#152	info == null || (int)((info.iPeriodStart >> 32)) != period	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	dayOfYear > (31 + 28)	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#396	!(fieldType == null)	0
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == yearToUse	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)!= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#214	iNextInfo == null || millis < iNextInfo.iPeriodStart	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1182	b != a	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#timeElementParser#?#695	!(tpe == null)	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))== 0	1
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean#1000	(instantUTC)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit <= offset	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1550	(iStandardOffsets[i])== 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendSignedDecimal#?,DateTimeFieldType,int,int#451	maxDigits < minDigits	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)== 0	1
org.joda.time.convert.ConverterManager#InstantConverter#getInstantConverter#?,Object#162	converter != null	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value > n	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#estimateParsedLength#?#2664	(iParsedLengthEstimate)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#113	!(monthToUse >= 0)	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index < poolSize	0
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1254	iMaxParsedDigits < maxParsedDigits	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2718	(bestValidPos)< 0	1
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#207	!(id.equals("UTC"))	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendSignedDecimal#?,DateTimeFieldType,int,int#448	!(fieldType == null)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#478	isSupported(f=chrono.eras())	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1259	(iMaxParsedDigits)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1318	negative	1
org.joda.time.tz.CachedDateTimeZone#int#getStandardOffset#?,long#115	(getInfo(instant).getStandardOffset(instant))<= 0	1
org.joda.time.format.DateTimeFormatter#long#parseMillis#?,String#736	(bucket.computeMillis(true,text))== 0	1
org.joda.time.format.DateTimeFormatter#long#parseMillis#?,String#736	(bucket.computeMillis(true,text))> 0	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#int#get#?,long#407	(iField.get(localInstant))!= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value < nn	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value >= i	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#362	iZone == null	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est >= i	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)== 0	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset < wallOffset	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset != wallOffset	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear <= year	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate <= size	0
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	getBase().getZone() == DateTimeZone.UTC	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos != length	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next < instant	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#530	!(isSupported(f=chrono.weekyear()))	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#estimateParsedLength#?#2664	(iParsedLengthEstimate)>= 0	0
org.joda.time.DateTimeZone#int#hashCode#?#1196	(57 + getID().hashCode())!= 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset <= hours	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart != end	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos >= bestInvalidPos	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] == poolSize	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits >= minDigits	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis != saveMillis	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart <= next	0
org.joda.time.chrono.BasicChronology#DateTimeZone#getZone#?#143	!((base=getBase()) != null)	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#362	!(iZone == null)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2099	!(iMaxFields == 1)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next == instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1555	(iStandardOffsets[i - 1])>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2660	iParsedLengthEstimate == est	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate < parseEst	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis > instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next <= instant	1
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#63	zone == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	iDayOfWeek == 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next >= instant	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart <= millis	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2590	i < len && position >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1173	!(position >= text.length())	0
org.joda.time.format.DateTimeFormatter#DateTimeFormatter#withChronology#?,Chronology#255	!(iChrono == chrono)	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2697	(parsePos)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode < mode	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index > i	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] >= i	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#509	isSupported(f=chrono.hourOfHalfday())	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] <= poolSize	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1186	a != b	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2036	(position + length)!= 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear != year	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#addArrayToList#?,List<Object>,Object[]#2632	!(array != null)	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2697	(parsePos)<= 0	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset == standardOffset	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))!= 0	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1540	!(iTailZone == null)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#503	!(isSupported(f=chrono.hourOfDay()))	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimateParsedLength#?#2580	(iParsedLengthEstimate)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2593	(position)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1343	!(i < poolSize)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#roundFloor#?,long#345	(iChronology.getYearMonthMillis(year,month))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= monthOfYear	1
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2697	(parsePos)< 0	1
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset == minutes	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position <= limit	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos < length	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1187	(~position)!= 0	0
org.joda.time.format.DateTimeFormatter#long#parseMillis#?,String#735	newPos >= text.length()	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] != size	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position <= i	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#463	!(isSupported(f=chrono.weeks()))	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1141	iValue == value	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos > i	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateOptionalTimeParser#?#799	dotp == null	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1831	!(maxDigits > 18)	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#377	(millis)<= 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#roundFloor#?,long#93	(instant - instant % iUnitMillis)< 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2660	iParsedLengthEstimate <= est	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > thisMonth	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1553	i < transitions.length	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end <= instant	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2612	!(element instanceof DateTimePrinter)	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1192	(position + 1)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos < position	1
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())!= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#182	!isLeapYear(year)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1839	(iMaxDigits)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= millisOfDay	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#506	isSupported(f=chrono.clockhourOfDay())	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate != size	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate != printEst	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position <= len	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])== 0	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTime#?#936	dt == null	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst > i	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())> 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1187	(~position)<= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset != hoursOffset	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimateParsedLength#?#2580	(iParsedLengthEstimate)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#515	!(isSupported(f=chrono.halfdayOfDay()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == millisOfDay	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1236	!(text.regionMatches(true,position,iValue,0,iValue.length()))	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))> 0	0
org.joda.time.convert.StringConverter#long#getInstantMillis#?,Object,Chronology#65	(p.withChronology(chrono).parseMillis(str))> 0	0
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	!(info == null || info.iYear != year)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value > i	0
org.joda.time.DateTimeZone#String#printOffset#?,int#640	offset <= hours	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1239	(~position)< 0	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#533	!(isSupported(f=chrono.weekyearOfCentury()))	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end >= instant	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)> 0	0
org.joda.time.format.DateTimeFormatter#DateTimeFormatter#withChronology#?,Chronology#255	iChrono == chrono	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2021	length == 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))!= 0	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean#997	!((instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits >= maxDigits	1
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean#964	!(offsetLocal != offset)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2019	value > n	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears > year	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	isLeapYear(thisYear)	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#377	(millis)> 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))<= 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#roundFloor#?,long#93	(instant - instant % iUnitMillis)!= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1239	(~position)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > millisOfDay	1
org.joda.time.field.PreciseDurationDateTimeField#?#PreciseDurationDateTimeField#?,DateTimeFieldType,DurationField#50	!(!unit.isPrecise())	0
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#260	length >= i	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2240	c == '-'	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] < size	1
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1401	(iMaxParsedDigits)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2653	!(parser != null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate < printEst	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#536	isSupported(f=chrono.monthOfYear())	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)== 0	1
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))< 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)>= 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)<= 0	1
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)< 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#roundFloor#?,long#123	(iChronology.getYearMillis(get(instant)))> 0	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#377	(millis)== 0	1
org.joda.time.format.DateTimeParserBucket$SavedState#boolean#restoreState#?,DateTimeParserBucket#432	this.iSavedFieldsCount < enclosing.iSavedFieldsCount	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position == limit	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2653	parser != null	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())== 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)== 0	1
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#357	ref != null	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)== 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#roundFloor#?,long#93	(instant - instant % iUnitMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] > poolSize	1
org.joda.time.format.FormatUtils#int#parseTwoDigits#?,String,int#353	(((value << 3) + (value << 1)) + text.charAt(position + 1) - '0')<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))<= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#205	!(iOffset == Integer.MIN_VALUE)	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#257	minutesOffset < 0 || minutesOffset > 59	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)< 0	1
org.joda.time.convert.StringConverter#long#getInstantMillis#?,Object,Chronology#65	(p.withChronology(chrono).parseMillis(str))== 0	1
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#656	!(printer == null)	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#503	(-a.compareTo(b))!= 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2683	!(bestValidPos <= position)	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos > position	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#399	maxDigits < minDigits	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#498	(-1)> 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#473	(millis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < millisOfDay	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1074	!(iElementPairs.size() == 2)	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#495	!(b == null || !b.isSupported())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#515	isSupported(f=chrono.halfdayOfDay())	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))<= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2090	displayOffset >= 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos < bestInvalidPos	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1580	instant < end	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	value < 100	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#891	nextLocal != nextAdjusted	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value > i	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value == limit	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] >= poolSize	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos >= bestValidPos	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart >= next	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1562	(iTailZone.getStandardOffset(instant))!= 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#320	iBase != null	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index != poolSize	0
org.joda.time.field.PreciseDateTimeField#?#PreciseDateTimeField#?,DateTimeFieldType,DurationField,DurationField#59	!range.isPrecise()	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))>= 0	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getStandardOffset#?,long#1191	(iStandardOffset)>= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#469	isSupported(f=chrono.months())	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1192	(position + 1)< 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos != position	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getStandardOffset#?,long#1191	(iStandardOffset)<= 0	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1079	printer == parser || parser == null	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset == limit	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2715	!(bestValidState != null)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= thisYear	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount == limit	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))!= 0	1
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)> 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#631	!(offset >= 0)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= dayOfMonth	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	!(instant >= 0)	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value != n	0
org.joda.time.chrono.BasicYearDateTimeField#long#roundFloor#?,long#123	(iChronology.getYearMillis(get(instant)))< 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#roundFloor#?,long#92	instant >= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))>= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < monthOfYear	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] != poolSize	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] == size	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2697	(parsePos)>= 0	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#498	(-1)< 0	0
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#263	iSavedFieldsCount != savedFieldsCount	0
org.joda.time.convert.ConverterSet#Converter#select#?,Class<?>#85	i < length	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendLiteral#?,String#370	text == null	1
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#49	cCache == null	1
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))== 0	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset >= offset	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos > bestInvalidPos	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index <= size	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2378	(position)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos >= position	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= millisOfDay	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#500	!(isSupported(f=chrono.minuteOfDay()))	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est > len	1
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#465	iText == null	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))<= 0	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis != instant	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1267	length < limit	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1930	minDigits < digits	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart >= periodStart	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset != standardOffset	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))>= 0	1
org.joda.time.DateTimeZone#int#hashCode#?#1196	(57 + getID().hashCode())> 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset >= standardOffset	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))>= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))< 0	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#466	localInstant >= instant	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst == i	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value > length	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset > hours	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	!(value < 100)	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)> 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimateParsedLength#?#2580	(iParsedLengthEstimate)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2074	!(iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est)	0
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset >= hours	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1223	!(instant > 0 && end < 0)	0
org.joda.time.chrono.GregorianChronology#void#assemble#?,Fields#191	getBase() == null	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2395	(amount)!= 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#167	(base=getBase()) != null	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)<= 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#551	!(instant >= 0)	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2242	c == '+'	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos != position	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#roundFloor#?,long#345	(iChronology.getYearMonthMillis(year,month))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] >= size	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)!= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2515	!(locale == null)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1562	(iTailZone.getStandardOffset(instant))== 0	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset >= standardOffset	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos != i	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1535	i > 0	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)<= 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis < firstDayMillis	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1145	(1)> 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset != standardOffset	1
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek <= minDaysInFirstWeek	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1254	iMaxParsedDigits >= maxParsedDigits	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == monthOfYear	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#131	(base=iBase) != null && (iBaseFlags & 5) == 5	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1839	(iMaxDigits)> 0	0
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#623	(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2585	!(elements == null)	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#916	(instantLocal)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos >= i	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)!= 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= thisMonth	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction == instant	1
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	!(type == null)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2077	(est)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos <= parsePos	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendSignedDecimal#?,DateTimeFieldType,int,int#457	minDigits <= 1	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit > offset	1
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset <= minutes	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1295	!(length == 0)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start < instant	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))>= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits == maxDigits	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1839	(iMaxDigits)>= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits <= maxDigits	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos >= i	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)< 0	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1169	(1)> 0	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#916	(instantLocal)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits > maxDigits	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < millisOfDay	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est > i	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#149	!(thisMillis == otherMillis)	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est <= i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next > instant	0
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#689	!(id == null)	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	!(years == 0)	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#205	iOffset == Integer.MIN_VALUE	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset >= hours	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1239	(~position)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == dayOfMonth	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)> 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#136	id == null	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))== 0	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position != i	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value > position	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimateParsedLength#?#2580	(iParsedLengthEstimate)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#addArrayToList#?,List<Object>,Object[]#2632	array != null	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset <= hours	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	diff < 0	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset > hoursInMinutes	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTime#?#936	!(dt == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits < maxDigits	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#150	obj instanceof SoftReference<?>	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset >= hoursOffset	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#150	!(obj instanceof SoftReference<?>)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] > poolSize	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))< 0	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset < minutesOffset	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos < bestInvalidPos	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#551	!(isSupported(f=chrono.era()))	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)>= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)< 0	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))< 0	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags <= flags	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end > start	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position >= limit	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1306	negative	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))<= 0	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#495	b == null || !b.isSupported()	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)< 0	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#weekElement#?#1591	wwe == null	0
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))< 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis <= saveMillis	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= thisMonth	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))== 0	1
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#134	iDefaultYear >= defaultYear	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate == parseEst	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1078	printer != null	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position < len	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] > i	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())== 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))<= 0	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2679	i < length	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#532	fieldType == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset != standardOffset	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1192	(position + 1)>= 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#721	daysToAdd < 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset > limit	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position != hours	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#457	!(isSupported(f=chrono.halfdays()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next == instant	1
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#524	!(isSupported(f=chrono.dayOfYear()))	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)>= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	instant >= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#113	monthToUse >= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)> 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears >= year	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))!= 0	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean#1000	(instantUTC)<= 0	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#257	!(minutesOffset < 0 || minutesOffset > 59)	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	iBase == null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end < instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= dayOfMonth	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#486	(result)> 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1169	(1)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est == len	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos >= i	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())== 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#896	(offsetAdjusted)!= 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	!(isLeapYear(year))	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end != start	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimatePrintedLength#?#1208	(iValue.length())< 0	1
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	info == null || info.iYear != year	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2395	(amount)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimateParsedLength#?#1232	(iValue.length())== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end < start	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset < limit	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears <= year	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1169	(1)< 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#roundFloor#?,long#123	(iChronology.getYearMillis(get(instant)))!= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))<= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#204	id == null	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears == year	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#377	(millis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset >= standardOffset	0
org.joda.time.format.DateTimeParserBucket#void#sort#?,SavedField[],int#399	!(high > 10)	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits == maxParsedDigits	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2655	len > est	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)< 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1192	(position + 1)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2622	element instanceof Composite	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] >= size	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value == position	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2099	iMaxFields == 1	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset == position	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dayOfYearElement#?#1611	!(dye == null)	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis > firstDayMillis	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getStandardOffset#?,long#1191	(iStandardOffset)> 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2690	parsePos >= position	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#486	(result)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position == length	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)< 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == months	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd >= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < dayOfMonth	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2077	(est)>= 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset == standardOffset	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == thisMonth	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == dayOfMonth	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount > limit	1
org.joda.time.tz.CachedDateTimeZone#int#getStandardOffset#?,long#115	(getInfo(instant).getStandardOffset(instant))< 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#110	isParser(f)	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next == instant	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount != limit	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos <= bestValidPos	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis != instant	1
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset < hours	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))== 0	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateElementParser#?#611	dpe == null	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next > instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#448	isSupported(f=chrono.seconds())	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2703	!(parsePos < 0)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next <= instant	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	!(isSupported(f=chrono.clockhourOfHalfday()))	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position > offset	1
org.joda.time.format.DateTimeFormatterBuilder#void#checkParser#?,DateTimeParser#319	parser == null	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != monthToUse	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1324	(position)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position <= length	0
org.joda.time.format.DateTimeFormatter#DateTimeParser#requireParser#?#901	parser == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= dayOfMonth	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)> 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset <= wallOffset	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)== 0	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset == wallOffset	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value < length	0
org.joda.time.convert.ConverterManager#InstantConverter#getInstantConverter#?,Object#162	!(converter != null)	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)<= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)< 0	1
org.joda.time.field.PreciseDateTimeField#?#PreciseDateTimeField#?,DateTimeFieldType,DurationField,DurationField#65	iRange < 2	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n > nn	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est == i	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimePrinter,DateTimeParser[]#280	!(length == 1)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset == saveMillis	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#110	!(isParser(f))	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)>= 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst < i	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1553	!(i < transitions.length)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#138	dayToUse > maxDay	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#536	!(isSupported(f=chrono.monthOfYear()))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1549	i >= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart < millis	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)!= 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset != wallOffset	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end == instant	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos == length	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#551	iMode == 's'	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1576	!(iTailZone == null)	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos > bestValidPos	1
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#205	in == null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)> 0	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#131	(iZone.hashCode())> 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount > position	1
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1401	(iMaxParsedDigits)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#402	!(minDigits < 0 || maxDigits <= 0)	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#int#get#?,long#407	(iField.get(localInstant))>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#494	isSupported(f=chrono.secondOfDay())	0
org.joda.time.convert.StringConverter#long#getInstantMillis#?,Object,Chronology#65	(p.withChronology(chrono).parseMillis(str))>= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == millisOfDay	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	!(iAdvance)	1
org.joda.time.format.FormatUtils#int#parseTwoDigits#?,String,int#353	(((value << 3) + (value << 1)) + text.charAt(position + 1) - '0')!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos < i	1
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n <= nn	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1306	!(negative)	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#503	(-a.compareTo(b))< 0	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#131	(iZone.hashCode())!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos == length	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2697	(parsePos)!= 0	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))== 0	1
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#203	!(converted.containsKey(field))	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#396	fieldType == null	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#885	!((offsetLocal - offsetAdjusted) < 0)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1562	(iTailZone.getStandardOffset(instant))<= 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#60	base == null	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index <= poolSize	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset != hoursInMinutes	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset < standardOffset	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value < i	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2679	!(i < length)	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#readFrom#?,InputStream,String#95	!(in instanceof DataInput)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position != length	1
org.joda.time.field.PreciseDurationDateTimeField#?#PreciseDurationDateTimeField#?,DateTimeFieldType,DurationField#50	!unit.isPrecise()	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos <= parsePos	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value >= nn	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset == hoursOffset	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos == bestValidPos	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next == instant	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)< 0	1
org.joda.time.DateTime#DateTime#toDateTime#?,Chronology#519	getChronology() == chronology	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value >= limit	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#473	(millis)== 0	1
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#251	!(supportedType == type)	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate >= printEst	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#551	isSupported(f=chrono.era())	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)== 0	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)<= 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#882	offsetLocal != offsetAdjusted	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))== 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#405	!(minDigits <= 1)	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis != firstDayMillis	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)<= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits < minDigits	1
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits != maxParsedDigits	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1185	b < a	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2521	i < len	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)!= 0	0
org.joda.time.convert.ConverterSet#ConverterSet#remove#?,int,Converter[]#230	i != index	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#196	iFileDir != null	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position < limit	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimateParsedLength#?#2580	(iParsedLengthEstimate)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start != instant	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n > value	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n != value	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimatePrintedLength#?#1208	(iValue.length())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start >= instant	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos == position	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate == printEst	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2390	c < '0' || c > '9'	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#503	isSupported(f=chrono.hourOfDay())	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#254	hoursOffset == 0 && minutesOffset == 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#485	!(isSupported(f=chrono.millisOfSecond()))	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1315	i < position	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value != length	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#473	(millis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis == saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())< 0	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits > maxParsedDigits	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value != position	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit < offset	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position <= limit	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2207	(estimatePrintedLength())< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > yearToUse	1
org.joda.time.DateTimeZone#String#printOffset#?,int#646	!(offset == 0)	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#80	!(value < 1000)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst <= i	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1554	!(i > 0)	1
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#473	(millis)> 0	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)!= 0	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#125	iDefaultYear <= defaultYear	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis != millis	0
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek != minDaysInFirstWeek	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits != minDigits	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next >= instant	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset == hoursInMinutes	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2697	(parsePos)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst <= size	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2008	!(length < limit)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1555	(iStandardOffsets[i - 1])> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#218	(iStandardOffset)< 0	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dayOfMonthElement#?#1572	!(dme == null)	0
org.joda.time.format.DateTimeParserBucket#void#setOffset#?,int#182	iOffset != offset	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos == position	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2010	!(c < '0' || c > '9')	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd == dayOfWeek	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#145	!(id.equals(obj))	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset < position	1
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimateParsedLength#?#1232	(iValue.length())> 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))< 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1550	(iStandardOffsets[i])> 0	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	!(zone == null)	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))<= 0	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))< 0	1
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#212	!(field == null || !field.isSupported())	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n < value	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1184	a <= b	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit == offset	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd < dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index >= i	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#491	!(isSupported(f=chrono.secondOfMinute()))	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 == instant	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos < i	1
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#133	!(minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value <= i	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1895	!(buf != null)	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset != standardOffset	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	diff >= DateTimeConstants.MILLIS_PER_DAY * 365L	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next < instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1576	iTailZone == null	1
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#60	!(base == null)	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#399	!(maxDigits < minDigits)	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset > offset	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#120	!(total < Integer.MIN_VALUE || total > Integer.MAX_VALUE)	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dayOfWeekElement#?#1601	dwe == null	0
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#212	field == null || !field.isSupported()	1
org.joda.time.convert.StringConverter#long#getInstantMillis#?,Object,Chronology#65	(p.withChronology(chrono).parseMillis(str))<= 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears < year	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#465	!(iText == null)	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))== 0	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] != poolSize	0
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#260	length != i	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	!(instant >= 0)	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2585	elements == null	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset == hours	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimePrinter,DateTimeParser[]#276	!(parsers == null)	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != dayOfWeek	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos < bestValidPos	0
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#203	converted.containsKey(field)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount == position	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == thisYear	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit == position	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset <= standardOffset	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] != i	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end <= start	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1145	(1)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1318	!(negative)	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#141	!(obj == null)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset < hours	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	iDayOfMonth >= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#126	!(instant >= 0)	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2612	element instanceof DateTimePrinter	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2721	(~bestInvalidPos)> 0	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#494	a == null || !a.isSupported()	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start < instant	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#secondElement#?#1649	sme == null	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#339	count > 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimePrinter,DateTimeParser[]#273	!(printer != null)	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset == hoursInMinutes	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate >= parseEst	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	!(months == 0)	0
org.joda.time.base.AbstractDateTime#int#getHourOfDay#?#183	(getChronology().hourOfDay().get(getMillis()))< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#518	!(isSupported(f=chrono.dayOfWeek()))	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1184	a > b	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))== 0	1
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position < hours	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2721	(~bestInvalidPos)<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits < minPrintedDigits	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)== 0	1
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#260	length < i	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())> 0	0
org.joda.time.field.PreciseDateTimeField#?#PreciseDateTimeField#?,DateTimeFieldType,DurationField,DurationField#59	!(!range.isPrecise())	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#200	iLoader != null	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#486	(result)< 0	0
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#200	!(field == null || !field.isSupported())	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset != limit	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index == poolSize	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1254	iMaxParsedDigits > maxParsedDigits	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next > instant	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1187	(~position)>= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2071	iShowSeparators	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())>= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset >= minutes	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit <= hours	0
org.joda.time.field.PreciseDurationDateTimeField#?#PreciseDurationDateTimeField#?,DateTimeFieldType,DurationField#55	!(iUnitMillis < 1)	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))< 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < millisOfDay	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1401	(iMaxParsedDigits)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset > position	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1181	a <= b	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate != size	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1912	!((scaled & 0x7fffffff) == scaled)	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis <= millis	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos >= position	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position == len	0
org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber#int#estimatePrintedLength#?#1338	(iMaxParsedDigits)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n == nn	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1182	b < a	0
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	zone instanceof CachedDateTimeZone	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)<= 0	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)!= 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#145	id.equals(obj)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position >= i	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value <= position	0
org.joda.time.tz.CachedDateTimeZone#int#getStandardOffset#?,long#115	(getInfo(instant).getStandardOffset(instant))> 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#451	!(isSupported(f=chrono.minutes()))	1
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1078	!(printer != null)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= millisOfDay	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#82	!(value < 10000)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index >= poolSize	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits != minDigits	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isPrinter#?,Object#1098	!(f instanceof DateTimePrinter)	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear < year	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)!= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset == offset	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1192	(position + 1)<= 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2660	iParsedLengthEstimate < est	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est <= len	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2388	limit > 0	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimateParsedLength#?#1232	(iValue.length())>= 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction >= instant	1
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position < i	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimePrinter,DateTimeParser[]#290	(copyOfParsers[i]=parsers[i]) == null	1
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimatePrintedLength#?#1208	(iValue.length())>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#491	isSupported(f=chrono.secondOfMinute())	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#405	minDigits <= 1	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#470	reset	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next == instant	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)<= 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart != millis	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos == length	1
org.joda.time.format.DateTimeFormatter#long#parseMillis#?,String#736	(bucket.computeMillis(true,text))< 0	1
org.joda.time.DateTimeZone#int#hashCode#?#1196	(57 + getID().hashCode())== 0	1
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#164	instant == null	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset == hours	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset < wallOffset	1
org.joda.time.format.DateTimeParserBucket#boolean#restoreState#?,Object#290	!(((SavedState)savedState).restoreState(this))	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position < i	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])< 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)== 0	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#142	offset != zone.getOffset(instant)	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1141	iValue <= value	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#1997	(iMaxDigits)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2718	(bestValidPos)!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 <= instant	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isParser#?,Object#1109	!(f instanceof Composite)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] < i	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)< 0	1
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek > minDaysInFirstWeek	1
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#120	iMillis == instantLocal	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))== 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart < end	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2086	!(displayOffset == 0 && iZeroOffsetPrintText != null)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position <= offset	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value != i	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value >= i	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2378	(position)== 0	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset > standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next < instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= millisOfDay	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#505	!(mode != 'u' && mode != 'w' && mode != 's')	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#120	total < Integer.MIN_VALUE || total > Integer.MAX_VALUE	1
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	!(chrono == null)	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst != size	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2715	bestValidState != null	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value == length	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position <= value	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2593	(position)<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1839	(iMaxDigits)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2713	bestValidPos > position || (bestValidPos == position && isOptional)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position != len	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis == firstDayMillis	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart != next	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis > saveMillis	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos != bestInvalidPos	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)== 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos < position	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)<= 0	1
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#357	!(ref != null)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1932	minDigits < digits	0
org.joda.time.convert.ConverterSet#ConverterSet#remove#?,int,Converter[]#230	!(i != index)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1562	(iTailZone.getStandardOffset(instant))>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < monthOfYear	0
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#352	!(iFixedOffsetCache == null)	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos == bestInvalidPos	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos >= length	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)== 0	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dayOfWeekElement#?#1601	!(dwe == null)	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset >= position	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1185	b != a	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())== 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2378	(position)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= dayOfWeek	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1141	iValue > value	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end != instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == monthToUse	1
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#486	(result)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next < instant	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value >= length	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)== 0	0
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#263	iSavedFieldsCount < savedFieldsCount	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)== 0	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)> 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#roundFloor#?,long#93	(instant - instant % iUnitMillis)<= 0	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#503	(-a.compareTo(b))== 0	1
org.joda.time.format.DateTimeFormatter#long#parseMillis#?,String#735	!(newPos >= text.length())	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset >= hours	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset <= limit	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#142	!(offset != zone.getOffset(instant))	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendSignedDecimal#?,DateTimeFieldType,int,int#454	!(minDigits < 0 || maxDigits <= 0)	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)== 0	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset >= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	!(iMode == 'w')	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos != parsePos	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate < size	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next <= instant	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1145	(1)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit < hours	1
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#473	(millis)< 0	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#474	(result)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	!(daysToAdd != 0)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end > instant	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#int#get#?,long#407	(iField.get(localInstant))> 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1183	a != b	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate == size	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)< 0	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset < hoursInMinutes	1
org.joda.time.chrono.GregorianChronology#GregorianChronology#getInstance#?,DateTimeZone,int#111	!(zone == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= millisOfDay	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))< 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)< 0	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos != position	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == thisMonth	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst != i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > monthOfYear	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst == size	0
org.joda.time.DateTimeZone#String#printOffset#?,int#640	offset == hours	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos <= bestInvalidPos	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2395	(amount)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n < nn	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1269	!(length == 0 && (c == '-' || c == '+') && iSigned)	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos > length	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#152	thisMillis < otherMillis	1
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits <= minDigits	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2019	value < n	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n != nn	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value >= limit	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > thisMonth	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos <= length	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end <= start	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset >= saveMillis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < dayOfMonth	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))!= 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	!(value < 0)	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#131	(iZone.hashCode())== 0	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis == instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= dayOfMonth	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1930	!(minDigits < digits)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next > instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))>= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#466	localInstant > instant	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits > maxDigits	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1324	(position)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next > instant	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est < len	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits < maxDigits	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate != parseEst	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2388	!(limit > 0)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount < position	0
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#252	!(savedFieldsCount == savedFields.length || iSavedFieldsShared)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#1997	(iMaxDigits)== 0	1
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean#1000	(instantUTC)> 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)== 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset <= wallOffset	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)> 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags > flags	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] <= poolSize	1
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1401	(iMaxParsedDigits)== 0	1
org.joda.time.DateTimeZone#String#printOffset#?,int#640	offset != hours	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1894	fraction == 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= dayOfMonth	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis <= instant	0
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#134	iDefaultYear < defaultYear	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset != position	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position > value	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value == length	1
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimateParsedLength#?#1232	(iValue.length())!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2593	(position)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2590	!(i < len && position >= 0)	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart >= millis	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value <= nn	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#141	obj == null	1
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#49	!(cCache == null)	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#913	(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0	1
org.joda.time.format.DateTimeParserBucket#void#setOffset#?,int#182	iOffset > offset	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1555	(iStandardOffsets[i - 1])!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#454	isSupported(f=chrono.hours())	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#498	(-1)== 0	1
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2083	!(displayZone == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n >= nn	0
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position != limit	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#474	(result)> 0	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)> 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos > length	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos == bestValidPos	1
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#134	iDefaultYear > defaultYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == dayOfMonth	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2263	!(digitCount(text,position,2) < 2)	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	!(isLeapYear(year))	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd <= dayOfWeek	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est != i	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2613	!(element instanceof Composite)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > monthOfYear	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset < minutes	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end > instant	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit != offset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#445	!(isSupported(f=chrono.millis()))	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTimeParser#?#766	!(dtp == null)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != monthOfYear	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction != instant	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value >= length	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next != instant	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#218	(iStandardOffset)> 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#454	!(isSupported(f=chrono.hours()))	1
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1073	!(f == null)	1
org.joda.time.field.PreciseDurationDateTimeField#long#roundFloor#?,long#93	(instant - instant % iUnitMillis)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset < minutes	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position <= i	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] > size	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#215	!(iStandardOffset == Integer.MIN_VALUE)	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount != position	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode == mode	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2025	value > Integer.MAX_VALUE	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end >= start	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next != instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#533	isSupported(f=chrono.weekyearOfCentury())	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next != instant	0
org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber#int#estimatePrintedLength#?#1338	(iMaxParsedDigits)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1839	(iMaxDigits)== 0	1
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)>= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != yearToUse	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n == value	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst == i	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#497	isSupported(f=chrono.minuteOfHour())	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position != i	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position != limit	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] < poolSize	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1259	(iMaxParsedDigits)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1939	length < str.length()	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2240	!(c == '-')	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset > saveMillis	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2494	!(i < size)	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end != instant	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#486	(result)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] >= poolSize	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next >= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= monthToUse	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2721	(~bestInvalidPos)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == monthOfYear	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)!= 0	0
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#260	length == i	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1259	(iMaxParsedDigits)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1239	(~position)<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset >= hours	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))!= 0	0
org.joda.time.convert.ConverterSet#ConverterSet#remove#?,int,Converter[]#218	!(index >= length)	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#120	iMillis < instantLocal	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next < instant	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset > minutesOffset	0
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset > hours	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index != i	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#weekyearElement#?#1582	!(we == null)	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset < hoursOffset	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position > limit	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#344	!(compareReverse(first,months) >= 0 && compareReverse(first,days) <= 0)	0
org.joda.time.convert.ConverterSet#Converter#select#?,Class<?>#56	!(e.iType == type)	1
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#251	supportedType == type	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())< 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#roundFloor#?,long#92	!(instant >= 0)	1
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position >= len	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate > size	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1145	(1)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate > printEst	1
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos <= bestInvalidPos	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])> 0	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#352	!(i < count)	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#secondElement#?#1649	!(sme == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1940	!(buf != null)	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1912	(scaled & 0x7fffffff) == scaled	0
org.joda.time.format.DateTimeParserBucket#void#setOffset#?,int#182	iOffset <= offset	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2660	iParsedLengthEstimate != est	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits > minDigits	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= thisYear	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value == position	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == monthOfYear	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2271	hours > 23	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != millisOfDay	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#addArrayToList#?,List<Object>,Object[]#2633	i < array.length	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < thisYear	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#527	isSupported(f=chrono.weekOfWeekyear())	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1182	b <= a	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#weekElement#?#1591	!(wwe == null)	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#466	localInstant <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next == instant	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	!(i2 < 0)	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	!(value < 10)	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset <= saveMillis	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2008	length < limit	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2036	(position + length)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2395	(amount)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	iMode == 'w'	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart < periodStart	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2487	parserList.size() <= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#1997	(iMaxDigits)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= monthOfYear	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1239	(~position)> 0	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#yearElement#?#1553	!(ye == null)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] == poolSize	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits != minPrintedDigits	1
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean#1000	(instantUTC)== 0	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)< 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#538	minDigits < 0 || maxDigits <= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end >= start	0
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#215	!(converted.containsKey(field))	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	!(diff >= DateTimeConstants.MILLIS_PER_DAY * 365L)	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimatePrintedLength#?#1208	(iValue.length())<= 0	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))< 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#452	iValue <= value	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)> 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1141	iValue != value	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= months	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#152	!(info == null || (int)((info.iPeriodStart >> 32)) != period)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset > hours	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1074	iElementPairs.size() == 2	0
org.joda.time.field.PreciseDurationDateTimeField#long#roundFloor#?,long#93	(instant - instant % iUnitMillis)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#472	isSupported(f=chrono.years())	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#500	!(b == null || !b.isSupported())	0
org.joda.time.base.AbstractDateTime#int#getHourOfDay#?#183	(getChronology().hourOfDay().get(getMillis()))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits < minDigits	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate <= printEst	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst > size	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#232	(value < lowerBound) || (value > upperBound)	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear == year	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2651	--i >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2691	!(parsePos > bestValidPos)	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#int#get#?,long#407	(iField.get(localInstant))<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value <= n	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#125	iDefaultYear == defaultYear	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())>= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)<= 0	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))<= 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#203	year < 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index == i	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst < i	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeParser#toParser#?#153	isParser(f)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst < size	0
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#200	field == null || !field.isSupported()	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value > length	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1535	!(i > 0)	1
org.joda.time.format.DateTimeParserBucket#void#sort#?,SavedField[],int#402	i < high	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= months	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < dayOfWeek	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#527	!(isSupported(f=chrono.weekOfWeekyear()))	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset <= hoursInMinutes	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > dayOfMonth	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#494	!(isSupported(f=chrono.secondOfDay()))	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2511	!(elements == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)!= 0	0
org.joda.time.format.DateTimeFormatter#long#parseMillis#?,String#734	!(newPos >= 0)	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#498	(-1)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos <= position	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1145	(1)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos > parsePos	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateElementParser#?#611	!(dpe == null)	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1895	buf != null	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	daysToAdd != 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#548	!(isSupported(f=chrono.centuryOfEra()))	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] > size	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next != instant	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)< 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)> 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1839	(iMaxDigits)!= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#estimateParsedLength#?#1232	(iValue.length())<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	i < transitions.length	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1185	b <= a	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1343	i < poolSize	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2593	(position)< 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst >= i	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1562	(iTailZone.getStandardOffset(instant))< 0	0
org.joda.time.DateTimeZone#int#hashCode#?#1196	(57 + getID().hashCode())>= 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2681	parser == null	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value > nn	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2660	iParsedLengthEstimate > est	1
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1073	f == null	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos != length	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	isSupported(f=chrono.clockhourOfHalfday())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next != instant	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#214	!(iNextInfo == null || millis < iNextInfo.iPeriodStart)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1324	(position)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit < position	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value < length	1
org.joda.time.convert.ConverterSet#ConverterSet#remove#?,int,Converter[]#222	!(removed != null)	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#estimateParsedLength#?#2664	(iParsedLengthEstimate)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1939	!(length < str.length())	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)>= 0	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1559	iTailZone == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1259	(iMaxParsedDigits)== 0	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)== 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < dayOfMonth	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst <= i	0
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#247	--i >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2103	!(displayOffset == 0 && iMinFields <= 1)	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset == wallOffset	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value > limit	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position == offset	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset <= minutes	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits >= minPrintedDigits	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2479	!(i < size)	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset > wallOffset	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#136	!(id == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits != maxDigits	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2019	value == n	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#167	!(next == periodStart || next > end)	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	value < 0	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset > wallOffset	1
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#247	!(--i >= 0)	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits <= minDigits	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset == hoursOffset	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#551	!(iMode == 's')	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)!= 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimateParsedLength#?#2580	(iParsedLengthEstimate)!= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart == millis	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1236	text.regionMatches(true,position,iValue,0,iValue.length())	1
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#120	iMillis >= instantLocal	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value != position	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)<= 0	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1087	!(f == null)	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	years == 0	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber#int#estimatePrintedLength#?#1338	(iMaxParsedDigits)== 0	1
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)>= 0	0
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#256	!(supportedType == null || (type != null && !supportedType.isAssignableFrom(type)))	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset < standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end < start	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset > minutes	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] != i	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount <= limit	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= monthOfYear	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= dayOfWeek	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)== 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#896	(offsetAdjusted)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits >= minDigits	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1555	(iStandardOffsets[i - 1])== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= months	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart < next	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	isLeapYear(year)	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value < position	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1401	(iMaxParsedDigits)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit >= position	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos <= i	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))> 0	0
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#623	!((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)	0
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#263	iSavedFieldsCount >= savedFieldsCount	0
org.joda.time.convert.ConverterSet#Converter#select#?,Class<?>#55	(e=entries[index]) != null	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))<= 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#896	(offsetAdjusted)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position < offset	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#913	!((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0)	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#232	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#204	!(iNextInfo == null || millis < iNextInfo.iPeriodStart)	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#334	!(iSavedFieldsShared)	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2515	locale == null	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < months	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset >= wallOffset	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)!= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#207	id.equals("UTC")	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)>= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart <= end	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next > instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#298	!(thisDom > maxDom)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst != size	0
org.joda.time.format.DateTimeParserBucket$SavedState#boolean#restoreState#?,DateTimeParserBucket#426	enclosing != DateTimeParserBucket.this	1
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2036	(position + length)>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position <= hours	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1933	!(length <= 1 || str.charAt(length - 1) != '0')	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis >= saveMillis	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset == 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos > i	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#106	isPrinter(f)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset >= limit	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1187	(~position)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > dayOfWeek	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#weekyearElement#?#1582	we == null	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next == instant	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position > len	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))> 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1180	!(a != b)	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean#964	offsetLocal != offset	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction > instant	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	isLeapYear(year)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))== 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#891	!(nextLocal != nextAdjusted)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount >= position	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))== 0	1
org.joda.time.format.DateTimeFormatterBuilder#boolean#isPrinter#?,Object#1099	f instanceof Composite	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position != offset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= dayOfMonth	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))> 0	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#503	(-a.compareTo(b))> 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#452	iValue != value	1
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#125	iDefaultYear < defaultYear	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos != length	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#474	(result)>= 0	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2621	!(element instanceof DateTimeParser)	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))<= 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2207	(estimatePrintedLength())== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#469	!(isSupported(f=chrono.months()))	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset > hours	0
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#259	!(this == readableInstant)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#roundFloor#?,long#345	(iChronology.getYearMonthMillis(year,month))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos == i	1
org.joda.time.format.DateTimeParserBucket#boolean#restoreState#?,Object#289	savedState instanceof SavedState	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendSignedDecimal#?,DateTimeFieldType,int,int#457	!(minDigits <= 1)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode >= mode	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2487	!(parserList.size() <= 0)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2390	!(c < '0' || c > '9')	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	daysToAdd > 0	0
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#40	iWallOffset > standardOffset	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits >= maxDigits	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset > standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] <= i	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos == bestInvalidPos	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)> 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset <= hoursInMinutes	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#152	!(thisMillis < otherMillis)	0
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#656	printer == null	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > monthToUse	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index < i	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getStandardOffset#?,long#1191	(iStandardOffset)< 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#521	!(isSupported(f=chrono.dayOfMonth()))	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#offsetElement#?#1671	ze == null	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate <= parseEst	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1530	i >= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#506	!(isSupported(f=chrono.clockhourOfDay()))	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < months	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value < limit	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset <= minutesOffset	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2021	!(length == 0)	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next <= instant	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#466	localInstant != instant	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos == i	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit == hours	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2593	(position)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1141	iValue >= value	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#916	(instantLocal)== 0	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	next <= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	!(daysToAdd > 0)	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2621	element instanceof DateTimeParser	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#164	!(instant == null)	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)== 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#452	iValue < value	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value > position	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#896	(offsetAdjusted)== 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#524	isSupported(f=chrono.dayOfYear())	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)> 0	1
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1549	!(i >= 0)	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1185	b > a	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1169	(1)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount <= position	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1550	(iStandardOffsets[i])!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1180	a != b	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))> 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimePrinter,DateTimeParser[]#273	printer != null	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position == i	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1181	a >= b	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position >= hours	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value != limit	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount < limit	0
org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber#int#estimatePrintedLength#?#1338	(iMaxParsedDigits)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset != saveMillis	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1087	f == null	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] == i	1
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#205	!(in == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)<= 0	1
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position > hours	1
org.joda.time.convert.ConverterManager#ConverterManager#getInstance#?#89	INSTANCE == null	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))>= 0	0
org.joda.time.format.DateTimeFormatter#long#parseMillis#?,String#736	(bucket.computeMillis(true,text))>= 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears != year	0
org.joda.time.convert.ConverterSet#ConverterSet#remove#?,int,Converter[]#229	!(i < length)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1932	!(minDigits < digits)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1300	!(length >= 9)	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())> 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1295	length == 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < dayOfMonth	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)!= 0	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#505	mode != 'u' && mode != 'w' && mode != 's'	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] == size	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos != parsePos	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst != i	0
org.joda.time.tz.CachedDateTimeZone#int#getStandardOffset#?,long#115	(getInfo(instant).getStandardOffset(instant))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset < hours	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1181	a > b	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2234	!(limit <= 1)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start > instant	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#113	!(printer != null || parser != null)	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2610	i < size	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#521	isSupported(f=chrono.dayOfMonth())	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos >= length	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber#int#estimatePrintedLength#?#1338	(iMaxParsedDigits)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] >= i	1
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)<= 0	1
org.joda.time.convert.ConverterManager#ConverterManager#getInstance#?#89	!(INSTANCE == null)	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#885	(offsetLocal - offsetAdjusted) < 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1580	!(instant < end)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next < instant	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1259	(iMaxParsedDigits)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value <= length	0
org.joda.time.format.DateTimeParserBucket#void#sort#?,SavedField[],int#399	high > 10	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= thisMonth	0
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#689	id == null	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart == end	1
org.joda.time.base.AbstractDateTime#int#getHourOfDay#?#183	(getChronology().hourOfDay().get(getMillis()))!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#298	thisDom > maxDom	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value >= position	0
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	type == null	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1187	(~position)< 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset > hoursOffset	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1259	(iMaxParsedDigits)<= 0	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset > hoursInMinutes	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#120	iMillis != instantLocal	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))< 0	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#498	(-1)>= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value < limit	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1550	(iStandardOffsets[i])< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1324	(position)< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value != nn	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1169	(1)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos != bestInvalidPos	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)>= 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#320	!(iBase != null)	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#474	(result)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2692	parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null	0
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#452	iValue >= value	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos < parsePos	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset < hours	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimePrinter,DateTimeParser[]#276	parsers == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode != mode	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] == i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])== 0	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#494	!(a == null || !a.isSupported())	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1315	!(i < position)	0
org.joda.time.format.DateTimeParserBucket#Object#saveState#?#274	iSavedState == null	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset <= position	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode <= mode	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))!= 0	0
org.joda.time.format.DateTimeParserBucket#void#setOffset#?,int#182	iOffset < offset	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value <= position	0
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))<= 0	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#352	i < count	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position < length	1
org.joda.time.chrono.BasicYearDateTimeField#long#roundFloor#?,long#123	(iChronology.getYearMillis(get(instant)))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start >= instant	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset < hoursInMinutes	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > dayOfWeek	1
org.joda.time.convert.StringConverter#long#getInstantMillis#?,Object,Chronology#65	(p.withChronology(chrono).parseMillis(str))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2207	(estimatePrintedLength())<= 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#896	(offsetAdjusted)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= dayOfWeek	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1254	iMaxParsedDigits == maxParsedDigits	0
org.joda.time.format.DateTimeParserBucket#boolean#restoreState#?,Object#289	!(savedState instanceof SavedState)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#roundFloor#?,long#345	(iChronology.getYearMonthMillis(year,month))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate < size	1
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#125	iDefaultYear > defaultYear	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#460	isSupported(f=chrono.days())	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset >= hoursInMinutes	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next != instant	0
org.joda.time.tz.CachedDateTimeZone#int#getStandardOffset#?,long#115	(getInfo(instant).getStandardOffset(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position < limit	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position >= i	0
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	field == null	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset <= offset	1
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= dayOfMonth	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value == nn	0
org.joda.time.format.DateTimeFormatterBuilder$StringLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1239	(~position)!= 0	0
org.joda.time.tz.FixedDateTimeZone#int#getOffset#?,long#49	(iWallOffset)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2086	displayOffset == 0 && iZeroOffsetPrintText != null	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2591	position > i	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#minuteElement#?#1639	mhe == null	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis < millis	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)== 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))== 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart > millis	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))== 0	1
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#262	!(readableInstant instanceof ReadableInstant == false)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value <= length	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#466	!(isSupported(f=chrono.weekyears()))	1
org.joda.time.format.DateTimeFormatterBuilder#boolean#isParser#?,Object#1108	f instanceof DateTimeParser	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#472	!(isSupported(f=chrono.years()))	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value != i	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#monthElement#?#1562	!(mye == null)	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean#1000	(instantUTC)< 0	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())< 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))<= 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#452	iValue > value	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#214	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#200	!(iLoader != null)	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos <= length	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))<= 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#485	!(result != 0)	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#448	!(isSupported(f=chrono.seconds()))	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#82	value < 10000	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset != hours	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2703	parsePos < 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2071	!(iShowSeparators)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next >= instant	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#monthElement#?#1562	mye == null	1
org.joda.time.convert.ConverterSet#Converter#select#?,Class<?>#85	!(i < length)	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))> 0	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)>= 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#167	!((base=getBase()) != null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= dayOfWeek	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#yearElement#?#1553	ye == null	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos <= i	1
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#263	iSavedFieldsCount <= savedFieldsCount	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1562	(iTailZone.getStandardOffset(instant))> 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < yearToUse	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2656	est != len	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))>= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1401	(iMaxParsedDigits)< 0	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#503	(-a.compareTo(b))<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2690	!(parsePos >= position)	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTimeParser#?#766	dtp == null	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)> 0	0
org.joda.time.format.FormatUtils#int#parseTwoDigits#?,String,int#353	(((value << 3) + (value << 1)) + text.charAt(position + 1) - '0')< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst == size	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimePrinter,DateTimeParser[]#289	i < length - 1	0
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset != minutes	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset >= hoursOffset	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))!= 0	0
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	type == null	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis <= firstDayMillis	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2025	!(value > Integer.MAX_VALUE)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2074	iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position == limit	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index == size	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)> 0	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#168	!(chrono == null)	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isPrinter#?,Object#1099	!(f instanceof Composite)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1324	(position)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos > bestValidPos	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < thisMonth	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2112	!(iMaxFields == 2)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position >= offset	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < millisOfDay	0
org.joda.time.chrono.BasicYearDateTimeField#long#roundFloor#?,long#123	(iChronology.getYearMillis(get(instant)))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == dayOfMonth	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis >= millis	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])< 0	1
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	!(zone instanceof CachedDateTimeZone)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > dayOfWeek	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#445	isSupported(f=chrono.millis())	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2019	value <= n	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1182	b > a	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits == minPrintedDigits	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#168	chrono == null	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#roundFloor#?,long#345	(iChronology.getYearMonthMillis(year,month))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != dayOfMonth	0
org.joda.time.format.DateTimeParserBucket$SavedState#boolean#restoreState#?,DateTimeParserBucket#426	!(enclosing != DateTimeParserBucket.this)	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#146	!(instant == null)	0
org.joda.time.chrono.BasicYearDateTimeField#long#roundFloor#?,long#123	(iChronology.getYearMillis(get(instant)))<= 0	1
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#260	length <= i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode > mode	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#402	minDigits < 0 || maxDigits <= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2387	amount >= limit	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#hourElement#?#1630	!(hde == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= millisOfDay	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#56	base == null	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)<= 0	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear > year	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset == standardOffset	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2207	(estimatePrintedLength())!= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#?#ZonedDateTimeField#?,DateTimeField,DateTimeZone,DurationField,DurationField,DurationField#390	!field.isSupported()	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	!(i < transitions.length)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset == standardOffset	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())<= 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart >= end	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2481	printEst > size	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == dayOfWeek	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#106	!(isPrinter(f))	0
org.joda.time.DateTimeZone#int#hashCode#?#1196	(57 + getID().hashCode())< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2721	(~bestInvalidPos)== 0	1
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)>= 0	0
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#349	offset == 0	1
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value == n	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2274	offset == hours	1
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits >= maxParsedDigits	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#538	!(minDigits < 0 || maxDigits <= 0)	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#503	(-a.compareTo(b))>= 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2721	(~bestInvalidPos)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] <= size	1
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek == minDaysInFirstWeek	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#539	!(isSupported(f=chrono.year()))	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#485	isSupported(f=chrono.millisOfSecond())	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1371	!(in.readBoolean())	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2721	(~bestInvalidPos)>= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != dayOfWeek	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position == i	1
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits < maxParsedDigits	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#535	!(maxDigits < minDigits)	0
org.joda.time.field.PreciseDurationDateTimeField#?#PreciseDurationDateTimeField#?,DateTimeFieldType,DurationField#55	iUnitMillis < 1	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	periodStart == next	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos >= parsePos	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2593	(position)== 0	1
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset == hours	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis > instant	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset >= wallOffset	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#551	instant >= 0	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#131	!((base=iBase) != null && (iBaseFlags & 5) == 5)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next <= instant	0
org.joda.time.base.AbstractDateTime#int#getHourOfDay#?#183	(getChronology().hourOfDay().get(getMillis()))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1169	(1)<= 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimePrinter,DateTimeParser[]#280	length == 1	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1289	!(c < '0' || c > '9')	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= monthOfYear	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > thisYear	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset == minutesOffset	1
org.joda.time.chrono.BasicChronology#DateTimeZone#getZone#?#143	(base=getBase()) != null	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	chrono != null && chrono.getZone() == zone	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits == minDigits	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos >= bestValidPos	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#539	isSupported(f=chrono.year())	0
org.joda.time.format.DateTimeParserBucket#Object#saveState#?#274	!(iSavedState == null)	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#131	(iZone.hashCode())< 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1184	a != b	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1223	instant > 0 && end < 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#475	isSupported(f=chrono.centuries())	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#56	!(base == null)	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#204	iNextInfo == null || millis < iNextInfo.iPeriodStart	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#138	!(dayToUse > maxDay)	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#220	(iNextInfo.getStandardOffset(millis))< 0	1
org.joda.time.format.DateTimeParserBucket#void#setOffset#?,int#182	iOffset == offset	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1187	(~position)> 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1896	--minDigits >= 0	0
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#134	iDefaultYear <= defaultYear	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits > minPrintedDigits	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2718	(bestValidPos)== 0	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#474	(result)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1554	i > 0	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2479	i < size	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2718	(bestValidPos)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis < saveMillis	1
org.joda.time.format.FormatUtils#int#parseTwoDigits#?,String,int#353	(((value << 3) + (value << 1)) + text.charAt(position + 1) - '0')> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit != hours	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2660	iParsedLengthEstimate >= est	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#125	iDefaultYear != defaultYear	1
org.joda.time.convert.ConverterSet#Converter#select#?,Class<?>#86	!(entries[i] == null)	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1185	b >= a	0
org.joda.time.convert.ConverterSet#Converter#select#?,Class<?>#55	!((e=entries[index]) != null)	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1185	b == a	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= dayOfWeek	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#896	(offsetAdjusted)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < thisMonth	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2207	(estimatePrintedLength())> 0	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#485	result != 0	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#263	!(hoursInMinutes < 0)	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != monthOfYear	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position >= length	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis > millis	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#474	(result)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value <= limit	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2705	!(parsePos > bestInvalidPos)	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > months	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#220	(iNextInfo.getStandardOffset(millis))> 0	0
org.joda.time.format.DateTimeParserBucket#boolean#restoreState#?,Object#290	((SavedState)savedState).restoreState(this)	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#80	value < 1000	1
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#542	!(isSupported(f=chrono.yearOfEra()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != monthOfYear	1
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	!((base=iBase) != null)	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2718	(bestValidPos)> 0	0
org.joda.time.base.AbstractDateTime#int#getHourOfDay#?#183	(getChronology().hourOfDay().get(getMillis()))== 0	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#466	localInstant == instant	1
org.joda.time.tz.FixedDateTimeZone#int#getOffsetFromLocal#?,long#57	(iWallOffset)> 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendLiteral#?,String#370	!(text == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= millisOfDay	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))< 0	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= monthToUse	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next != instant	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2378	(position)<= 0	1
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#916	(instantLocal)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != dayOfMonth	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags < flags	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))!= 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset >= minutes	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	!(iBase == null)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1550	(iStandardOffsets[i])>= 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis == instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index != size	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#203	!(year < 0)	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#542	isSupported(f=chrono.yearOfEra())	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position > limit	1
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#263	iSavedFieldsCount == savedFieldsCount	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1314	position >= value	0
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek >= minDaysInFirstWeek	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#548	isSupported(f=chrono.centuryOfEra())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	!(next <= instant)	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))< 0	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next >= instant	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)<= 0	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#131	(iZone.hashCode())>= 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos <= length	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#addArrayToList#?,List<Object>,Object[]#2633	!(i < array.length)	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isParser#?,Object#1108	!(f instanceof DateTimeParser)	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart <= periodStart	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	!(isLeapYear(year))	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset != minutes	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#?#ZonedDurationField#?,DurationField,DateTimeZone#285	!(!field.isSupported())	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1353	i < size	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index < size	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index > poolSize	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next < instant	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isPrinter#?,Object#1098	f instanceof DateTimePrinter	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#545	!(isSupported(f=chrono.yearOfCentury()))	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2472	!(printerList.size() <= 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < monthOfYear	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2036	(position + length)== 0	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#149	thisMillis == otherMillis	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit <= position	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2242	!(c == '+')	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())> 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos >= parsePos	0
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#352	iFixedOffsetCache == null	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#roundFloor#?,long#345	(iChronology.getYearMonthMillis(year,month))> 0	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#919	!(iZone != null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst <= size	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)> 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	!(isLeapYear(thisYear))	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset <= standardOffset	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear >= year	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#196	!(iFileDir != null)	0
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	chrono == null	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1353	!(i < size)	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2036	(position + length)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#estimateParsedLength#?#2664	(iParsedLengthEstimate)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2655	!(len > est)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#digitCount#?,String,int,int#2395	(amount)< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value <= limit	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1555	(iStandardOffsets[i - 1])< 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeParser#toParser#?#153	!(isParser(f))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	poolSize < 256	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= months	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#offsetElement#?#1671	!(ze == null)	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#218	(iStandardOffset)!= 0	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#214	(value < lowerBound) || (value > upperBound)	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#220	(iNextInfo.getStandardOffset(millis))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos < position	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#220	(iNextInfo.getStandardOffset(millis))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= yearToUse	0
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#263	iSavedFieldsCount > savedFieldsCount	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate > parseEst	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1269	length == 0 && (c == '-' || c == '+') && iSigned	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= yearToUse	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1530	!(i >= 0)	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)> 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd > dayOfWeek	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos < bestValidPos	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end > start	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getStandardOffset#?,long#1191	(iStandardOffset)!= 0	0
org.joda.time.format.DateTimeParserBucket#void#setOffset#?,int#182	iOffset >= offset	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos <= i	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1181	a == b	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2234	limit <= 1	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate > size	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < monthToUse	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2494	i < size	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits <= maxParsedDigits	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit >= hours	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#125	iDefaultYear >= defaultYear	0
org.joda.time.format.DateTimeFormatterBuilder#void#checkParser#?,DateTimeParser#319	!(parser == null)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1534	i < transitions.length	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)== 0	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#254	!(hoursOffset == 0 && minutesOffset == 0)	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	size > 1	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= dayOfWeek	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2015	value >= n	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit > hours	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1834	iMinDigits == minDigits	0
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#268	offset != hoursInMinutes	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1141	iValue < value	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2077	(est)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2276	position >= limit	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos <= position	1
org.joda.time.DateTimeZone#DateTimeZone#forOffsetHoursMinutes#?,int,int#266	minutesOffset != offset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= dayOfWeek	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	!(diff < 0)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1941	!(i < length)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#457	isSupported(f=chrono.halfdays())	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2077	(est)< 0	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)<= 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2699	bestValidPos >= position	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))> 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2083	displayZone == null	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2108	iShowSeparators	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1182	b == a	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1254	iMaxParsedDigits != maxParsedDigits	1
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end < instant	1
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#916	(instantLocal)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2681	!(parser == null)	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#?#MatchingParser#?,DateTimeParser[]#2651	!(--i >= 0)	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#63	!(zone == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset > standardOffset	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2484	iPrintedLengthEstimate >= size	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2704	parsePos == position	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 < instant	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= monthOfYear	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#488	isSupported(f=chrono.millisOfDay())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#518	isSupported(f=chrono.dayOfWeek())	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 != instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getStandardOffset#?,long#1550	(iStandardOffsets[i])<= 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	isLeapYear(year)	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] < i	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())>= 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#473	(millis)!= 0	0
org.joda.time.field.PreciseDateTimeField#?#PreciseDateTimeField#?,DateTimeFieldType,DurationField,DurationField#65	!(iRange < 2)	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())< 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)!= 0	0
org.joda.time.format.DateTimeFormatter#long#parseMillis#?,String#734	newPos >= 0	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#344	compareReverse(first,months) >= 0 && compareReverse(first,days) <= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2016	n <= value	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2499	iParsedLengthEstimate >= size	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	instant >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1186	!(a != b)	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1894	!(fraction == 0)	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2108	!(iShowSeparators)	1
org.joda.time.DateTimeZone#DateTimeZone#fixedOffsetZone#?,String,int#349	!(offset == 0)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2036	(position + length)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value == i	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)< 0	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#377	(millis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit > position	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1831	maxDigits > 18	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2378	(position)> 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value > limit	0
org.joda.time.convert.ConverterSet#ConverterSet#remove#?,int,Converter[]#222	removed != null	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2683	bestValidPos <= position	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#hourElement#?#1630	hde == null	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimeFormatter#209	formatter == null	1
org.joda.time.DateTimeZone#String#printOffset#?,int#640	offset > hours	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != millisOfDay	0
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#262	readableInstant instanceof ReadableInstant == false	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#parseInto#?,DateTimeParserBucket,String,int#2019	value != n	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#532	!(fieldType == null)	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#loadZoneData#?,String#236	in != null	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	!(chrono != null && chrono.getZone() == zone)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next == instant	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset == minutes	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value < i	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#loadZoneData#?,String#236	!(in != null)	1
org.joda.time.format.DateTimeFormatterBuilder#boolean#isParser#?,Object#1109	f instanceof Composite	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1540	iTailZone == null	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1310	value < position	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] < size	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1208	instant > 0 && start < 0	1
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= monthOfYear	0
org.joda.time.base.AbstractDateTime#int#getHourOfDay#?#183	(getChronology().hourOfDay().get(getMillis()))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next < instant	1
org.joda.time.tz.FixedDateTimeZone#?#FixedDateTimeZone#?,String,String,int,int#41	iStandardOffset < standardOffset	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	value < 10	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2472	printerList.size() <= 0	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#919	iZone != null	1
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	!(field == null)	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset < saveMillis	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	i2 < 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#parseInto#?,DateTimeParserBucket,String,int#2275	limit != position	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1316	value != length	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1181	a != b	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#?#PaddedNumber#?,DateTimeFieldType,int,boolean,int#1397	iMinPrintedDigits <= minPrintedDigits	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1173	position >= text.length()	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	!(size > 1)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	!(poolSize < 256)	1
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#estimateParsedLength#?#2664	(iParsedLengthEstimate)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2610	!(i < size)	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags == flags	0
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset < standardOffset	1
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1267	!(length < limit)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1835	iMaxDigits != maxDigits	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#113	printer != null || parser != null	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#466	isSupported(f=chrono.weekyears())	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#int#get#?,long#407	(iField.get(localInstant))< 0	1
org.joda.time.field.FieldUtils#int#safeMultiply#?,int,int#124	((int)total)!= 0	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#timeElementParser#?#695	tpe == null	0
org.joda.time.convert.ConverterSet#Converter#selectSlow#?,ConverterSet,Class<?>#260	length > i	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())!= 0	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#120	iMillis <= instantLocal	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1371	in.readBoolean()	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags != flags	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$MatchingParser#int#parseInto#?,DateTimeParserBucket,String,int#2706	bestInvalidPos <= bestValidPos	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#334	iSavedFieldsShared	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#500	isSupported(f=chrono.minuteOfDay())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)<= 0	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)<= 0	1
org.joda.time.chrono.GregorianChronology#void#assemble#?,Fields#191	!(getBase() == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > monthOfYear	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2496	parseEst >= size	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getStandardOffset#?,long#220	(iNextInfo.getStandardOffset(millis))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2521	!(i < len)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)>= 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#645	offset != hours	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#long#set#?,long,int#468	get(result) != value	1
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#120	iMillis > instantLocal	1
org.joda.time.tz.CachedDateTimeZone#int#getStandardOffset#?,long#115	(getInfo(instant).getStandardOffset(instant))>= 0	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#int#get#?,long#407	(iField.get(localInstant))== 0	0