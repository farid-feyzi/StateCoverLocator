line	predicate	lable
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))<= 0	1
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#916	iChrono != null	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))== 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))< 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next > instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#126	!(instant >= 0)	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))>= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))<= 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#886	offsetLocal != offsetAdjusted	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#900	(offsetAdjusted)< 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	iAdvance	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis >= instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 < instant	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next < instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start <= instant	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))== 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == thisYear	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))<= 0	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis <= instant	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= thisMonth	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != thisMonth	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset >= hours	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	next <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset >= minutes	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#895	nextLocal != nextAdjusted	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= thisYear	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))< 0	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next >= instant	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next != instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))> 0	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#919	iZone != null	1
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))>= 0	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next >= instant	0
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	!(info == null || info.iYear != year)	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))< 0	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)<= 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)!= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)== 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	!(years == 0)	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)> 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))< 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))>= 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	value < 10	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next < instant	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)>= 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	value < 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())<= 0	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end > instant	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > thisYear	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset == hours	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))>= 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())== 0	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	daysToAdd != 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	!(instant >= 0)	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end != start	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#551	!(instant >= 0)	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2086	displayOffset == 0 && iZeroOffsetPrintText != null	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	isLeapYear(year)	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	!(zone == null)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)== 0	1
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#113	monthToUse >= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end >= start	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next == instant	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))== 0	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#142	offset != zone.getOffset(instant)	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1894	fraction == 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < thisMonth	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != yearToUse	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis > millis	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next < instant	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))< 0	1
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	chrono != null && chrono.getZone() == zone	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != monthToUse	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	!(dayOfYear > (31 + 28))	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#919	!(iZone != null)	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis <= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	i < transitions.length	1
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#164	instant == null	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset != minutes	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))== 0	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset > minutes	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == thisMonth	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset <= minutes	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= months	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)> 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)== 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset < minutes	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#205	!(iOffset == Integer.MIN_VALUE)	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= thisYear	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))<= 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)< 0	1
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))<= 0	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd == dayOfWeek	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))!= 0	0
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#656	printer == null	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)<= 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)>= 0	0
org.joda.time.chrono.BasicChronology#DateTimeZone#getZone#?#143	(base=getBase()) != null	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#80	value < 1000	1
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	info == null || info.iYear != year	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)!= 0	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))< 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= yearToUse	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == thisMonth	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > thisYear	1
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next < instant	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	!(value < 0)	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	value < 100	0
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#623	(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)< 0	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)== 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2086	!(displayOffset == 0 && iZeroOffsetPrintText != null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)> 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#900	(offsetAdjusted)== 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))!= 0	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))>= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2090	displayOffset >= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))> 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis != instant	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))>= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	!(isLeapYear(thisYear))	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))< 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)>= 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != thisMonth	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis < instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next == instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != thisYear	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#146	!(instant == null)	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > months	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end <= instant	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)<= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)> 0	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd > dayOfWeek	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)!= 0	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)> 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2099	iMaxFields == 1	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)< 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))!= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	diff < 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 > instant	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2103	displayOffset == 0 && iMinFields <= 1	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTime#?#936	dt == null	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis > instant	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= monthToUse	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)<= 0	1
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)> 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))<= 0	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#232	(value < lowerBound) || (value > upperBound)	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next < instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= months	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	!(iMode == 'w')	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next <= instant	1
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	!(chrono == null)	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))== 0	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)== 0	1
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#168	chrono == null	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= thisMonth	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#889	!((offsetLocal - offsetAdjusted) < 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	iMode == 'w'	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > thisMonth	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end < instant	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2112	iMaxFields == 2	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd != dayOfWeek	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#126	instant >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset < hours	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset < hours	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)!= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)< 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)<= 0	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset != hours	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	!(diff >= DateTimeConstants.MILLIS_PER_DAY * 365L)	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	!(size > 1)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#551	!(iMode == 's')	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)>= 0	0
org.joda.time.tz.CachedDateTimeZone#long#nextTransition#?,long#123	(iZone.nextTransition(instant))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < thisYear	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)<= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == months	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))<= 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1896	--minDigits >= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)< 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)> 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#298	!(thisDom > maxDom)	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))!= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))> 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))> 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start < instant	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))> 0	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))== 0	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next != instant	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end == instant	1
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#168	!(chrono == null)	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)< 0	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next == instant	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset > hours	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))<= 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis != millis	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)>= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)> 0	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next >= instant	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)> 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1895	buf != null	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis >= instant	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	!(diff < 0)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)>= 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2116	!(displayOffset == 0 && iMinFields <= 2)	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < months	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2511	elements == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next != instant	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTime#?#936	!(dt == null)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))== 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next == instant	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))> 0	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))== 0	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis > instant	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)<= 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#82	!(value < 10000)	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)< 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#900	(offsetAdjusted)> 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)> 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)!= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next < instant	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start >= instant	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	!(months == 0)	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#551	instant >= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= months	0
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#152	!(info == null || (int)((info.iPeriodStart >> 32)) != period)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2083	displayZone == null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start > instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < months	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))== 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start != instant	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#900	(offsetAdjusted)<= 0	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#214	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))== 0	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next >= instant	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))> 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	iDayOfMonth >= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2083	!(displayZone == null)	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset >= hours	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))<= 0	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#146	instant == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)!= 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next > instant	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	!(next <= instant)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next <= instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)< 0	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < thisYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)== 0	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)< 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))!= 0	0
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#623	!((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))>= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < thisMonth	1
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))< 0	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)> 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())> 0	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#916	!(iChrono != null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)<= 0	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	instant >= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))> 0	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)<= 0	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))>= 0	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)== 0	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#131	(base=iBase) != null && (iBaseFlags & 5) == 5	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next != instant	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 <= instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis >= millis	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next != instant	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= monthToUse	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	instant >= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == months	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > months	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))< 0	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < yearToUse	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))>= 0	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#113	!(monthToUse >= 0)	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#900	(offsetAdjusted)>= 0	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > yearToUse	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	iDayOfWeek == 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1576	!(iTailZone == null)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd <= dayOfWeek	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)< 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1895	!(buf != null)	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)== 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))< 0	1
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	zone == null	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)<= 0	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#142	!(offset != zone.getOffset(instant))	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))== 0	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#551	iMode == 's'	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)< 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	!(value < 10)	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)== 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= yearToUse	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))>= 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#80	!(value < 1000)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next <= instant	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	!(i2 < 0)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != months	0
org.joda.time.tz.CachedDateTimeZone#long#nextTransition#?,long#123	(iZone.nextTransition(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1576	iTailZone == null	1
org.joda.time.chrono.BasicChronology#DateTimeZone#getZone#?#143	!((base=getBase()) != null)	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)!= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))>= 0	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next < instant	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)!= 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#167	(base=getBase()) != null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end <= start	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2521	i < len	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= months	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	!(iDayOfMonth >= 0)	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))== 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	!(i < transitions.length)	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#889	(offsetLocal - offsetAdjusted) < 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction <= instant	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))< 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	!(iAdvance)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2108	iShowSeparators	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != thisYear	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#82	value < 10000	0
org.joda.time.tz.CachedDateTimeZone#long#nextTransition#?,long#123	(iZone.nextTransition(instant))< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)>= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)> 0	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))!= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	!(isLeapYear(year))	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2108	!(iShowSeparators)	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)< 0	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#214	(value < lowerBound) || (value > upperBound)	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	isLeapYear(year)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next >= instant	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))>= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	(iNextInfo.getOffset(millis))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2511	!(elements == null)	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	diff >= DateTimeConstants.MILLIS_PER_DAY * 365L	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))>= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))>= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1896	!(--minDigits >= 0)	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#886	!(offsetLocal != offsetAdjusted)	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)<= 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next != instant	0
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#656	!(printer == null)	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1223	instant > 0 && end < 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next <= instant	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#138	dayToUse > maxDay	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)!= 0	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))> 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))== 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)!= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)> 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)<= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))< 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2099	!(iMaxFields == 1)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next > instant	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	!(isLeapYear(year))	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next > instant	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	isLeapYear(year)	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction < instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next > instant	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())< 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)>= 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end == start	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)> 0	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#164	!(instant == null)	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < monthToUse	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)== 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#298	thisDom > maxDom	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis == instant	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2103	!(displayOffset == 0 && iMinFields <= 1)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1580	!(instant < end)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2116	displayOffset == 0 && iMinFields <= 2	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))<= 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	size > 1	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)!= 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#900	(offsetAdjusted)!= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next != instant	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1580	instant < end	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > thisMonth	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset > hours	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd >= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))> 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)<= 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)== 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= thisYear	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next < instant	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#204	!(iNextInfo == null || millis < iNextInfo.iPeriodStart)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	daysToAdd > 0	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#232	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)< 0	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > monthToUse	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1894	!(fraction == 0)	1
org.joda.time.tz.CachedDateTimeZone#long#nextTransition#?,long#123	(iZone.nextTransition(instant))> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	i2 < 0	1
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	!((base=iBase) != null)	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)== 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))!= 0	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)< 0	1
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#152	info == null || (int)((info.iPeriodStart >> 32)) != period	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)<= 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	isLeapYear(thisYear)	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis < millis	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	!(isLeapYear(year))	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)<= 0	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)<= 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))!= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)> 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2504	(iPrintedLengthEstimate)>= 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))>= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())!= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#204	iNextInfo == null || millis < iNextInfo.iPeriodStart	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))< 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)< 0	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd < dayOfWeek	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#205	iOffset == Integer.MIN_VALUE	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == yearToUse	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next <= instant	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))== 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end < start	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)<= 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)<= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	dayOfYear > (31 + 28)	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset != hours	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == thisYear	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#138	!(dayToUse > maxDay)	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	chrono == null	1
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	(base=iBase) != null	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis != instant	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis <= millis	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 == instant	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#131	!((base=iBase) != null && (iBaseFlags & 5) == 5)	1
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset <= hours	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset == minutes	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2112	!(iMaxFields == 2)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	!(iDayOfWeek == 0)	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#167	!((base=getBase()) != null)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next != instant	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)> 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	!(value < 100)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	!(daysToAdd > 0)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= thisMonth	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)!= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)>= 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))> 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)> 0	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)!= 0	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)!= 0	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))<= 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis == instant	0
org.joda.time.tz.CachedDateTimeZone#long#nextTransition#?,long#123	(iZone.nextTransition(instant))>= 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)<= 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#895	!(nextLocal != nextAdjusted)	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction == instant	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2515	locale == null	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)== 0	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset == hours	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	years == 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1884	fraction > instant	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis < instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start == instant	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end > start	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1208	!(instant > 0 && start < 0)	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	!(chrono != null && chrono.getZone() == zone)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	!(daysToAdd != 0)	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis == millis	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2521	!(i < len)	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != months	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1208	instant > 0 && start < 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 != instant	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next > instant	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)== 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)!= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)== 0	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)>= 0	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))!= 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))!= 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))!= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))>= 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))!= 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))< 0	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2090	!(displayOffset >= 0)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= thisMonth	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	months == 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next <= instant	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2102	displayOffset <= hours	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1223	!(instant > 0 && end < 0)	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	!(instant >= 0)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)<= 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)!= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2515	!(locale == null)	1
org.joda.time.tz.CachedDateTimeZone#long#nextTransition#?,long#123	(iZone.nextTransition(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == monthToUse	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)!= 0	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next >= instant	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))== 0	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())== 0	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))<= 0	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))== 0	1