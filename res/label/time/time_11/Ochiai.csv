line	predicate	lable
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))> 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year != saveMillis	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] > i	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#int#getDifference#?,long,long#190	(ImpreciseDateTimeField.this.getDifference(minuendInstant,subtrahendInstant))<= 0	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	zone == null	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > thisYear	1
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#170	(difference)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getWallOffset#?#914	(iWallOffset)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1030	millis < firstMillis	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] >= size	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	!(isLeapYear(year))	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > thisMonth	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#DSTZone#buildTailZone#?,String#1141	iRules.size() == 2	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#860	testInstant <= instant	1
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#102	!((val1 ^ diff) < 0 && (val1 ^ val2) < 0)	0
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#88	!(minuendInstant < subtrahendInstant)	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#891	iMillis < millis	1
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#405	size == 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year >= wallOffset	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] == size	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < dayOfMonth	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#894	iStandardOffset >= standardOffset	0
org.joda.time.DateTimeUtils$SystemMillisProvider#long#getMillis#?#515	(System.currentTimeMillis())> 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)< 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#540	(7 + (int)((daysSince19700101 + 4) % 7))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1457	!(tailZone != null)	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year >= saveMillis	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#113	!(monthToUse >= 0)	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1115	iUpperYear < Integer.MAX_VALUE	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#363	addTransition(transitions,next)	0
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#418	!(size >= 2)	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < dayOfWeek	0
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#282	!(chrono == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] < size	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > millisOfDay	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)>= 0	0
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next == instant	1
org.joda.time.DateTimeZone#DateTimeZone#getDefault#?#134	!(zone == null)	0
org.joda.time.DateTimeUtils#long#currentTimeMillis#?#86	(cMillisProvider.getMillis())> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= yearToUse	0
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis >= saveMillis	0
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#167	!(minuendRem < subtrahendRem)	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#182	(ImpreciseDateTimeField.this.add(instant,value))>= 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear != fromYear	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZoneBuilder#addCutover#?,int,char,int,int,int,boolean,int#252	iRuleSets.size() > 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode >= mode	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#539	daysSince19700101 < -3	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	next <= instant	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))!= 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 != unitMillis	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#void#addRule#?,Rule#994	!iRules.contains(rule)	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))<= 0	1
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getStandardOffset#?#918	(iStandardOffset)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#258	minuendDom == iChronology.getDaysInYearMonth(minuendYear,minuendMonth)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset == standardOffset	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= yearToUse	1
org.joda.time.base.BasePeriod#int#getValue#?,int#329	(iValues[index])!= 0	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))< 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)< 0	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#261	startInstant > endInstant	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZoneBuilder#addRecurringSavings#?,String,int,int,int,char,int,int,int,boolean,int#309	fromYear <= toYear	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#209	leapYears > year	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#891	iMillis >= millis	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1049	first == null	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#865	!(next > instant)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)== 0	1
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))< 0	1
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#426	!(newLocal != lastLocal)	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 != instant	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1049	!(first == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1029	(next=nextTransition(millis,saveMillis)) != null	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next > instant	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#304	thisDom > maxDom	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year == wallOffset	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)< 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.DateTimeUtils#long#currentTimeMillis#?#86	(cMillisProvider.getMillis())!= 0	0
org.joda.time.DateTimeUtils$SystemMillisProvider#long#getMillis#?#515	(System.currentTimeMillis())>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year != standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis != ruleSetCount	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	months == 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset > standardOffset	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < months	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < monthOfYear	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] > size	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis > millis	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis == next	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)< 0	1
org.joda.time.PeriodType#PeriodType#yearMonthDay#?#164	!(type == null)	0
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#419	offsetForLast <= size	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 > instant	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] > size	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1105	!(nextRule == null)	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis == firstDayMillis	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year != wallOffset	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#258	!(minuendDom == iChronology.getDaysInYearMonth(minuendYear,minuendMonth))	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#551	!(instant >= 0)	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)<= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	diff < 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1092	!(next <= instant)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#505	mode != 'u' && mode != 'w' && mode != 's'	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] == i	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear <= fromYear	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	i2 < 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1436	!(curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2]) && curNameKey.equals(zoneNameData[4]))	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1131	!(iUpperYear == Integer.MAX_VALUE)	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#352	!(next == null)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear < fromYear	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getToYear#?#827	(iToYear)< 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#boolean#isCachable#?#1690	iTailZone != null	0
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#170	(difference)<= 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] != i	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#261	startInstant >= endInstant	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getToYear#?#827	(iToYear)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year < wallOffset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < dayOfMonth	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != monthToUse	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year != saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis >= instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)< 0	1
org.joda.time.field.FieldUtils#int#safeToInt#?,long#187	!(Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE)	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	isLeapYear(thisYear)	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#59	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	!(iAdvance)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > monthToUse	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next <= instant	0
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#167	minuendRem < subtrahendRem	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#540	(7 + (int)((daysSince19700101 + 4) % 7))> 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#203	year < 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset <= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year >= saveMillis	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)< 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != thisMonth	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#DSTZone#buildTailZone#?,String#1141	!(iRules.size() == 2)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#309	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))== 0	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= monthOfYear	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))> 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#857	testInstant <= instant	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis == i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))< 0	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1110	!(chrono.year().get(nextMillis) >= YEAR_LIMIT)	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis > i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1110	chrono.year().get(nextMillis) >= YEAR_LIMIT	1
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	!(zone == null)	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year == saveMillis	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#278	!(duration != 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > dayOfWeek	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#280	(difference)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= dayOfMonth	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	!(diff >= DateTimeConstants.MILLIS_PER_DAY * 365L)	0
org.joda.time.DateTimeUtils$SystemMillisProvider#long#getMillis#?#515	(System.currentTimeMillis())== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != dayOfMonth	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year == wallOffset	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getSaveMillis#?#839	(iRecurrence.getSaveMillis())>= 0	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year <= wallOffset	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode == mode	0
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#88	minuendInstant < subtrahendInstant	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getSaveMillis#?#922	(iWallOffset - iStandardOffset)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1098	next <= nextMillis	0
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#280	(difference)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#boolean#isTransitionFrom#?,Transition#929	other == null	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)>= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= months	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis == i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getSaveMillis#?#839	(iRecurrence.getSaveMillis())< 0	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))> 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 > unitMillis	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == dayOfMonth	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] <= size	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < millisOfDay	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#537	daysSince19700101 <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year > saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next > instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= thisMonth	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#537	daysSince19700101 > instant	0
org.joda.time.DateTimeUtils#PeriodType#getPeriodType#?,PeriodType#316	type == null	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#182	(ImpreciseDateTimeField.this.add(instant,value))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year <= standardOffset	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)> 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))<= 0	0
org.joda.time.base.BasePeriod#int#getValue#?,int#329	(iValues[index])== 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1132	(Long.MAX_VALUE)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset < standardOffset	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	dayOfYear > (31 + 28)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year <= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear <= fromYear	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis < next	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#203	!(year < 0)	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#void#setStandardOffset#?,int#985	iStandardOffset == standardOffset	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)== 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 < instant	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year <= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year >= wallOffset	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != monthOfYear	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	!(daysToAdd > 0)	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))< 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#857	testInstant != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	!(next <= instant)	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	!(iDayOfWeek == 0)	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))<= 0	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#182	(ImpreciseDateTimeField.this.add(instant,value))< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset < standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#void#setStandardOffset#?,int#985	iStandardOffset >= standardOffset	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)> 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > thisYear	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#182	(ImpreciseDateTimeField.this.add(instant,value))> 0	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getSaveMillis#?#922	(iWallOffset - iStandardOffset)!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getStandardOffset#?#918	(iStandardOffset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] >= size	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] > i	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis == millis	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year <= wallOffset	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= months	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] < i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1460	!(ZoneInfoCompiler.verbose())	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis >= next	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset <= saveMillis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	!(iMode == 'w')	1
org.joda.time.field.FieldUtils#int#safeToInt#?,long#188	((int)value)!= 0	0
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))> 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#257	!(startInstant != endInstant)	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))!= 0	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))>= 0	1
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)< 0	0
org.joda.time.tz.DateTimeZoneBuilder#RuleSet#getLastRuleSet#?#320	!(iRuleSets.size() == 0)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1390	size == 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1464	tailZone.iStartRecurrence.getSaveMillis() > 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear == year	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#537	daysSince19700101 < instant	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#540	(7 + (int)((daysSince19700101 + 4) % 7))<= 0	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)<= 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] < value	1
org.joda.time.DateTimeUtils$SystemMillisProvider#long#getMillis#?#515	(System.currentTimeMillis())< 0	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= dayOfMonth	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	!(diff < 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= millisOfDay	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	daysToAdd > 0	1
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset >= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#860	testInstant != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#364	!(tailZone != null)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear == toYear	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= months	0
org.joda.time.DateTimeUtils$SystemMillisProvider#long#getMillis#?#515	(System.currentTimeMillis())<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#860	testInstant < instant	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#537	daysSince19700101 != instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1421	set != null && set.length == 5 && id.equals(set[0])	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= thisYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next < instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > monthOfYear	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears != year	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= dayOfWeek	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#long#getMillis#?#906	(iMillis)== 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))<= 0	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	instant >= 0	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#362	(next=rs.nextTransition(millis,saveMillis)) != null	0
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#419	offsetForLast != size	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#int#getDifference#?,long,long#190	(ImpreciseDateTimeField.this.getDifference(minuendInstant,subtrahendInstant))== 0	0
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#893	iWallOffset == standardOffset	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#304	!(thisDom > maxDom)	0
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1390	!(size == 0)	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)<= 0	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)< 0	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	daysToAdd != 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1030	millis <= firstMillis	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1098	!(next <= nextMillis)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1457	tailZone != null	0
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#91	(iChronology.getYearDifference(minuendInstant,subtrahendInstant))> 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year >= wallOffset	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset != saveMillis	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)> 0	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#217	(value < lowerBound) || (value > upperBound)	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#void#setStandardOffset#?,int#985	iStandardOffset > standardOffset	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= thisMonth	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#554	((DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)> 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)>= 0	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)== 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis > ruleSetCount	0
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year != standardOffset	0
org.joda.time.DateTimeUtils#long#currentTimeMillis#?#86	(cMillisProvider.getMillis())== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#867	!(year > iToYear)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != millisOfDay	0
org.joda.time.base.AbstractPeriod#int#size#?#56	(getPeriodType().size())== 0	1
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1131	iUpperYear == Integer.MAX_VALUE	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#void#setStandardOffset#?,int#985	iStandardOffset < standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#349	!(i < ruleSetCount)	0
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	iDayOfWeek == 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	isLeapYear(year)	0
org.joda.time.DateTimeUtils#PeriodType#getPeriodType#?,PeriodType#316	!(type == null)	0
org.joda.time.DateTimeUtils$SystemMillisProvider#long#getMillis#?#515	(System.currentTimeMillis())!= 0	0
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#157	isLeapYear(subtrahendYear)	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	!(isLeapYear(year))	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#873	(next)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < monthOfYear	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#209	leapYears >= year	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)>= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#59	(instant)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#void#setStandardOffset#?,int#985	iStandardOffset != standardOffset	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == monthToUse	1
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#893	iWallOffset > standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZoneBuilder#addCutover#?,int,char,int,int,int,boolean,int#252	!(iRuleSets.size() > 0)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getToYear#?#827	(iToYear)<= 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getSaveMillis#?#922	(iWallOffset - iStandardOffset)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= dayOfWeek	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#82	(iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == thisMonth	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != thisYear	0
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#505	!(mode != 'u' && mode != 'w' && mode != 's')	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > months	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#void#setStandardOffset#?,int#985	iStandardOffset <= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#371	!(tailZone == null && i == ruleSetCount - 1)	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis > next	1
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode != mode	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#91	(iChronology.getYearDifference(minuendInstant,subtrahendInstant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset == saveMillis	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year == wallOffset	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] == i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != millisOfDay	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == yearToUse	1
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))<= 0	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear == toYear	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	isLeapYear(year)	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#540	(7 + (int)((daysSince19700101 + 4) % 7))< 0	1
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#102	(val1 ^ diff) < 0 && (val1 ^ val2) < 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year > standardOffset	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis != millis	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#371	tailZone == null && i == ruleSetCount - 1	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis < ruleSetCount	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)> 0	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#217	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1043	!(rule.getSaveMillis() == 0)	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#364	tailZone != null	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1458	tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next < instant	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#82	(iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange))> 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis >= i	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == months	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1089	!(it.hasNext())	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#209	leapYears == year	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#390	!(transitions.size() == 1 && tailZone == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset != standardOffset	0
org.joda.time.DateTimeZone#DateTimeZone#getDefault#?#134	zone == null	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] > size	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis > ruleSetCount	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)>= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= thisMonth	0
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	zone instanceof CachedDateTimeZone	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getStandardOffset#?#918	(iStandardOffset)<= 0	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#257	startInstant != endInstant	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis == ruleSetCount	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis != ruleSetCount	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	!(instant >= 0)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)> 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != months	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1132	(Long.MAX_VALUE)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis <= ruleSetCount	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis <= next	0
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#419	offsetForLast > size	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#309	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year <= saveMillis	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis == saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1030	millis >= firstMillis	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == months	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear >= fromYear	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] >= i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > dayOfMonth	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != thisYear	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	!(daysToAdd != 0)	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#157	!(isLeapYear(subtrahendYear))	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next < instant	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#long#getMillis#?#906	(iMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear > toYear	1
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= dayOfWeek	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= thisMonth	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1132	(Long.MAX_VALUE)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getToYear#?#827	(iToYear)> 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#397	!(zone.isCachable())	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getSaveMillis#?#922	(iWallOffset - iStandardOffset)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#860	testInstant >= instant	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#894	iStandardOffset != standardOffset	1
org.joda.time.base.AbstractPeriod#int#size#?#56	(getPeriodType().size())<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)<= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year > saveMillis	1
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#280	(difference)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year > wallOffset	1
org.joda.time.field.ImpreciseDateTimeField#int#getDifference#?,long,long#91	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next <= instant	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis < i	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year == saveMillis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next < instant	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear < year	1
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#170	(difference)!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] <= size	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1403	!tr.isTransitionFrom(last)	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#860	testInstant > instant	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#long#getMillis#?#906	(iMillis)> 0	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] == size	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#363	!(addTransition(transitions,next))	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear >= year	0
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	info == null || info.iYear != year	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#857	testInstant < instant	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= monthToUse	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#long#getMillis#?#906	(iMillis)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	!(iDayOfMonth >= 0)	0
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)== 0	1
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#690	id == null	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)> 0	1
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)>= 0	0
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))!= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getToYear#?#827	(iToYear)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year < saveMillis	0
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#690	!(id == null)	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))< 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#891	iMillis <= millis	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear >= toYear	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year > wallOffset	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year >= saveMillis	1
org.joda.time.field.ImpreciseDateTimeField#int#getDifference#?,long,long#91	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))<= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis <= millis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next >= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < thisMonth	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)<= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == thisMonth	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear <= toYear	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#383	!(transitions.size() == 0)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#857	testInstant >= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < thisMonth	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears >= year	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))> 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))< 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis < saveMillis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)>= 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	diff >= DateTimeConstants.MILLIS_PER_DAY * 365L	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#276	!(minuendRem < subtrahendRem)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear != fromYear	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)== 0	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis <= i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != monthOfYear	0
org.joda.time.base.BasePeriod#int#getValue#?,int#329	(iValues[index])<= 0	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))>= 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#59	(instant)> 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#91	(iChronology.getYearDifference(minuendInstant,subtrahendInstant))!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis < millis	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getWallOffset#?#914	(iWallOffset)> 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#209	leapYears <= year	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > millisOfDay	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))< 0	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)== 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset >= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1464	!(tailZone.iStartRecurrence.getSaveMillis() > 0)	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1092	next <= instant	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears == year	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear >= toYear	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	iDayOfMonth >= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != months	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear != toYear	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#540	(7 + (int)((daysSince19700101 + 4) % 7))>= 0	0
org.joda.time.DateTimeUtils#long#currentTimeMillis#?#86	(cMillisProvider.getMillis())< 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1105	nextRule == null	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear < toYear	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#873	(next)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#419	offsetForLast == size	1
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#170	(difference)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > dayOfWeek	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)< 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis >= millis	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#boolean#isTransitionFrom#?,Transition#929	!(other == null)	0
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#161	!(minuendRem >= FEB_29 && isLeapYear(minuendYear))	0
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#156	!(subtrahendRem >= FEB_29)	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear > year	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#894	iStandardOffset == standardOffset	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	!(i2 < 0)	0
org.joda.time.base.BasePeriod#int#getValue#?,int#329	(iValues[index])< 0	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] != size	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset == standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#long#getMillis#?#906	(iMillis)>= 0	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#261	startInstant < endInstant	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#209	leapYears != year	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)> 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))!= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 == unitMillis	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#209	leapYears < year	1
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= months	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == monthOfYear	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1011	!(iInitialNameKey != null)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#865	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year <= saveMillis	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= dayOfMonth	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis < ruleSetCount	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year == standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#333	id == null	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#849	instant == Long.MIN_VALUE	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= monthOfYear	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)> 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#91	(iChronology.getYearDifference(minuendInstant,subtrahendInstant))<= 0	0
org.joda.time.base.BasePeriod#int#getValue#?,int#329	(iValues[index])> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#309	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))< 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)== 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)< 0	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#int#getDifference#?,long,long#190	(ImpreciseDateTimeField.this.getDifference(minuendInstant,subtrahendInstant))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getSaveMillis#?#839	(iRecurrence.getSaveMillis())> 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)== 0	1
org.joda.time.tz.DateTimeZoneBuilder#RuleSet#getLastRuleSet#?#320	iRuleSets.size() == 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > millisOfDay	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)!= 0	0
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year < standardOffset	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)> 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#91	(iChronology.getYearDifference(minuendInstant,subtrahendInstant))== 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#261	startInstant != endInstant	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))>= 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	!(isLeapYear(year))	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= monthOfYear	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)<= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))< 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))<= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis != i	0
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#161	minuendRem >= FEB_29 && isLeapYear(minuendYear)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset != standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year != saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#873	(next)!= 0	0
org.joda.time.base.AbstractPeriod#int#size#?#56	(getPeriodType().size())>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= thisYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)< 0	0
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#170	(difference)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#DSTZone#buildTailZone#?,String#1144	startRule.getToYear() == Integer.MAX_VALUE && endRule.getToYear() == Integer.MAX_VALUE	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1400	i < size	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > millisOfDay	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < dayOfWeek	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears < year	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] >= i	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear == fromYear	1
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next > instant	0
org.joda.time.field.FieldUtils#int#safeToInt#?,long#187	Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE	0
org.joda.time.Period#int#getMonths#?#713	(getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX))!= 0	0
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode < mode	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#873	(next)< 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] <= size	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis > i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= dayOfMonth	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears > year	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))> 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#390	transitions.size() == 1 && tailZone == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1419	j < zoneStrings.length	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))!= 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis > firstDayMillis	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] < i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != dayOfMonth	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#boolean#isCachable#?#1690	!(iTailZone != null)	1
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#411	!tr.isTransitionFrom(last)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getStandardOffset#?#918	(iStandardOffset)>= 0	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)> 0	1
org.joda.time.DateTimeUtils#long#currentTimeMillis#?#86	(cMillisProvider.getMillis())>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#894	iStandardOffset > standardOffset	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset < saveMillis	1
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)> 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#261	startInstant <= endInstant	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	!(dayOfYear > (31 + 28))	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != dayOfWeek	0
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next < instant	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)>= 0	0
org.joda.time.field.ImpreciseDateTimeField#int#getDifference#?,long,long#91	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))== 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis <= ruleSetCount	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#893	iWallOffset < standardOffset	1
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	!(zone instanceof CachedDateTimeZone)	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#891	iMillis == millis	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#59	(instant)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getSaveMillis#?#922	(iWallOffset - iStandardOffset)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1029	!((next=nextTransition(millis,saveMillis)) != null)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == monthOfYear	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)== 0	1
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#418	size >= 2	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getWallOffset#?#914	(iWallOffset)<= 0	1
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	!(info == null || info.iYear != year)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getSaveMillis#?#839	(iRecurrence.getSaveMillis())<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next >= instant	0
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)!= 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis != firstDayMillis	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 < unitMillis	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	!(years == 0)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year > wallOffset	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#182	!(!isLeapYear(year))	1
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#411	!(!tr.isTransitionFrom(last))	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear <= year	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#554	((DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)>= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#long#getMillis#?#906	(iMillis)<= 0	0
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year < standardOffset	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears <= year	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != dayOfWeek	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	iAdvance	1
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#405	!(size == 0)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year < wallOffset	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#276	minuendRem < subtrahendRem	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1115	!(iUpperYear < Integer.MAX_VALUE)	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#537	daysSince19700101 == instant	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year >= standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getSaveMillis#?#839	(iRecurrence.getSaveMillis())!= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)!= 0	0
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < thisYear	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#891	iMillis > millis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != monthOfYear	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next < instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#893	iWallOffset <= standardOffset	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)== 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#280	(difference)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#893	iWallOffset >= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1460	ZoneInfoCompiler.verbose()	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))!= 0	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))== 0	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#867	year > iToYear	1
org.joda.time.PeriodType#PeriodType#standard#?#103	type == null	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	!(months == 0)	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#362	!((next=rs.nextTransition(millis,saveMillis)) != null)	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis != next	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year < standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis < instant	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	isLeapYear(year)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= monthToUse	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#int#getDifference#?,long,long#190	(ImpreciseDateTimeField.this.getDifference(minuendInstant,subtrahendInstant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1403	!(!tr.isTransitionFrom(last))	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year == standardOffset	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#857	testInstant == instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#138	dayToUse > maxDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= millisOfDay	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > thisMonth	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))> 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))> 0	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year > standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1032	millis == firstMillis	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1436	curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2]) && curNameKey.equals(zoneNameData[4])	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#855	year < iFromYear	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#554	((DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY))<= 0	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getToYear#?#827	(iToYear)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= thisYear	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)>= 0	1
org.joda.time.field.FieldUtils#int#safeToInt#?,long#188	((int)value)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next >= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > yearToUse	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#258	!(i < size)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1400	!(i < size)	0
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#170	(difference)== 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] > value	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)< 0	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] >= size	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < millisOfDay	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#894	iStandardOffset < standardOffset	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.base.BasePeriod#int#getValue#?,int#329	(iValues[index])>= 0	0
org.joda.time.field.FieldUtils#int#safeToInt#?,long#188	((int)value)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getWallOffset#?#914	(iWallOffset)== 0	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] == size	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))!= 0	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))> 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] <= i	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))!= 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)!= 0	0
org.joda.time.field.ImpreciseDateTimeField#int#getDifference#?,long,long#91	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#59	(instant)<= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)< 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#138	!(dayToUse > maxDay)	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#383	transitions.size() == 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year != standardOffset	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#82	(iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == dayOfWeek	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] == value	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= dayOfMonth	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	iMode == 'w'	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#DSTZone#buildTailZone#?,String#1144	!(startRule.getToYear() == Integer.MAX_VALUE && endRule.getToYear() == Integer.MAX_VALUE)	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear != toYear	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] != value	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1037	millis > firstMillis	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] == i	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#554	((DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY))> 0	0
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset > standardOffset	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis >= firstDayMillis	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1030	millis == firstMillis	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#554	((DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1132	(Long.MAX_VALUE)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#891	iMillis != millis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#419	offsetForLast < size	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1428	!(i < nameKeys.length - 1)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year < wallOffset	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	isLeapYear(year)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode > mode	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year <= saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#333	!(id == null)	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1038	first == null	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#int#getDifference#?,long,long#190	(ImpreciseDateTimeField.this.getDifference(minuendInstant,subtrahendInstant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year <= wallOffset	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#849	!(instant == Long.MIN_VALUE)	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] <= i	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year < saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == dayOfWeek	0
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] < i	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear <= toYear	0
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#426	newLocal != lastLocal	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1132	(Long.MAX_VALUE)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > dayOfWeek	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))!= 0	0
org.joda.time.base.AbstractPeriod#int#size#?#56	(getPeriodType().size())> 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))> 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#280	(difference)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1030	millis > firstMillis	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next == instant	1
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	!(chrono != null && chrono.getZone() == zone)	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)>= 0	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis != saveMillis	1
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#419	offsetForLast >= size	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] <= i	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 <= unitMillis	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < months	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset >= saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset <= standardOffset	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	instant >= 0	1
org.joda.time.field.FieldUtils#int#safeToInt#?,long#188	((int)value)== 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year == standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1132	(Long.MAX_VALUE)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year == saveMillis	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > months	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis > saveMillis	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis == ruleSetCount	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1032	!(millis == firstMillis)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] != i	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)> 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < monthOfYear	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#280	(difference)< 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#309	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= dayOfWeek	1
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1030	millis != firstMillis	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#540	(7 + (int)((daysSince19700101 + 4) % 7))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1038	!(first == null)	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))>= 0	1
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))> 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#182	!isLeapYear(year)	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getWallOffset#?#914	(iWallOffset)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#void#addRule#?,Rule#994	!(!iRules.contains(rule))	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#857	testInstant > instant	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#855	!(year < iFromYear)	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next == instant	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 >= unitMillis	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#309	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis >= ruleSetCount	1
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)<= 0	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] <= value	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < yearToUse	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > dayOfMonth	1
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	((realIndex == -1 ? 0 : period.getValue(realIndex)))>= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#82	(iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange))<= 0	1
org.joda.time.DateTimeUtils#long#currentTimeMillis#?#86	(cMillisProvider.getMillis())<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode <= mode	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#866	year != wallOffset	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))< 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year != wallOffset	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear >= fromYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > monthOfYear	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] >= value	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next >= instant	0
org.joda.time.PeriodType#int#size#?#617	(iTypes.length)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis < i	1
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getSaveMillis#?#922	(iWallOffset - iStandardOffset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis <= i	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#243	minuendInstant < subtrahendInstant	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	!(isLeapYear(thisYear))	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#860	testInstant == instant	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#278	duration != 0	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear != year	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != thisMonth	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)!= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getWallOffset#?#914	(iWallOffset)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next <= instant	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	years == 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next < instant	0
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	(diff)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] != size	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next > instant	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] >= i	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year > saveMillis	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear < toYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis != instant	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)>= 0	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#182	(ImpreciseDateTimeField.this.add(instant,value))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= millisOfDay	0
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#156	subtrahendRem >= FEB_29	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#537	daysSince19700101 >= instant	0
org.joda.time.base.AbstractPeriod#int#size#?#56	(getPeriodType().size())< 0	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#352	next == null	1
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear > fromYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= dayOfMonth	0
org.joda.time.base.AbstractPeriod#int#size#?#56	(getPeriodType().size())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1409	standardOffsets[i] != size	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#873	(next)<= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#243	!(minuendInstant < subtrahendInstant)	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1037	!(millis > firstMillis)	1
org.joda.time.field.FieldUtils#int#safeToInt#?,long#188	((int)value)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getSaveMillis#?#839	(iRecurrence.getSaveMillis())== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == monthOfYear	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	!(instant >= 0)	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year > standardOffset	1
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	(difference / iUnitMillis)>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#int#getDifference#?,long,long#190	(ImpreciseDateTimeField.this.getDifference(minuendInstant,subtrahendInstant))> 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#113	monthToUse >= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getStandardOffset#?#918	(iStandardOffset)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != dayOfMonth	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	!(isLeapYear(year))	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1421	!(set != null && set.length == 5 && id.equals(set[0]))	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear < fromYear	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#551	instant >= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#539	!(daysSince19700101 < -3)	1
org.joda.time.field.ImpreciseDateTimeField#int#getDifference#?,long,long#91	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis > instant	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#262	values[i] < size	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1011	iInitialNameKey != null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#550	offset > saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZoneBuilder#addRecurringSavings#?,String,int,int,int,char,int,int,int,boolean,int#309	!(fromYear <= toYear)	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1101	nextMillis == instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1419	!(j < zoneStrings.length)	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)< 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis <= firstDayMillis	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] > i	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#309	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))> 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == thisYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)> 0	1
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#261	startInstant == endInstant	0
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	(millis)!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != yearToUse	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis < firstDayMillis	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear == fromYear	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))< 0	0
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1043	rule.getSaveMillis() == 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == dayOfMonth	0
org.joda.time.Period#int#getYears#?#704	(getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX))> 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#349	i < ruleSetCount	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)== 0	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#82	(iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1428	i < nameKeys.length - 1	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#894	iStandardOffset <= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))<= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#59	(instant)!= 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year < saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#819	iToYear > fromYear	0
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#258	i < size	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#397	zone.isCachable()	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#?#Transition#?,long,Rule,int#893	iWallOffset != standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis != i	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#82	(iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#357	saveMillis >= i	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#873	(next)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#?#Rule#?,Recurrence,int,int#818	iFromYear > toYear	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)== 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))!= 0	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next < instant	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < monthToUse	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] < size	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.field.FieldUtils#int#safeToInt#?,long#188	((int)value)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis <= saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getStandardOffset#?#918	(iStandardOffset)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1458	!(tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey()))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1408	wallOffsets[i] != i	0
org.joda.time.PeriodType#PeriodType#standard#?#103	!(type == null)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= dayOfWeek	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#554	((DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1089	it.hasNext()	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#850	year >= standardOffset	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)<= 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#402	i2 <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == millisOfDay	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))> 0	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#370	saveMillis >= ruleSetCount	0
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#282	chrono == null	0
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#91	(iChronology.getYearDifference(minuendInstant,subtrahendInstant))< 0	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#182	(ImpreciseDateTimeField.this.add(instant,value))== 0	1
org.joda.time.PeriodType#PeriodType#yearMonthDay#?#164	type == null	0
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#852	year >= standardOffset	1
org.joda.time.field.ImpreciseDateTimeField#int#getDifference#?,long,long#91	(FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant)))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)!= 0	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	chrono != null && chrono.getZone() == zone	1