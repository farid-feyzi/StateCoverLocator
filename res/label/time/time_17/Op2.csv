line	predicate	lable
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))<= 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset >= hours	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean,long#955	(instantUTC)== 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())<= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)!= 0	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean,long#954	offsetLocalFromOriginal == offsetOriginal	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())< 0	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#207	id.equals("UTC")	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)!= 0	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	zone == null	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#164	instant == null	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset != minutes	0
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#259	this == readableInstant	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	diff >= DateTimeConstants.MILLIS_PER_DAY * 365L	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)== 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2619	!(locale == null)	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)== 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis < millis	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2112	displayZone == null	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))>= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart == next	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)!= 0	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))< 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())<= 0	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#936	iChrono != null	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])< 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)<= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset < hours	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)<= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)< 0	0
org.joda.time.DateTime#DateTime#plusHours#?,int#1098	hours == 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#167	!((base=getBase()) != null)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2145	!(displayOffset == 0 && iMinFields <= 2)	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)> 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart <= next	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTime#?#953	!(dt == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2615	!(elements == null)	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#154	tz != null	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2132	displayOffset == 0 && iMinFields <= 1	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis >= millis	0
org.joda.time.DateTimeZone#long#adjustOffset#?,long,boolean#1169	instantBefore == instantAfter	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())<= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)<= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	!(i2 < 0)	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	!((instant ^ sum) < 0 && (instant ^ offset) >= 0)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2625	i < len	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#131	(base=iBase) != null && (iBaseFlags & 5) == 5	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#141	!(obj == null)	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#939	iZone != null	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))<= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)!= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#207	!(id.equals("UTC"))	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart == periodStart	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart != millis	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart < next	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)>= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))>= 0	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))<= 0	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())>= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)!= 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	!(value < 0)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])< 0	0
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	!(chrono == null)	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)!= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))> 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))< 0	0
org.joda.time.DateTimeZone#long#adjustOffset#?,long,boolean#1175	(convertLocalToUTC(local,false,earlierOrLater ? instantAfter : instantBefore))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])< 0	0
org.joda.time.DateTimeZone#int#hashCode#?#1237	(57 + getID().hashCode())== 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])!= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#131	!((base=iBase) != null && (iBaseFlags & 5) == 5)	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart >= next	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))== 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#197	!(iOffset == Integer.MIN_VALUE)	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))< 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)!= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)== 0	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])== 0	0
org.joda.time.DateTimeZone#int#hashCode#?#1237	(57 + getID().hashCode())<= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)< 0	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#232	(value < lowerBound) || (value > upperBound)	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset >= hours	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)< 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart < periodStart	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart >= millis	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))!= 0	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#930	(instantLocal)>= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart < millis	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	!(isLeapYear(year))	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1925	--minDigits >= 0	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#168	!(chrono == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2625	!(i < len)	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())== 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))< 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1530	i >= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))== 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2141	iMaxFields == 2	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2128	!(iMaxFields == 1)	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis > millis	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis > instant	0
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#262	readableInstant instanceof ReadableInstant == false	0
org.joda.time.DateTime#DateTime#plusHours#?,int#1098	!(hours == 0)	0
org.joda.time.DateTimeZone#int#hashCode#?#1237	(57 + getID().hashCode())< 0	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#930	(instantLocal)== 0	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)<= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	diff < 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())!= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)> 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#142	offset != zone.getOffset(instant)	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))== 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2619	locale == null	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean,long#954	!(offsetLocalFromOriginal == offsetOriginal)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	!(displayOffset == 0 && iZeroOffsetPrintText != null)	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	i2 < 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset == hours	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)== 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#150	!(obj instanceof SoftReference<?>)	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))== 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction != instant	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)< 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))!= 0	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))< 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#80	!(value < 1000)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction > instant	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean,long#955	(instantUTC)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset < minutes	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))== 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)< 0	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#204	id == null	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean,long#955	(instantUTC)>= 0	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)< 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))!= 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)> 0	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean,long#955	(instantUTC)< 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())> 0	0
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	!(info == null || info.iYear != year)	0
org.joda.time.DateTimeZone#long#adjustOffset#?,long,boolean#1175	(convertLocalToUTC(local,false,earlierOrLater ? instantAfter : instantBefore))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset > hours	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)> 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	!(instant >= 0)	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))== 0	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)<= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1923	fraction == 0	0
org.joda.time.DateTimeZone#int#hashCode#?#1237	(57 + getID().hashCode())!= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart <= millis	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())== 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1924	buf != null	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#82	!(value < 10000)	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())> 0	0
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#657	printer == null	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	!(zone == null)	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)!= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)>= 0	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1534	!(i < transitions.length)	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)< 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#145	id.equals(obj)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset > minutes	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	!(diff >= DateTimeConstants.MILLIS_PER_DAY * 365L)	0
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	!((base=iBase) != null)	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)> 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)> 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)== 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#150	obj instanceof SoftReference<?>	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2132	!(displayOffset == 0 && iMinFields <= 1)	0
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#657	!(printer == null)	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)<= 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)>= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart >= end	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset == hours	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)!= 0	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#930	(instantLocal)< 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))!= 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis == instant	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart > end	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)>= 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))!= 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#146	!(instant == null)	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)<= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	isLeapYear(year)	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis != instant	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#936	!(iChrono != null)	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)<= 0	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#927	(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])>= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)== 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))== 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart <= end	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)== 0	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart >= periodStart	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset > hours	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))!= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))> 0	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)>= 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#80	value < 1000	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis <= instant	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	!(size > 1)	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)>= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)< 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#159	!(next == periodStart || next > end)	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)== 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction < instant	0
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	chrono == null	0
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#624	(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])== 0	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])== 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)< 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)<= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart > periodStart	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))> 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])== 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)== 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())> 0	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)> 0	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#930	(instantLocal)!= 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#136	id == null	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))!= 0	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))>= 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#167	(base=getBase()) != null	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	isLeapYear(year)	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset != hours	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)<= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#159	next == periodStart || next > end	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2141	!(iMaxFields == 2)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis == millis	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2128	iMaxFields == 1	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)>= 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis < instant	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)<= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart > millis	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#126	instant >= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset <= hours	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)> 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#900	offsetLocal >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset <= minutes	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2119	displayOffset >= 0	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))!= 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))<= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)< 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)< 0	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	!(chrono != null && chrono.getZone() == zone)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])>= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#142	!(offset != zone.getOffset(instant))	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#232	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#211	!(zone != null)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset < hours	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis > instant	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)<= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))== 0	0
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#144	!(info == null || (int)((info.iPeriodStart >> 32)) != period)	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart == millis	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)== 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart > next	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis == instant	0
org.joda.time.DateTimeZone#long#adjustOffset#?,long,boolean#1175	(convertLocalToUTC(local,false,earlierOrLater ? instantAfter : instantBefore))!= 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	!(diff < 0)	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))<= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))== 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	value < 100	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)< 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))<= 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())!= 0	0
org.joda.time.DateTimeZone#int#hashCode#?#1237	(57 + getID().hashCode())> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)!= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)<= 0	0
org.joda.time.DateTimeZone#int#hashCode#?#1237	(57 + getID().hashCode())>= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#144	info == null || (int)((info.iPeriodStart >> 32)) != period	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))<= 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))>= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))< 0	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))!= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))< 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	!(i < transitions.length)	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)< 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)<= 0	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)<= 0	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)< 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))>= 0	0
org.joda.time.DateTimeZone#long#adjustOffset#?,long,boolean#1175	(convertLocalToUTC(local,false,earlierOrLater ? instantAfter : instantBefore))>= 0	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))< 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	!(value < 10)	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)>= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#196	!(iNextInfo == null || millis < iNextInfo.iPeriodStart)	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1530	!(i >= 0)	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis != instant	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)> 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#146	instant == null	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,long,Chronology#126	iMillis >= instant	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1535	i > 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2137	!(iShowSeparators)	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)!= 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)== 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart != end	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)< 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))> 0	0
org.joda.time.DateTimeZone#long#adjustOffset#?,long,boolean#1175	(convertLocalToUTC(local,false,earlierOrLater ? instantAfter : instantBefore))<= 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)!= 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)== 0	0
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	(base=iBase) != null	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))< 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))> 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset <= hours	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)== 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2145	displayOffset == 0 && iMinFields <= 2	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))< 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart < end	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)> 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)>= 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis >= instant	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset >= minutes	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])< 0	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#930	(instantLocal)> 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#82	value < 10000	0
org.joda.time.DateTimeZone#long#adjustOffset#?,long,boolean#1169	!(instantBefore == instantAfter)	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#320	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))<= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)>= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)> 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis <= instant	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	(instant ^ sum) < 0 && (instant ^ offset) >= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis != millis	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2119	!(displayOffset >= 0)	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)> 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#900	!(offsetLocal >= 0)	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean,long#955	(instantUTC)> 0	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())!= 0	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#168	chrono == null	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1535	!(i > 0)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2112	!(displayZone == null)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction <= instant	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))<= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis < instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1923	!(fraction == 0)	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)!= 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))== 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#141	obj == null	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#939	!(iZone != null)	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)< 0	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#211	zone != null	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	!(isLeapYear(year))	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#196	iNextInfo == null || millis < iNextInfo.iPeriodStart	0
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#624	!((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])> 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())< 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)> 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#154	!(tz != null)	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1925	!(--minDigits >= 0)	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])<= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart <= periodStart	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	value < 0	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)< 0	0
org.joda.time.DateTimeZone#long#adjustOffset#?,long,boolean#1175	(convertLocalToUTC(local,false,earlierOrLater ? instantAfter : instantBefore))> 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset != hours	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))>= 0	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#927	!((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0)	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))<= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))== 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction == instant	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	value < 10	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#136	!(id == null)	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))== 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))< 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2615	elements == null	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset == minutes	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2137	iShowSeparators	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))> 0	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#164	!(instant == null)	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)!= 0	0
org.joda.time.DateTimeZone#long#convertUTCToLocal#?,long#930	(instantLocal)<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	i < transitions.length	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])>= 0	0
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#259	!(this == readableInstant)	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())== 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])!= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	instant >= 0	0
org.joda.time.DateTimeZone#long#convertLocalToUTC#?,long,boolean,long#955	(instantUTC)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])<= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))!= 0	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)== 0	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1924	!(buf != null)	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))== 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#197	iOffset == Integer.MIN_VALUE	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#145	!(id.equals(obj))	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)== 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1531	(iWallOffsets[i])!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))<= 0	0
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	info == null || info.iYear != year	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))== 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#887	offsetLocal != offsetAdjusted	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)!= 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())< 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))< 0	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTime#?#953	dt == null	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	!(value < 100)	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart == end	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#204	!(id == null)	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#126	!(instant >= 0)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset == 0 && iZeroOffsetPrintText != null	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#887	!(offsetLocal != offsetAdjusted)	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))< 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)>= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))< 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart != periodStart	0
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#262	!(readableInstant instanceof ReadableInstant == false)	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	size > 1	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis <= millis	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)< 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#350	(offset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1534	i < transitions.length	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart != next	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	chrono != null && chrono.getZone() == zone	0