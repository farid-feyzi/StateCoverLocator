line	predicate	lable
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1924	buf != null	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate == printEst	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#497	!(isSupported(f=chrono.minuteOfHour()))	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start <= instant	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#literalTElement#?#1653	lte == null	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset < minutes	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate == size	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))<= 0	1
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#49	!(cCache == null)	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1430	(iMaxParsedDigits)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1860	maxDigits > 18	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1577	(instant)<= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#524	!(isSupported(f=chrono.dayOfYear()))	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end < instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1541	(iWallOffsets[i - 1])< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2145	displayOffset == 0 && iMinFields <= 2	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#394	(millis)== 0	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)== 0	1
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#720	iZone != null	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	!(months == 0)	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)< 0	1
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1198	(1)== 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)<= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	!(diff < 0)	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#502	!(result != 0)	1
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#203	!(converted.containsKey(field))	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1541	(iWallOffsets[i - 1])!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value > limit	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)>= 0	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2141	!(iMaxFields == 2)	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#358	(computeMillis(resetFields,text))== 0	1
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	type == null	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2583	!(i < size)	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	isLeapYear(year)	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#619	prev > instant	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1430	(iMaxParsedDigits)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#618	prev > instant	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate != parseEst	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev < instant	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#538	!(minDigits < 0 || maxDigits <= 0)	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#482	iText == null	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next >= instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#548	!(isSupported(f=chrono.centuryOfEra()))	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1267	instant < 0 && end > 0	1
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))<= 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart == end	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1283	iMaxParsedDigits >= maxParsedDigits	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next <= instant	1
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#135	iDefaultYear <= defaultYear	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)>= 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#60	base == null	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())>= 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)== 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2576	printerList.size() <= 0	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst > size	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2132	!(displayOffset == 0 && iMinFields <= 1)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1923	fraction == 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear == year	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart != end	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears == year	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#454	isSupported(f=chrono.hours())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#548	isSupported(f=chrono.centuryOfEra())	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start >= instant	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	!(size > 1)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= thisMonth	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1116	!(f == null)	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)== 0	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value == limit	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value >= length	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1174	(1)<= 0	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis > firstDayMillis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev > instant	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#80	value < 1000	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value == position	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1288	(iMaxParsedDigits)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1174	(1)== 0	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)== 0	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)!= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())< 0	1
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] != length	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#2026	(iMaxDigits)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position > i	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#358	(computeMillis(resetFields,text))!= 0	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)== 0	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)== 0	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))< 0	1
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	info == null || info.iYear != year	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)< 0	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))!= 0	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)< 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#82	value < 10000	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))< 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#159	next == periodStart || next > end	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] == length	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2615	elements == null	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate <= parseEst	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value != length	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)<= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	dayOfYear > (31 + 28)	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)< 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart == next	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next == instant	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2137	!(iShowSeparators)	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#551	!(isSupported(f=chrono.era()))	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#488	!(isSupported(f=chrono.millisOfDay()))	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits == minDigits	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	!(iAdvance)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1318	!(c < '0' || c > '9')	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position < length	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start <= instant	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	!(years == 0)	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#384	!(offset != iZone.getOffset(millis))	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))> 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)> 0	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isPrinter#?,Object#1127	!(f instanceof DateTimePrinter)	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1613	(prev - 1)< 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))<= 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	!(dayOfYear > (31 + 28))	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] < length	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)> 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2128	!(iMaxFields == 1)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == months	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	daysToAdd != 0	0
org.joda.time.chrono.ISOChronology#Chronology#withZone#?,DateTimeZone#146	!(zone == getZone())	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value != i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next != instant	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2726	element instanceof Composite	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2103	iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value < limit	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] >= length	1
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#479	!(tokenLen >= 3)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#618	prev >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	iAdvance	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#fractionElement#?#1691	fse == null	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next <= instant	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#520	(-a.compareTo(b))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1279	(((start > end) ? start : end) - 1)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value < length	1
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#200	!(field == null || !field.isSupported())	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end > instant	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1353	(position)== 0	1
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] == length	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate > size	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1353	(position)<= 0	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#619	prev <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1608	(prev)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset != hours	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#406	i <= length	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value >= limit	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value >= i	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))> 0	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))== 0	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#358	(computeMillis(resetFields,text))> 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear >= year	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#618	prev != instant	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1283	iMaxParsedDigits < maxParsedDigits	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2697	(position)!= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1576	!(iTailZone == null)	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis > millis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#619	prev == instant	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1174	(1)< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#488	isSupported(f=chrono.millisOfDay())	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))> 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev >= instant	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags <= flags	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isPrinter#?,Object#1128	f instanceof Composite	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1607	prev < instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#619	prev < instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#533	isSupported(f=chrono.weekyearOfCentury())	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))> 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position <= i	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position < value	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#394	(millis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)!= 0	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#490	(millis)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#138	dayToUse > maxDay	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > thisYear	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())>= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#542	isSupported(f=chrono.yearOfEra())	0
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#723	(newPos)!= 0	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != months	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())< 0	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	zone == null	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1283	iMaxParsedDigits == maxParsedDigits	0
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis == instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])> 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value > length	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2591	parserList.size() <= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1347	!(negative)	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#168	chrono == null	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != monthToUse	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= thisMonth	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#515	!(isSupported(f=chrono.halfdayOfDay()))	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#521	!(isSupported(f=chrono.dayOfMonth()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next > instant	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst == i	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)== 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)< 0	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction == instant	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#hourMinuteSecondFraction#?#1482	!(hmsf == null)	1
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst <= i	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position != value	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next == instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1608	(prev)> 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#56	!(base == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst < size	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis >= instant	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position < limit	1
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))> 0	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1103	!(iElementPairs.size() == 2)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#617	prev != instant	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst >= i	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#900	!(offsetLocal >= 0)	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1170	iValue <= value	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1540	!(iTailZone == null)	1
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1116	f == null	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	!(value < 100)	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#902	!(prev < instantAdjusted)	1
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)!= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart <= end	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2689	elements == null	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > thisYear	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1108	!(printer == parser || parser == null)	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset >= hours	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1170	iValue >= value	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst <= i	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#203	!(year < 0)	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#551	!(instant >= 0)	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))<= 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)== 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	!(isLeapYear(year))	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#466	isSupported(f=chrono.weekyears())	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1279	(((start > end) ? start : end) - 1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)<= 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#414	isLeapYear(year)	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#150	(0)< 0	1
org.joda.time.format.DateTimeFormatter#DateTimeParser#requireParser#?#925	!(parser == null)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value >= length	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1221	(position + 1)<= 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1250	start <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1288	(iMaxParsedDigits)== 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.format.DateTimeFormatter#DateTimeFormatter#withLocale#?,Locale#188	locale == getLocale() || (locale != null && locale.equals(getLocale()))	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1925	--minDigits >= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd == dayOfWeek	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst < i	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start < instant	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= months	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#tTime#?#916	tt == null	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))> 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())> 0	0
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#275	iSavedFieldsCount == savedFieldsCount	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= yearToUse	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags < flags	1
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#490	(millis)!= 0	0
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#264	!(savedFieldsCount == savedFields.length || iSavedFieldsShared)	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#351	count > 0	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	!(iMode == 'w')	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1540	iTailZone == null	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] != i	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#396	!(fieldType == null)	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	years == 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1170	iValue > value	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2697	(position)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > yearToUse	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))!= 0	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#121	iMillis >= instantLocal	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value > position	0
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	(base=iBase) != null	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#121	iMillis > instantLocal	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#234	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#539	!(isSupported(f=chrono.year()))	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#2026	(iMaxDigits)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2619	!(locale == null)	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#146	!(instant == null)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)== 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#80	!(value < 1000)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next < instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next > instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#518	!(isSupported(f=chrono.dayOfWeek()))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	i < transitions.length	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#593	iMode == 's'	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1279	(((start > end) ? start : end) - 1)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position <= limit	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start == instant	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2689	!(elements == null)	0
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1535	i > 0	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#487	reset	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#358	(computeMillis(resetFields,text))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next == instant	0
org.joda.time.format.DateTimeParserBucket#void#sort#?,SavedField[],int#420	j > 0 && (array[j - 1]).compareTo(array[j]) > 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2145	!(displayOffset == 0 && iMinFields <= 2)	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#hourMinuteSecondFraction#?#1482	hmsf == null	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value == length	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end <= start	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isParser#?,Object#1137	!(f instanceof DateTimeParser)	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))< 0	1
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#275	iSavedFieldsCount < savedFieldsCount	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next <= instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)< 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)< 0	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#351	!(count > 0)	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1298	!(length == 0 && (c == '-' || c == '+') && iSigned)	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.DateTimeZone#int#hashCode#?#1250	(57 + getID().hashCode())< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev < instant	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)< 0	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#618	prev <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1198	(1)>= 0	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)== 0	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < thisYear	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))>= 0	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)== 0	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags != flags	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart <= millis	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position != i	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart < millis	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#520	(-a.compareTo(b))!= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value <= limit	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev < instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1576	iTailZone == null	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart > end	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1868	(iMaxDigits)== 0	1
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits >= minDigits	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)!= 0	0
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#469	iValue <= value	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits <= minDigits	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#secondElement#?#1681	!(sme == null)	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#532	!(fieldType == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#2026	(iMaxDigits)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst != i	0
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd != dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1577	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev >= instant	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)!= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value > i	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#520	(-a.compareTo(b))== 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)>= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart >= periodStart	0
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#135	iDefaultYear > defaultYear	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#457	!(isSupported(f=chrono.halfdays()))	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value == i	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)>= 0	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#356	!(compareReverse(first,months) >= 0 && compareReverse(first,days) <= 0)	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)>= 0	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#149	thisMillis == otherMillis	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)< 0	1
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))>= 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	!(value < 0)	0
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))>= 0	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev <= instant	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position <= value	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst <= size	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position != len	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1580	!(instant < end)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	daysToAdd > 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#905	!(instantAdjusted - prev <= diff)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end <= start	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction >= instant	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#448	!(isSupported(f=chrono.seconds()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#620	prev == instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits > minDigits	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2725	!(element instanceof DateTimeParser)	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#520	(-a.compareTo(b))> 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2726	!(element instanceof Composite)	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#time#?#879	t == null	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)== 0	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start != instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 > instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	!(iDayOfWeek == 0)	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#403	i < length	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value > position	0
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))!= 0	0
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))>= 0	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#121	iMillis <= instantLocal	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < yearToUse	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isPrinter#?,Object#1128	!(f instanceof Composite)	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis >= firstDayMillis	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isParser#?,Object#1138	!(f instanceof Composite)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2112	displayZone == null	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#506	isSupported(f=chrono.clockhourOfDay())	0
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] <= length	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end <= instant	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart < end	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2236	(estimatePrintedLength())== 0	1
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	!(getBase().getZone() == DateTimeZone.UTC)	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1221	(position + 1)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#138	!(dayToUse > maxDay)	0
org.joda.time.chrono.ISOChronology#Chronology#withZone#?,DateTimeZone#146	zone == getZone()	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position == len	1
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#716	!(bucket.getZone() != null)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position > value	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)<= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#196	iNextInfo == null || millis < iNextInfo.iPeriodStart	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst < i	0
org.joda.time.chrono.ISOChronology#Chronology#withZone#?,DateTimeZone#143	!(zone == null)	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))>= 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)< 0	1
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#275	iSavedFieldsCount > savedFieldsCount	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value <= length	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2106	(est)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1605	iTailZone != null	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst > i	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis < millis	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1613	(prev - 1)>= 0	1
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1329	!(length >= 9)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	!(i < transitions.length)	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis != instant	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2576	!(printerList.size() <= 0)	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits <= maxDigits	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#506	!(isSupported(f=chrono.clockhourOfDay()))	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] <= i	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end < instant	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2725	element instanceof DateTimeParser	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#offsetElement#?#1703	!(ze == null)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#515	isSupported(f=chrono.halfdayOfDay())	0
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#723	(newPos)<= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#346	iSavedFieldsShared	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#384	offset != iZone.getOffset(millis)	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value != length	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#2026	(iMaxDigits)> 0	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isParser#?,Object#1138	f instanceof Composite	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])< 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1198	(1)!= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#533	!(isSupported(f=chrono.weekyearOfCentury()))	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2100	iShowSeparators	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis > instant	1
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	!(instant >= 0)	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#405	minDigits <= 1	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset >= minutes	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= thisMonth	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset == hours	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)== 0	1
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#275	iSavedFieldsCount <= savedFieldsCount	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	iMode == 'w'	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits >= maxDigits	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1530	!(i >= 0)	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis <= firstDayMillis	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1283	iMaxParsedDigits <= maxParsedDigits	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	!(diff >= DateTimeConstants.MILLIS_PER_DAY * 365L)	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#197	iOffset == Integer.MIN_VALUE	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset == hours	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position != i	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTime#?#953	dt == null	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position > limit	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))>= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart > next	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#551	iMode == 's'	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value < i	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1541	(iWallOffsets[i - 1])>= 0	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))<= 0	1
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)> 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset <= hours	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))<= 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)== 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#399	maxDigits < minDigits	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	isSupported(f=chrono.clockhourOfHalfday())	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)<= 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)== 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position == value	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1612	prev > Long.MIN_VALUE	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next >= instant	0
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#264	savedFieldsCount == savedFields.length || iSavedFieldsShared	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#527	!(isSupported(f=chrono.weekOfWeekyear()))	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#381	!(iZone != null)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == thisMonth	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#900	offsetLocal >= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next < instant	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears > year	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#472	isSupported(f=chrono.years())	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position < i	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#113	monthToUse >= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position < len	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value < position	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2717	!(element instanceof Composite)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#617	prev < instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#addArrayToList#?,List<Object>,Object[]#2736	!(array != null)	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate >= printEst	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev != instant	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))!= 0	0
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#262	readableInstant instanceof ReadableInstant == false	1
org.joda.time.format.DateTimeFormatterBuilder#boolean#isPrinter#?,Object#1127	f instanceof DateTimePrinter	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())== 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())> 0	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))< 0	1
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1103	iElementPairs.size() == 2	0
org.joda.time.format.DateTimeFormatterBuilder#boolean#isParser#?,Object#1137	f instanceof DateTimeParser	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)== 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits >= minDigits	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != yearToUse	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))== 0	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#364	!(i < count)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis >= millis	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	!(iDayOfMonth >= 0)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= thisYear	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))> 0	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2132	displayOffset == 0 && iMinFields <= 1	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next > instant	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1344	!(i < position)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())< 0	1
org.joda.time.format.DateTimeFormat#DateTimeFormatter#createFormatterForPattern#?,String#674	!(pattern == null || pattern.length() == 0)	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#?#ZonedDateTimeField#?,DateTimeField,DateTimeZone,DurationField,DurationField,DurationField#390	!(!field.isSupported())	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#532	fieldType == null	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2697	(position)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)< 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart == millis	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits < maxDigits	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())== 0	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position <= len	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)!= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	i2 < 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1250	start >= instant	1
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#716	bucket.getZone() != null	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags >= flags	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1202	!(position >= text.length())	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	!(displayOffset == 0 && iZeroOffsetPrintText != null)	1
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#699	instant == null	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart < periodStart	1
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)<= 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))<= 0	1
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#275	iSavedFieldsCount != savedFieldsCount	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#offsetElement#?#1703	ze == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev < instant	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))== 0	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear < year	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#619	prev >= instant	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#494	!(isSupported(f=chrono.secondOfDay()))	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#511	!(a == null || !a.isSupported())	0
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next != instant	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#197	!(iOffset == Integer.MIN_VALUE)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])== 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value > limit	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next < instant	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2694	!(i < len && position >= 0)	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#367	resetFields	1
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end == start	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next <= instant	0
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#469	iValue >= value	0
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1608	(prev)!= 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags > flags	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#minuteElement#?#1671	!(mhe == null)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != thisMonth	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1868	(iMaxDigits)<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 == instant	1
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#723	(newPos)< 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2100	!(iShowSeparators)	1
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1430	(iMaxParsedDigits)> 0	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] == i	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst != size	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	months == 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1279	(((start > end) ? start : end) - 1)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset < hours	1
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#699	!(instant == null)	1
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#469	iValue != value	1
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	chrono != null && chrono.getZone() == zone	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)<= 0	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))<= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#545	!(isSupported(f=chrono.yearOfCentury()))	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next != instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#475	!(isSupported(f=chrono.centuries()))	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#527	isSupported(f=chrono.weekOfWeekyear())	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2106	(est)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1589	!(i >= 0)	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next < instant	0
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#212	!(field == null || !field.isSupported())	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1535	!(i > 0)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#609	!(iDayOfWeek == 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)< 0	1
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#168	!(chrono == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst >= size	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.format.DateTimeParserBucket#void#sort#?,SavedField[],int#419	i < high	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1353	(position)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)<= 0	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#yearMonthDay#?#1358	!(ymd == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#617	prev == instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end < start	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate != size	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1221	(position + 1)== 0	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear > year	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction != instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#542	!(isSupported(f=chrono.yearOfEra()))	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#620	prev > instant	1
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1102	!(f == null)	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis != firstDayMillis	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart == periodStart	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))>= 0	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#518	(1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1613	(prev - 1)!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#509	!(isSupported(f=chrono.hourOfHalfday()))	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)!= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev >= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < months	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next == instant	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == thisYear	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#358	(computeMillis(resetFields,text))< 0	1
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#406	i > length	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > months	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst < size	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] > length	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#539	isSupported(f=chrono.year())	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)== 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#110	isParser(f)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset != hours	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	instant >= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end > instant	0
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] >= i	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#minuteElement#?#1671	mhe == null	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)!= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)<= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	diff < 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end < start	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end >= start	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1613	(prev - 1)> 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears < year	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])> 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position != limit	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end == start	1
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	!(type == null)	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= thisYear	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)== 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart < next	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#113	printer != null || parser != null	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)!= 0	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#126	iDefaultYear > defaultYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next == instant	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears != year	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)> 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)== 0	1
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#658	printer == null	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#142	!(offset != zone.getOffset(instant))	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))<= 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#126	!(instant >= 0)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < thisMonth	1
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#490	(millis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end <= start	1
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#580	!(c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#113	!(printer != null || parser != null)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2236	(estimatePrintedLength())<= 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())< 0	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart != periodStart	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position >= i	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2119	displayOffset >= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)< 0	1
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))!= 0	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)> 0	0
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] > length	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)<= 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2625	!(i < len)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits <= minDigits	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())> 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value < position	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next == instant	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#530	!(isSupported(f=chrono.weekyear()))	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))<= 0	1
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	type == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#620	prev != instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end > start	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#203	year < 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#466	!(isSupported(f=chrono.weekyears()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	iDayOfMonth >= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position > len	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis < firstDayMillis	1
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))> 0	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2716	!(element instanceof DateTimePrinter)	1
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#126	iDefaultYear == defaultYear	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > thisMonth	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#485	!(isSupported(f=chrono.millisOfSecond()))	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1250	start < instant	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)> 0	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2697	(position)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))== 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#490	(millis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start > instant	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value == i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next != instant	0
org.joda.time.chrono.ISOChronology#Chronology#withZone#?,DateTimeZone#143	zone == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	next <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset != minutes	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#394	(millis)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < thisMonth	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end > start	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#358	(computeMillis(resetFields,text))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2236	(estimatePrintedLength())< 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))<= 0	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#520	(-a.compareTo(b))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits < maxDigits	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)< 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimeFormatter#209	formatter == null	1
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] > i	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value <= position	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#secondElement#?#1681	sme == null	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears >= year	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate != printEst	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)!= 0	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#379	!(iOffset != null)	0
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	getBase().getZone() == DateTimeZone.UTC	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits != maxDigits	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end >= start	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#457	isSupported(f=chrono.halfdays())	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)!= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#?#ZonedDateTimeField#?,DateTimeField,DateTimeZone,DurationField,DurationField,DurationField#390	!field.isSupported()	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next < instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1577	(instant)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= months	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd > dayOfWeek	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#121	iMillis != instantLocal	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#617	prev <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value >= position	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#406	i < length	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value != position	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1923	!(fraction == 0)	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1250	start == instant	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1347	negative	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#520	(-a.compareTo(b))< 0	0
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis > instant	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1329	length >= 9	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#addArrayToList#?,List<Object>,Object[]#2737	!(i < array.length)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next >= instant	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#367	!(resetFields)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))>= 0	0
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#203	converted.containsKey(field)	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#164	instant == null	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2236	(estimatePrintedLength())!= 0	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#502	result != 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1174	(1)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate <= size	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next != instant	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#487	!(reset)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#536	!(isSupported(f=chrono.monthOfYear()))	1
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] >= length	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1335	negative	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)< 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart <= next	0
org.joda.time.format.DateTimeParserBucket#void#sort#?,SavedField[],int#420	!(j > 0 && (array[j - 1]).compareTo(array[j]) > 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#591	iMode == 'w'	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)== 0	1
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < thisYear	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])<= 0	0
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	!(chrono == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2714	i < size	0
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset > minutes	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#460	!(isSupported(f=chrono.days()))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1534	i < transitions.length	1
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#135	iDefaultYear != defaultYear	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value != limit	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value <= length	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits > maxDigits	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#113	!(monthToUse >= 0)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1608	(prev)< 0	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)> 0	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#150	(0)<= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)> 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#902	prev < instantAdjusted	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#609	iDayOfWeek == 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#494	isSupported(f=chrono.secondOfDay())	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))== 0	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= monthToUse	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start == instant	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#545	isSupported(f=chrono.yearOfCentury())	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits > minDigits	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1208	instant > 0 && start < 0	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)== 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.format.DateTimeParserBucket#void#sort#?,SavedField[],int#416	!(high > 10)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#469	isSupported(f=chrono.months())	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#503	(result)< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#530	isSupported(f=chrono.weekyear())	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis == millis	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))== 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2694	i < len && position >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst > size	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#164	!(instant == null)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= thisYear	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits == maxDigits	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#149	!(thisMillis == otherMillis)	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis == instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next <= instant	1
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#121	iMillis == instantLocal	0
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())> 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))< 0	1
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis <= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= thisMonth	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))>= 0	0
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis != instant	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)> 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	!(isSupported(f=chrono.clockhourOfHalfday()))	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#addArrayToList#?,List<Object>,Object[]#2737	i < array.length	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#619	prev != instant	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#503	(result)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits == minDigits	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#106	isPrinter(f)	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#142	offset != zone.getOffset(instant)	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())<= 0	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#356	compareReverse(first,months) >= 0 && compareReverse(first,days) <= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2625	i < len	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#454	!(isSupported(f=chrono.hours()))	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction < instant	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#2026	(iMaxDigits)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#620	prev <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst > i	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end == instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end == instant	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2717	element instanceof Composite	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate > parseEst	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset >= hours	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	size > 1	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)<= 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#63	!(zone == null)	0
org.joda.time.chrono.BasicChronology#int#getDaysInMonthMax#?,long#577	(getDaysInYearMonth(thisYear,thisMonth))< 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())<= 0	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)> 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))> 0	0
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] <= i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#620	prev < instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate >= size	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1221	(position + 1)< 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1577	(instant)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate < size	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))!= 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis == firstDayMillis	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)!= 0	0
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	!(type == null)	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	!(zone == null)	0
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#144	!(info == null || (int)((info.iPeriodStart >> 32)) != period)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#618	prev < instant	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2106	(est)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2106	(est)!= 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))<= 0	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)> 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#298	!(thisDom > maxDom)	0
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())== 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value >= i	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#298	thisDom > maxDom	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1344	i < position	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	!(instant >= 0)	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2591	!(parserList.size() <= 0)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#518	isSupported(f=chrono.dayOfWeek())	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#126	instant >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value == limit	1
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	!((base=iBase) != null)	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction > instant	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position <= length	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)!= 0	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#126	iDefaultYear < defaultYear	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)>= 0	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#121	iMillis < instantLocal	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1868	(iMaxDigits)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev != instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#497	isSupported(f=chrono.minuteOfHour())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#451	!(isSupported(f=chrono.minutes()))	1
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#403	!(i < length)	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#150	(0)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)< 0	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1198	(1)<= 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1596	i < transitions.length	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next == instant	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value < length	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags == flags	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev != instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])< 0	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#451	isSupported(f=chrono.minutes())	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= monthToUse	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1250	start != instant	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2598	!(i < size)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis != millis	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset <= minutes	0
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#469	iValue < value	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())> 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1279	(((start > end) ? start : end) - 1)> 0	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#490	(millis)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst == i	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate < size	1
org.joda.time.DateTimeZone#int#hashCode#?#1250	(57 + getID().hashCode())<= 0	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#517	!(b == null || !b.isSupported())	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1612	!(prev > Long.MIN_VALUE)	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2583	i < size	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1589	i >= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1608	(prev)== 0	1
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1107	!(printer != null)	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#518	(1)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= yearToUse	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#196	!(iNextInfo == null || millis < iNextInfo.iPeriodStart)	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart > millis	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != thisMonth	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart >= end	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))> 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#56	base == null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())== 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))< 0	1
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))!= 0	0
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#720	!(iZone != null)	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1288	(iMaxParsedDigits)>= 0	0
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#712	iOffsetParsed && bucket.getOffsetInteger() != null	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#940	!(iChrono != null)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end < instant	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate <= printEst	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimateParsedLength#?#2026	(iMaxDigits)<= 0	1
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#406	i == length	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position == i	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1577	(instant)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value != i	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2615	!(elements == null)	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))== 0	1
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#126	iDefaultYear >= defaultYear	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])<= 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart != millis	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	isLeapYear(thisYear)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	!(daysToAdd != 0)	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)>= 0	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#234	(value < lowerBound) || (value > upperBound)	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)> 0	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	!(info == null || info.iYear != year)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))== 0	1
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#144	info == null || (int)((info.iPeriodStart >> 32)) != period	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#472	!(isSupported(f=chrono.years()))	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#399	!(maxDigits < minDigits)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end == start	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1223	instant > 0 && end < 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate > printEst	1
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#503	(result)<= 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))< 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1170	iValue < value	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	value < 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#182	!(!isLeapYear(year))	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#fractionElement#?#1691	!(fse == null)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1541	(iWallOffsets[i - 1])<= 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)!= 0	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#381	iZone != null	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#167	!((base=getBase()) != null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2103	!(iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est)	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	!(value < 10)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1541	(iWallOffsets[i - 1])== 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	isLeapYear(year)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)>= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)< 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#append#?,DateTimeFormatter#209	!(formatter == null)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1868	(iMaxDigits)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	!(next <= instant)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2598	i < size	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)< 0	1
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#152	thisMillis < otherMillis	1
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#212	field == null || !field.isSupported()	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#445	!(isSupported(f=chrono.millis()))	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1107	printer != null	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits == maxDigits	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	displayOffset == 0 && iZeroOffsetPrintText != null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end > instant	0
org.joda.time.format.DateTimeFormat#DateTimeFormatter#createFormatterForPattern#?,String#674	pattern == null || pattern.length() == 0	1
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#addArrayToList#?,List<Object>,Object[]#2736	array != null	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)== 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1283	iMaxParsedDigits != maxParsedDigits	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)== 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#478	!(isSupported(f=chrono.eras()))	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits > maxDigits	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1202	position >= text.length()	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	value < 100	0
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	chrono == null	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#394	(millis)>= 0	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)>= 0	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#511	a == null || !a.isSupported()	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate == size	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1605	!(iTailZone != null)	0
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#723	(newPos)>= 0	1
org.joda.time.DateTimeZone#int#hashCode#?#1250	(57 + getID().hashCode())> 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#491	!(isSupported(f=chrono.secondOfMinute()))	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#320	!(iBase != null)	1
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))> 0	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)<= 0	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#406	i >= length	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)< 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > months	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#409	!(tokenLen == 0)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1318	c < '0' || c > '9'	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#216	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1252	!(instant < 0 && start > 0)	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#150	(0)!= 0	1
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] >= i	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2697	(position)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)!= 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset > hours	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#491	isSupported(f=chrono.secondOfMinute())	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != thisYear	1
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)!= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end == instant	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())> 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)<= 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)< 0	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)>= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#500	!(isSupported(f=chrono.minuteOfDay()))	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#422	yearStart <= instant	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1868	(iMaxDigits)>= 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	!(iBase == null)	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#150	(0)== 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1324	length == 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value < i	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#422	!(yearStart <= instant)	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#405	!(minDigits <= 1)	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#110	!(isParser(f))	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end > start	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)>= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	!(isLeapYear(year))	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1208	!(instant > 0 && start < 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next >= instant	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == thisYear	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#463	isSupported(f=chrono.weeks())	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2119	!(displayOffset >= 0)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next >= instant	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)<= 0	1
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#200	field == null || !field.isSupported()	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	(transitions[i])>= 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#469	iValue > value	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > thisMonth	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate != size	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > monthToUse	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1102	f == null	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))== 0	1
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#135	iDefaultYear >= defaultYear	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1534	!(i < transitions.length)	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#hourElement#?#1662	!(hde == null)	0
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#503	(result)> 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear != year	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1353	(position)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst == size	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1198	(1)> 0	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#tTime#?#916	!(tt == null)	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#yearMonthDay#?#1358	ymd == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#551	!(iMode == 's')	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2236	(estimatePrintedLength())>= 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())< 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#538	minDigits < 0 || maxDigits <= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev > instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd >= dayOfWeek	0
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#658	!(printer == null)	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 != instant	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1298	length == 0 && (c == '-' || c == '+') && iSigned	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position == i	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1296	length < limit	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev == instant	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate >= parseEst	0
org.joda.time.DateTimeZone#int#hashCode#?#1250	(57 + getID().hashCode())== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1608	(prev)>= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart >= millis	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#406	i != length	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))!= 0	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#152	!(thisMillis < otherMillis)	0
org.joda.time.DateTimeZone#int#hashCode#?#1250	(57 + getID().hashCode())>= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))> 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)<= 0	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)!= 0	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#150	(0)>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 <= instant	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#146	instant == null	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#445	isSupported(f=chrono.millis())	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	(instant % iUnitMillis)!= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1925	!(--minDigits >= 0)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate >= size	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position >= len	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2714	!(i < size)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position == limit	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis <= millis	0
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	!(field == null)	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#479	tokenLen >= 3	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#469	!(isSupported(f=chrono.months()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#524	isSupported(f=chrono.dayOfYear())	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value <= limit	1
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)< 0	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#518	(1)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate <= size	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1860	!(maxDigits > 18)	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev == instant	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#518	(1)!= 0	0
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#262	!(readableInstant instanceof ReadableInstant == false)	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1913	fraction <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next != instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#463	!(isSupported(f=chrono.weeks()))	1
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	!(chrono != null && chrono.getZone() == zone)	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next == instant	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	!(isLeapYear(year))	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart != next	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < monthToUse	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 < instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd < dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)>= 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#905	instantAdjusted - prev <= diff	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)> 0	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#551	instant >= 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))== 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)== 0	1
org.joda.time.DateTimeZone#int#hashCode#?#1250	(57 + getID().hashCode())!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1170	iValue != value	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2106	(est)<= 0	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#394	(millis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value < limit	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position != length	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	diff >= DateTimeConstants.MILLIS_PER_DAY * 365L	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#940	iChrono != null	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2619	locale == null	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#618	prev == instant	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	value < 10	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value != position	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#decompose#?,List<Object>,List<Object>,List<Object>#2716	element instanceof DateTimePrinter	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1541	(iWallOffsets[i - 1])> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))!= 0	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1577	(instant)>= 0	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)!= 0	0
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1430	(iMaxParsedDigits)< 0	1
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#time#?#879	!(t == null)	1
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#135	iDefaultYear == defaultYear	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	isLeapYear(year)	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#943	!(iZone != null)	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#147	(instant)<= 0	1
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2695	position <= i	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits >= maxDigits	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next != instant	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset <= hours	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	!(isLeapYear(thisYear))	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)>= 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	isLeapYear(year)	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == monthToUse	1
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	field == null	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != thisYear	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])>= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))>= 0	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)<= 0	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))< 0	1
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] > i	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != months	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#131	!((base=iBase) != null && (iBaseFlags & 5) == 5)	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)>= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))< 0	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis < instant	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1296	!(length < limit)	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)> 0	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#943	iZone != null	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1324	!(length == 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next < instant	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#82	!(value < 10000)	1
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#723	(newPos)> 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#535	maxDigits < minDigits	1
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#723	(newPos)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end != start	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#hourElement#?#1662	hde == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next > instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < months	1
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#518	(1)== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2600	parseEst >= size	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end >= instant	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimateParsedLength#?#1198	(1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#617	prev > instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))<= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimatePrintedLength#?#2106	(est)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits != minDigits	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))<= 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#?#ZonedDurationField#?,DurationField,DateTimeZone#285	!field.isSupported()	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1279	(((start > end) ? start : end) - 1)!= 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#63	zone == null	1
org.joda.time.format.DateTimeParserBucket#void#sort#?,SavedField[],int#416	high > 10	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value != limit	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	(getMonthOfYear(millis,getYear(millis)))< 0	1
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2131	displayOffset > hours	0
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] != length	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev > instant	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#402	!(minDigits < 0 || maxDigits <= 0)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst == size	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())>= 0	0
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))<= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= months	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst >= i	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end <= instant	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendFraction#?,DateTimeFieldType,int,int#535	!(maxDigits < minDigits)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value == position	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)!= 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#320	iBase != null	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value <= i	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1209	!(a != b)	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatter#toFormatter#?#106	!(isPrinter(f))	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= thisYear	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart <= periodStart	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position >= i	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#literalTElement#?#1653	!(lte == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#620	prev >= instant	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position == length	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1174	(1)>= 0	0
org.joda.time.format.DateTimeParserBucket#void#sort#?,SavedField[],int#419	!(i < high)	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#475	isSupported(f=chrono.centuries())	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#int#estimateParsedLength#?#2236	(estimatePrintedLength())> 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= months	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))< 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#503	(result)!= 0	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)!= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1353	(position)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1924	!(buf != null)	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits < minDigits	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1209	a != b	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1288	(iMaxParsedDigits)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#?#CharacterLiteral#?,char#1170	iValue == value	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits != maxDigits	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart > periodStart	1
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#215	!(converted.containsKey(field))	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#485	isSupported(f=chrono.millisOfSecond())	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2112	!(displayZone == null)	0
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis < instant	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1353	(position)> 0	0
org.joda.time.field.BaseDurationField#int#compareTo#?,DurationField#155	(1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1267	!(instant < 0 && end > 0)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end < start	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1607	!(prev < instant)	1
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1430	(iMaxParsedDigits)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end != start	0
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#126	iDefaultYear <= defaultYear	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits != minDigits	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	instant >= 0	0
org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber#int#estimatePrintedLength#?#1430	(iMaxParsedDigits)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd <= dayOfWeek	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2128	iMaxFields == 1	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next < instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1252	instant < 0 && start > 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#402	minDigits < 0 || maxDigits <= 0	1
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#625	(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#616	prev >= instant	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	(getMaxMonth())<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end != instant	0
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] < i	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == months	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next != instant	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)<= 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate < printEst	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1613	(prev - 1)== 0	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#167	(base=getBase()) != null	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)>= 0	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)>= 0	0
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] != i	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == yearToUse	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#500	isSupported(f=chrono.minuteOfDay())	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)>= 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear <= year	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start > instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))< 0	1
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#580	c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z'	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	iDayOfWeek == 0	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)> 0	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)> 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst <= size	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#617	prev >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position >= length	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#379	iOffset != null	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1221	(position + 1)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1288	(iMaxParsedDigits)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1863	iMinDigits < minDigits	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev > instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1580	instant < end	1
org.joda.time.format.DateTimeParserBucket#void#saveField#?,SavedField#275	iSavedFieldsCount >= savedFieldsCount	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis <= instant	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] < length	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start < instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end >= instant	1
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#215	converted.containsKey(field)	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#503	!(isSupported(f=chrono.hourOfDay()))	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#159	!(next == periodStart || next > end)	0
org.joda.time.format.DateTimeFormatter#int#parseInto#?,ReadWritableInstant,String,int#712	!(iOffsetParsed && bucket.getOffsetInteger() != null)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value >= position	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#478	isSupported(f=chrono.eras())	1
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#259	this == readableInstant	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst != size	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#503	isSupported(f=chrono.hourOfDay())	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#518	(1)< 0	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#149	(instant.getMillis())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#593	!(iMode == 's')	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#estimatePrintedLength#?#1174	(1)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value <= i	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)<= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#521	isSupported(f=chrono.dayOfMonth())	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position < i	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#414	!(isLeapYear(year))	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)>= 0	0
org.joda.time.format.DateTimeFormatter#?#DateTimeFormatter#?,DateTimePrinter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int#135	iDefaultYear < defaultYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev == instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1536	(iWallOffsets[i - 1])== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1265	end >= start	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#int#estimatePrintedLength#?#1868	(iMaxDigits)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next <= instant	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))== 0	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	(iPrintedLengthEstimate)< 0	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position > i	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))> 0	0
org.joda.time.format.DateTimeFormatterBuilder#Object#getFormatter#?#1108	printer == parser || parser == null	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position >= limit	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#490	(millis)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2137	iShowSeparators	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == thisMonth	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#?#NumberFormatter#?,DateTimeFieldType,int,boolean#1283	iMaxParsedDigits > maxParsedDigits	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1530	i >= 0	1
org.joda.time.format.DateTimeParserBucket#?#DateTimeParserBucket#?,long,Chronology,Locale,Integer,int#126	iDefaultYear != defaultYear	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)> 0	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#616	!(prev >= instant)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1250	start > instant	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#216	(value < lowerBound) || (value > upperBound)	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	(iUnitMillis)== 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1596	!(i < transitions.length)	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)> 0	0
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#625	!((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#460	isSupported(f=chrono.days())	0
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#346	!(iSavedFieldsShared)	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev <= instant	1
org.joda.time.format.DateTimeParserBucket$SavedField#int#compareTo#?,SavedField#503	(result)== 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#887	!(offsetLocal != offsetAdjusted)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate < parseEst	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)>= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)<= 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	(offsetAdjusted)> 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.format.DateTimeParserBucket$SavedField#?#SavedField#?,DateTimeField,int#469	iValue == value	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] < i	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#364	i < count	0
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTime#?#953	!(dt == null)	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value > i	0
org.joda.time.format.DateTimeFormat#String#parseToken#?,String,int[]#621	indexRef[0] == i	0
org.joda.time.format.DateTimeFormatter#DateTimeFormatter#withLocale#?,Locale#188	!(locale == getLocale() || (locale != null && locale.equals(getLocale())))	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))== 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))< 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	!(i2 < 0)	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position >= value	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))!= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart >= next	0
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral#int#parseInto#?,DateTimeParserBucket,String,int#1221	(position + 1)!= 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#60	!(base == null)	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next < instant	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#182	!isLeapYear(year)	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1335	!(negative)	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1613	(prev - 1)<= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))> 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	iBase == null	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#509	isSupported(f=chrono.hourOfHalfday())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#551	isSupported(f=chrono.era())	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2588	iPrintedLengthEstimate > size	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset == minutes	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#591	!(iMode == 'w')	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value > length	0
org.joda.time.format.DateTimeParserBucket$SavedField#long#set#?,long,boolean#482	!(iText == null)	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2144	displayOffset < hours	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))<= 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears <= year	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2141	iMaxFields == 2	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)>= 0	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#parseInto#?,DateTimeParserBucket,String,int#2697	(position)> 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#448	isSupported(f=chrono.seconds())	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)!= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#?#ZonedDurationField#?,DurationField,DateTimeZone#285	!(!field.isSupported())	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2603	iParsedLengthEstimate == parseEst	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	(iChronology.getMonthOfYear(instant))== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#536	isSupported(f=chrono.monthOfYear())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	!(daysToAdd > 0)	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#?#Composite#?,List<Object>#2585	printEst != i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next <= instant	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#409	tokenLen == 0	1
org.joda.time.format.DateTimeParserBucket#long#computeMillis#?,boolean,String#394	(millis)> 0	0
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#49	cCache == null	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1339	value >= limit	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value == length	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))< 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	!(isLeapYear(year))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1343	position > length	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1223	!(instant > 0 && end < 0)	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next > instant	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#estimateParsedLength#?#1288	(iMaxParsedDigits)> 0	0
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))> 0	1
org.joda.time.format.DateTimeFormatterBuilder#DateTimeFormatterBuilder#appendDecimal#?,DateTimeFieldType,int,int#396	fieldType == null	1
org.joda.time.format.DateTimeFormat#void#parsePatternTo#?,DateTimeFormatterBuilder,String#404	indexRef[0] <= length	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	(iField.getUnitMillis())== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#?#Fraction#?,DateTimeFieldType,int,int#1864	iMaxDigits <= maxDigits	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)> 0	0
org.joda.time.format.DateTimeFormatter#DateTimeParser#requireParser#?#925	parser == null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end != start	0
org.joda.time.format.DateTimeParserBucket#int#compareReverse#?,DurationField,DurationField#517	b == null || !b.isSupported()	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter#int#parseInto#?,DateTimeParserBucket,String,int#1345	value <= position	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))>= 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#887	offsetLocal != offsetAdjusted	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#131	(base=iBase) != null && (iBaseFlags & 5) == 5	0
org.joda.time.base.AbstractInstant#boolean#equals#?,Object#259	!(this == readableInstant)	0