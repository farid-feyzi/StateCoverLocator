line	predicate	lable
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse > thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end != start	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end < instant	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#181	(instant.getMillis())>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > dayOfWeek	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#196	!(instant == null)	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#542	!(isSupported(f=chrono.yearOfEra()))	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)< 0	1
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	chrono != null && chrono.getZone() == zone	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	!(size > 1)	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#57	(iChronology.getDayOfWeek(instant))<= 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1190	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > dayOfMonth	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)== 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())>= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart == periodStart	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev != instant	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#85	(iChronology.setYear(instant,year))== 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#931	(offsetPrev)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#305	!(thisDom > maxDom)	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#357	(offset)> 0	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] != size	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > monthOfYear	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset != hours	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#395	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse < thisMonth	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse == months	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev == instant	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse > yearToUse	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears <= year	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#readFrom#?,InputStream,String#95	!(in instanceof DataInput)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#505	mode != 'u' && mode != 'w' && mode != 's'	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#85	(iChronology.setYear(instant,year))< 0	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#81	(instant + (value - get(instant)) * iUnitMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1180	iStandardOffset <= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next < instant	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#344	(instant ^ sum) < 0 && (instant ^ offset) >= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1592	!(i >= 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode == mode	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#357	(offset)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse != thisMonth	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#551	iMode == 's'	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#151	(0)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1209	start > instant	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#593	!(iMode == 's')	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	monthToUse >= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#548	!(isSupported(f=chrono.centuryOfEra()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1586	(iTailZone.nextTransition(instant))> 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#57	(iChronology.getDayOfWeek(instant))== 0	1
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#49	!(cCache == null)	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#494	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))> 0	0
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))> 0	0
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#747	!(info == null || info.iYear != year)	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart == next	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)<= 0	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end <= start	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev > instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next == instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == monthOfYear	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	instant >= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1576	!(i < transitions.length)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1238	((start > end) ? end : start)!= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#56	(1)>= 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#57	(iChronology.getDayOfWeek(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end != start	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#48	(iChronology.getDayOfMonth(instant))== 0	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd < dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index != size	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end <= start	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] < poolSize	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next == instant	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#56	(1)!= 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#931	(offsetPrev)!= 0	0
org.joda.time.MutableDateTime#void#add#?,DurationFieldType,int#636	type == null	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#81	((int)((instant / getUnitMillis()) % iRange))< 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#?#ZonedDurationField#?,DurationField,DateTimeZone#282	!field.isSupported()	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#181	(instant.getMillis())< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] != i	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#690	(getMaxMonth())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1374	in.readBoolean()	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#781	iFirstDayMillis >= firstDayMillis	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#690	(getMaxMonth())< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2170	displayOffset == 0 && iMinFields <= 1	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#344	!((instant ^ sum) < 0 && (instant ^ offset) >= 0)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#494	isSupported(f=chrono.secondOfDay())	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end >= start	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())> 0	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))== 0	1
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1314	start == instant	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#85	(iChronology.setYear(instant,year))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end != start	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#82	value < 10000	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#460	!(isSupported(f=chrono.days()))	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#151	(0)> 0	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#161	(iUnitMillis)> 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#699	(12)<= 0	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != monthOfYear	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] >= size	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1599	i < transitions.length	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse < thisMonth	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))< 0	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	iBase == null	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)== 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#690	(getMaxMonth())<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] <= size	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	!(iTailZone == null)	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#132	(iRange - 1)< 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#912	offsetLocal != offsetAdjusted	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#781	iFirstDayMillis != firstDayMillis	1
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#181	(instant.getMillis())!= 0	0
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#545	!(isSupported(f=chrono.yearOfCentury()))	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart == millis	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#395	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1282	(((start > end) ? start : end) - 1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1190	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())< 0	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#368	(getYearInfo(year).iFirstDayMillis)!= 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1951	fraction < instant	0
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#144	!(info == null || (int)((info.iPeriodStart >> 32)) != period)	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	iTailZone == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next <= instant	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#151	(0)!= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= dayOfMonth	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)!= 0	0
org.joda.time.field.DividedDateTimeField#DurationField#getRangeDurationField#?#128	iRangeDurationField != null	0
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#212	!(converted.containsKey(field))	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)> 0	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#454	!(isSupported(f=chrono.hours()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= millisOfDay	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#loadZoneData#?,String#235	in != null	0
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#635	!((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#690	(getMaxMonth())>= 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#781	iFirstDayMillis == firstDayMillis	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1190	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())>= 0	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#310	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2661	elements == null	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1611	(prev)!= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#212	!(zone != null)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev <= instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#128	(instant % iUnitMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1611	(prev)>= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#506	!(isSupported(f=chrono.clockhourOfDay()))	1
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#955	iZone != null	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)!= 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#614	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1180	iStandardOffset == standardOffset	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse <= thisMonth	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#524	isSupported(f=chrono.dayOfYear())	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#780	iYear <= year	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	!(i < size)	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#436	(year)<= 0	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] > poolSize	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#552	(1 + (int)((daysSince19700101 + 3) % 7))<= 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset >= minutes	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#781	iFirstDayMillis <= firstDayMillis	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#161	(iUnitMillis)>= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart < end	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#518	!(isSupported(f=chrono.dayOfWeek()))	1
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#212	zone != null	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#181	(instant.getMillis())== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#472	isSupported(f=chrono.years())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= dayOfMonth	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next >= instant	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)> 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags < flags	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1209	start <= instant	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#60	(instant)< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#467	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#48	(iChronology.getDayOfMonth(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1362	!(poolSize < 256)	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())>= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < millisOfDay	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2169	displayOffset <= hours	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end != instant	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#419	diff >= DateTimeConstants.MILLIS_PER_DAY * 365L	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev >= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#147	(datePart + timePart)< 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))<= 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#64	(set(instant,newYear))> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse >= yearToUse	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#448	!(isSupported(f=chrono.seconds()))	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next <= instant	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#467	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < dayOfMonth	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#368	(getYearInfo(year).iFirstDayMillis)== 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#616	prev >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1211	!(instant > 0 && start < 0)	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	instant >= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#48	(iChronology.getDayOfMonth(instant))!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse >= months	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#521	!(isSupported(f=chrono.dayOfMonth()))	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#466	!(isSupported(f=chrono.weekyears()))	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#494	!(isSupported(f=chrono.secondOfDay()))	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#128	(instant % iUnitMillis)<= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	(offset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end > instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#147	(datePart + timePart)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end > start	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next > instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	!(instant >= 0)	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1270	instant < 0 && end > 0	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))!= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)<= 0	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)!= 0	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#543	daysSince19700101 > instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse < thisYear	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#81	((int)((instant / getUnitMillis()) % iRange))== 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#118	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2166	iMaxFields == 1	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#478	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart >= periodStart	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#443	(getMonthOfYear(millis,getYear(millis)))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end == start	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#144	(localInstant)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#542	isSupported(f=chrono.yearOfEra())	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index >= i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < dayOfWeek	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	!(iBase == null)	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)<= 0	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#560	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))<= 0	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#781	iFirstDayMillis > firstDayMillis	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#73	(iChronology.getMonthOfYear(instant))!= 0	0
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	!((base=iBase) != null)	1
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse == thisMonth	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)<= 0	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#?#ZonedDateTimeField#?,DateTimeField,DateTimeZone,DurationField,DurationField,DurationField#405	!field.isSupported()	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse <= months	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())<= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)>= 0	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#614	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#478	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > monthOfYear	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears > year	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)!= 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#loadZoneData#?,String#235	!(in != null)	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#395	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis >= saveMillis	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#515	isSupported(f=chrono.halfdayOfDay())	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	!(instant >= 0)	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)< 0	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2654	(iPrintedLengthEstimate)> 0	0
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	field == null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1238	((start > end) ? end : start)<= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#497	isSupported(f=chrono.minuteOfHour())	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse < thisYear	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#85	(iChronology.setYear(instant,year))> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#509	!(isSupported(f=chrono.hourOfHalfday()))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index <= poolSize	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > dayOfWeek	1
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#955	!(iZone != null)	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2665	!(locale == null)	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#560	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))> 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#457	isSupported(f=chrono.halfdays())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd <= dayOfWeek	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse < months	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis < saveMillis	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart >= end	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse < months	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2169	displayOffset >= hours	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#295	(iField.getUnitMillis())<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2169	displayOffset > hours	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#539	!(isSupported(f=chrono.year()))	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart <= millis	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#478	isSupported(f=chrono.eras())	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next == instant	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2661	!(elements == null)	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)== 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	isLeapYear(year)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode > mode	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#55	(iChronology.getYear(instant))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#305	thisDom > maxDom	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#467	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1374	!(in.readBoolean())	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis == instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next < instant	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#524	!(isSupported(f=chrono.dayOfYear()))	1
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))< 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#930	!(instantAdjusted - prev <= diff)	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart > millis	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#81	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse != monthToUse	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1610	!(prev < instant)	1
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#196	instant == null	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#81	(instant + (value - get(instant)) * iUnitMillis)< 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#48	(iChronology.getDayOfMonth(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse == thisMonth	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#80	!(value < 1000)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= monthOfYear	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next == instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse <= monthToUse	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1253	start >= instant	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#183	(ImpreciseDateTimeField.this.add(instant,value))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= dayOfWeek	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags <= flags	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != dayOfWeek	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#368	(getYearInfo(year).iFirstDayMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= dayOfWeek	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#181	(instant.getMillis())<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1282	(((start > end) ? start : end) - 1)< 0	1
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1282	(((start > end) ? start : end) - 1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1253	start <= instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#533	!(isSupported(f=chrono.weekyearOfCentury()))	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#97	(iChronology.getDaysInMonthMaxForSet(instant,value))== 0	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)>= 0	0
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())== 0	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#149	!(obj instanceof SoftReference<?>)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)== 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)<= 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#317	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#543	daysSince19700101 >= instant	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#132	(iRange - 1)<= 0	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < millisOfDay	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#930	instantAdjusted - prev <= diff	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse <= yearToUse	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1611	(prev)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1211	instant > 0 && start < 0	1
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#552	(1 + (int)((daysSince19700101 + 3) % 7))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == millisOfDay	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#912	!(offsetLocal != offsetAdjusted)	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#80	value < 1000	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next >= instant	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset == minutes	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1586	(iTailZone.nextTransition(instant))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1951	fraction == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#591	!(iMode == 'w')	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags > flags	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2654	(iPrintedLengthEstimate)== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#477	dateMillis != millis	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] > size	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#357	(offset)== 0	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#118	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next >= instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#458	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	daysToAdd > 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#494	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#614	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))<= 0	1
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	!(field == null)	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#699	(12)>= 0	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))== 0	1
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#614	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#467	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2175	!(iShowSeparators)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end <= start	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode >= mode	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1961	fraction == 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#485	isSupported(f=chrono.millisOfSecond())	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#55	!(base == null)	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1611	(prev)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#536	!(isSupported(f=chrono.monthOfYear()))	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1951	fraction >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] >= i	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))!= 0	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#204	in == null	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#93	months == 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1253	start == instant	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#317	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))> 0	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)>= 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears == year	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)> 0	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#183	(ImpreciseDateTimeField.this.add(instant,value))<= 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#159	!(next == periodStart || next > end)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#543	daysSince19700101 != instant	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)>= 0	0
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis >= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#73	(iChronology.getMonthOfYear(instant))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > dayOfMonth	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#543	daysSince19700101 <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	!(daysToAdd > 0)	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))>= 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#140	obj == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= millisOfDay	0
org.joda.time.field.DividedDateTimeField#DurationField#getRangeDurationField#?#128	!(iRangeDurationField != null)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse < yearToUse	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end >= start	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#295	(iField.getUnitMillis())> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#609	!(iDayOfWeek == 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= millisOfDay	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	isLeapYear(thisYear)	1
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))<= 0	1
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#284	chrono == null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1314	start >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	instant < end	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1951	fraction != instant	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > monthOfYear	0
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#144	info == null || (int)((info.iPeriodStart >> 32)) != period	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart != periodStart	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse < monthToUse	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1586	(iTailZone.nextTransition(instant))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#94	(instant)< 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#690	(getMaxMonth())== 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1209	start == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next < instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#477	dateMillis > millis	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears < year	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1238	((start > end) ? end : start)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > dayOfWeek	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#183	(ImpreciseDateTimeField.this.add(instant,value))> 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	isLeapYear(year)	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#161	(iUnitMillis)!= 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1180	iStandardOffset > standardOffset	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse == thisYear	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#454	isSupported(f=chrono.hours())	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev < instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == millisOfDay	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart <= periodStart	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#542	!(instant >= 0)	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#357	(offset)<= 0	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#167	!((base=getBase()) != null)	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis < instant	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#readFrom#?,InputStream,String#95	in instanceof DataInput	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2654	(iPrintedLengthEstimate)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd > dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= dayOfWeek	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart > periodStart	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] == poolSize	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#448	isSupported(f=chrono.seconds())	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2671	i < len	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#204	!(in == null)	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#699	(12)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != dayOfMonth	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1951	fraction <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] > size	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#925	offsetLocal >= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	!(daysToAdd != 0)	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2665	locale == null	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end == instant	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#56	(1)== 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart > next	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	!(isLeapYear(year))	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#64	(set(instant,newYear))== 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode != mode	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#477	dateMillis < millis	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)>= 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	value < 100	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#113	(instant + (value - get(instant)) * iUnitMillis)> 0	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] >= size	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#445	isSupported(f=chrono.millis())	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	!(isLeapYear(year))	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)== 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#97	(iChronology.getDaysInMonthMaxForSet(instant,value))!= 0	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)== 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#436	(year)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < dayOfWeek	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1961	!(fraction == 0)	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis <= saveMillis	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#144	(localInstant)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index > poolSize	1
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	!(getBase().getZone() == DateTimeZone.UTC)	0
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] < size	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#466	isSupported(f=chrono.weekyears())	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index == size	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset >= hours	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#458	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1533	i >= 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	i2 < 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#197	iOffset == Integer.MIN_VALUE	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)>= 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#436	(year)< 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#132	(iRange - 1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] <= poolSize	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())!= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#699	(12)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd != dayOfWeek	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	value < 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1546	(iTailZone.getOffset(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= dayOfMonth	1
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next < instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#310	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))< 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#197	!(iOffset == Integer.MIN_VALUE)	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#85	(iChronology.setYear(instant,year))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1255	!(instant < 0 && start > 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	!(iAdvance)	0
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis == instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)== 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#560	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] <= i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	!(iDayOfWeek == 0)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#509	isSupported(f=chrono.hourOfHalfday())	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse <= thisYear	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#494	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	(offset)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	iDayOfMonth >= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index > i	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end > start	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	next <= instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#81	(instant + (value - get(instant)) * iUnitMillis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end >= start	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != monthOfYear	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#451	isSupported(f=chrono.minutes())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev > instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode < mode	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2153	!(displayOffset == 0 && iZeroOffsetPrintText != null)	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#128	(instant % iUnitMillis)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == dayOfWeek	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	(offset)== 0	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#57	(iChronology.getDayOfWeek(instant))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end > start	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#81	((int)((instant / getUnitMillis()) % iRange))<= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse >= thisYear	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))< 0	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#81	((int)((instant / getUnitMillis()) % iRange))!= 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#925	!(offsetLocal >= 0)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse != months	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#527	!(isSupported(f=chrono.weekOfWeekyear()))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index >= poolSize	1
org.joda.time.DateTimeZone#int#hashCode#?#1273	(57 + getID().hashCode())>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#128	(instant % iUnitMillis)< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#503	!(isSupported(f=chrono.hourOfDay()))	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#55	(iChronology.getYear(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#551	!(iMode == 's')	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#500	!(isSupported(f=chrono.minuteOfDay()))	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#64	(set(instant,newYear))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next != instant	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#144	(localInstant)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1546	(iTailZone.getOffset(instant))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next >= instant	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart <= end	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#443	(getMonthOfYear(millis,getYear(millis)))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] <= size	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1963	--minDigits >= 0	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)< 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#64	(set(instant,newYear))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] == size	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] == i	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#82	!(value < 10000)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse <= thisYear	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1314	start != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next < instant	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#395	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)< 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart != end	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	!(monthToUse >= 0)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	i < size	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#97	(iChronology.getDaysInMonthMaxForSet(instant,value))> 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags != flags	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#317	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)< 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#559	!(instant >= 0)	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#491	!(isSupported(f=chrono.secondOfMinute()))	1
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	!(type == null)	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] >= poolSize	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#354	!((instant ^ diff) < 0 && (instant ^ offset) < 0)	0
org.joda.time.DateTimeZone#int#hashCode#?#1273	(57 + getID().hashCode())<= 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#699	(12)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end < instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1238	((start > end) ? end : start)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next > instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#478	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2179	!(iMaxFields == 2)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset < minutes	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2175	iShowSeparators	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next != instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#494	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset > minutes	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev < instant	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	!(iMode == 'w')	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#131	!((base=iBase) != null && (iBaseFlags & 5) == 5)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#94	(instant)>= 0	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#233	(value < lowerBound) || (value > upperBound)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse == yearToUse	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < monthOfYear	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next <= instant	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2150	displayZone == null	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#463	isSupported(f=chrono.weeks())	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1537	!(i < transitions.length)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == dayOfMonth	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#539	isSupported(f=chrono.year())	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#73	(iChronology.getMonthOfYear(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= millisOfDay	0
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#197	field == null || !field.isSupported()	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#113	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev <= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse <= thisMonth	1
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)<= 0	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1963	!(--minDigits >= 0)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse >= monthToUse	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset <= hours	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#488	!(isSupported(f=chrono.millisOfDay()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	!(iDayOfMonth >= 0)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#478	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == dayOfWeek	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index >= size	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2169	displayOffset == hours	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next < instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev != instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#310	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index < i	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end < instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end < start	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#196	iNextInfo == null || millis < iNextInfo.iPeriodStart	0
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#715	!(id == null)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index < size	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] > poolSize	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1599	!(i < transitions.length)	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#57	(iChronology.getDayOfWeek(instant))!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#542	instant >= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#295	(iField.getUnitMillis())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1190	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next == instant	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#151	(0)< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#477	dateMillis <= millis	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart <= next	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] < size	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#488	isSupported(f=chrono.millisOfDay())	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#55	(iChronology.getYear(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next >= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse != months	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > monthOfYear	1
org.joda.time.DateTimeZone#int#hashCode#?#1273	(57 + getID().hashCode())!= 0	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)> 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#747	info == null || info.iYear != year	1
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#443	(getMonthOfYear(millis,getYear(millis)))!= 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#62	zone == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1579	!(iTailZone == null)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse >= thisMonth	0
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#209	field == null || !field.isSupported()	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end < start	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1253	start != instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse > months	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] < i	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#233	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#533	isSupported(f=chrono.weekyearOfCentury())	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#141	!(offset != zone.getOffset(localInstant))	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	isLeapYear(year)	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#251	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset == hours	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)== 0	1
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis >= instant	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#144	(localInstant)== 0	1
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse != thisYear	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#85	(iChronology.setYear(instant,year))<= 0	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#931	(offsetPrev)< 0	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))<= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#469	isSupported(f=chrono.months())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= millisOfDay	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart >= next	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end == instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1238	((start > end) ? end : start)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] < i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] != size	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#457	!(isSupported(f=chrono.halfdays()))	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)== 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))> 0	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2166	!(iMaxFields == 1)	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] != i	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1951	fraction > instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1586	(iTailZone.nextTransition(instant))<= 0	1
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#199	iLoader != null	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#530	isSupported(f=chrono.weekyear())	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#132	(iRange - 1)> 0	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)!= 0	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)< 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	dayOfYear > (31 + 28)	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index <= size	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1270	!(instant < 0 && end > 0)	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#699	(12)!= 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#295	(iField.getUnitMillis())== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1576	i < transitions.length	1
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())<= 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#560	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))!= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= millisOfDay	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#153	!(tz != null)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#73	(iChronology.getMonthOfYear(instant))<= 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#317	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))< 0	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#135	id == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > dayOfMonth	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#485	!(isSupported(f=chrono.millisOfSecond()))	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#55	(iChronology.getYear(instant))> 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] >= i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next > instant	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#199	!(iLoader != null)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1226	!(instant > 0 && end < 0)	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#205	!(id == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1314	start < instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > millisOfDay	1
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#144	(localInstant)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#591	iMode == 'w'	1
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#209	!(field == null || !field.isSupported())	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	!(i2 < 0)	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))== 0	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)> 0	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#195	!(iFileDir != null)	0
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis != instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1190	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == dayOfWeek	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#521	isSupported(f=chrono.dayOfMonth())	0
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)<= 0	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#781	iFirstDayMillis < firstDayMillis	1
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2654	(iPrintedLengthEstimate)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1209	start != instant	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#60	(instant)> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next <= instant	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#153	tz != null	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#178	instant == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	iMode == 'w'	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1546	(iTailZone.getOffset(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)>= 0	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#690	(getMaxMonth())> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)<= 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags >= flags	0
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis < instant	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	(offset)!= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#56	(1)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse >= months	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#60	(instant)<= 0	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#113	(instant + (value - get(instant)) * iUnitMillis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))>= 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#59	!(base == null)	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#552	(1 + (int)((daysSince19700101 + 3) % 7))!= 0	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#208	!(id.equals("UTC"))	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears != year	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)< 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#159	next == periodStart || next > end	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#140	!(obj == null)	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2153	displayOffset == 0 && iZeroOffsetPrintText != null	1
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#635	(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#552	(1 + (int)((daysSince19700101 + 3) % 7))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1253	start > instant	1
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#?#ZonedDateTimeField#?,DateTimeField,DateTimeZone,DurationField,DurationField,DurationField#405	!(!field.isSupported())	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	(offset)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == dayOfMonth	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse != thisMonth	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2169	displayOffset != hours	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))> 0	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#527	isSupported(f=chrono.weekOfWeekyear())	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#477	dateMillis == millis	1
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > dayOfMonth	0
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	type == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1610	prev < instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#147	(datePart + timePart)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#530	!(isSupported(f=chrono.weekyear()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next > instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= dayOfMonth	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#368	(getYearInfo(year).iFirstDayMillis)<= 0	1
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	((1 << iOrdinal))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next == instant	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#780	iYear > year	1
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)<= 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#56	(1)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1611	(prev)<= 0	1
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#200	converted.containsKey(field)	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1608	iTailZone != null	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)>= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)>= 0	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#952	!(iChrono != null)	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#609	iDayOfWeek == 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears >= year	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)!= 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset != minutes	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != dayOfMonth	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#195	iFileDir != null	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= monthOfYear	0
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())> 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))< 0	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#132	(iRange - 1)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != dayOfMonth	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#183	(ImpreciseDateTimeField.this.add(instant,value))== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#515	!(isSupported(f=chrono.halfdayOfDay()))	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	!(isLeapYear(thisYear))	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#472	!(isSupported(f=chrono.years()))	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))<= 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	size > 1	0
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#49	cCache == null	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2183	displayOffset == 0 && iMinFields <= 2	0
org.joda.time.DateTimeZone#int#hashCode#?#1273	(57 + getID().hashCode())< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= dayOfMonth	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#81	((int)((instant / getUnitMillis()) % iRange))> 0	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#183	(ImpreciseDateTimeField.this.add(instant,value))!= 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#149	obj instanceof SoftReference<?>	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))>= 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#181	(instant.getMillis())> 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#118	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))<= 0	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)<= 0	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#55	(iChronology.getYear(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index == poolSize	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#780	iYear == year	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart < millis	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] != poolSize	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != millisOfDay	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis != instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse != yearToUse	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)<= 0	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis > instant	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#295	(iField.getUnitMillis())< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > millisOfDay	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#543	daysSince19700101 < instant	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#62	!(zone == null)	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#121	(MAX_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#478	!(isSupported(f=chrono.eras()))	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1314	start <= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < dayOfMonth	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == dayOfMonth	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#97	(iChronology.getDaysInMonthMaxForSet(instant,value))>= 0	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev < instant	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2671	!(i < len)	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))> 0	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#113	(instant + (value - get(instant)) * iUnitMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1546	(iTailZone.getOffset(instant))>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2150	!(displayZone == null)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index < poolSize	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#451	!(isSupported(f=chrono.minutes()))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1579	iTailZone == null	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	isSupported(f=chrono.clockhourOfHalfday())	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#155	(iUnitMillis)<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#494	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.field.PreciseDateTimeField#int#get#?,long#81	((int)((instant / getUnitMillis()) % iRange))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next != instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#551	isSupported(f=chrono.era())	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#417	!(diff < 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1346	i < poolSize	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)>= 0	0
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#118	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))< 0	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#151	(0)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1611	(prev)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse > thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1592	i >= 0	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#118	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#147	(datePart + timePart)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1282	(((start > end) ? start : end) - 1)== 0	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#161	(iUnitMillis)== 0	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#57	(iChronology.getDayOfWeek(instant))>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#73	(iChronology.getMonthOfYear(instant))>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#467	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev < instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == monthOfYear	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)> 0	0
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1362	poolSize < 256	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)>= 0	0
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#178	!(instant == null)	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	(offset)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1253	start < instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#467	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis > saveMillis	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#458	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < dayOfMonth	1
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#715	id == null	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())> 0	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#927	!(prev < instantAdjusted)	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))<= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#469	!(isSupported(f=chrono.months()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] == poolSize	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset <= minutes	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] == i	1
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	zone instanceof CachedDateTimeZone	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#475	isSupported(f=chrono.centuries())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < dayOfMonth	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#780	iYear >= year	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] != poolSize	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#443	(getMonthOfYear(millis,getYear(millis)))>= 0	0
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)> 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#780	iYear < year	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < dayOfWeek	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)!= 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev > instant	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2179	iMaxFields == 2	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1608	!(iTailZone != null)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end != instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#94	(instant)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != dayOfWeek	0
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#128	(instant % iUnitMillis)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1533	!(i >= 0)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1190	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())> 0	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	zone == null	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next < instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end < start	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))> 0	0
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	(iZone.previousTransition(instant))== 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1238	((start > end) ? end : start)== 0	1
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#212	converted.containsKey(field)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end > instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#606	prev == instant	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#552	(1 + (int)((daysSince19700101 + 3) % 7))== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#458	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd >= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index != i	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2183	!(displayOffset == 0 && iMinFields <= 2)	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#60	(instant)== 0	1
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#614	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1209	start < instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#593	iMode == 's'	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse >= thisMonth	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#607	prev == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == dayOfMonth	1
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#128	(instant % iUnitMillis)!= 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#436	(year)!= 0	0
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#952	iChrono != null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)> 0	0
org.joda.time.DateTimeZone#int#hashCode#?#1273	(57 + getID().hashCode())== 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2654	(iPrintedLengthEstimate)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse <= months	1
org.joda.time.base.BaseDateTime#long#getMillis#?#295	(iMillis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] < poolSize	1
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#118	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)< 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1255	instant < 0 && start > 0	1
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())!= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#196	!(iNextInfo == null || millis < iNextInfo.iPeriodStart)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end != instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end <= instant	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#200	(iOffset)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#463	!(isSupported(f=chrono.weeks()))	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#56	(1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] > i	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)> 0	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	(getInfo(instant).getOffset(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#139	dayToUse > maxDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == monthOfYear	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#320	!(iBase != null)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != monthOfYear	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#59	!(years == 0)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)<= 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	!(value < 10)	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#141	offset != zone.getOffset(localInstant)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index == i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)!= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#395	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#310	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))> 0	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#181	iPeriodStart < periodStart	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1180	iStandardOffset >= standardOffset	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#559	instant >= 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#203	year < 0	1
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1962	buf != null	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse > thisMonth	0
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#477	dateMillis >= millis	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))> 0	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#357	(offset)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end == start	1
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	type == null	1
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#251	(value < lowerBound) || (value > upperBound)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end == start	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next < instant	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#357	(offset)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))>= 0	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)<= 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#354	(instant ^ diff) < 0 && (instant ^ offset) < 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	!(value < 0)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] == size	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart > end	1
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#284	!(chrono == null)	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#543	daysSince19700101 == instant	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1268	end <= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#147	(datePart + timePart)!= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2157	!(displayOffset >= 0)	1
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#931	(offsetPrev)<= 0	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#135	!(id == null)	0
org.joda.time.MutableDateTime#void#add#?,DurationFieldType,int#636	!(type == null)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#605	prev != instant	0
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#614	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)> 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#55	(iChronology.getYear(instant))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse > months	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#55	base == null	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#616	!(prev >= instant)	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#155	(iUnitMillis)!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#506	isSupported(f=chrono.clockhourOfDay())	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#395	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2157	displayOffset >= 0	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#113	(instant + (value - get(instant)) * iUnitMillis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#505	!(mode != 'u' && mode != 'w' && mode != 's')	0
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#96	!(zone == null)	0
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	iMillis <= instant	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#780	iYear != year	1
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	!(zone instanceof CachedDateTimeZone)	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#203	!(year < 0)	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart != millis	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index != poolSize	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#927	prev < instantAdjusted	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next <= instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#93	!(months == 0)	0
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	getBase().getZone() == DateTimeZone.UTC	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#310	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= millisOfDay	0
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#161	(iUnitMillis)<= 0	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#368	(getYearInfo(year).iFirstDayMillis)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#497	!(isSupported(f=chrono.minuteOfHour()))	1
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#208	id.equals("UTC")	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == millisOfDay	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	value < 10	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse == monthToUse	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1209	start >= instant	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)!= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)!= 0	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	!(value < 100)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next <= instant	1
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#200	!(converted.containsKey(field))	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)<= 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))>= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#368	(getYearInfo(year).iFirstDayMillis)< 0	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset < hours	0
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1962	!(buf != null)	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#113	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)<= 0	1
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2654	(iPrintedLengthEstimate)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1546	(iTailZone.getOffset(instant))> 0	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2170	!(displayOffset == 0 && iMinFields <= 1)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] > i	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart != next	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	!(isLeapYear(year))	1
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] <= i	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse > thisMonth	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart >= millis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next <= instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#551	!(isSupported(f=chrono.era()))	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#458	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#183	(ImpreciseDateTimeField.this.add(instant,value))< 0	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#320	iBase != null	0
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse > monthToUse	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#445	!(isSupported(f=chrono.millis()))	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#116	monthToUse != thisYear	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > millisOfDay	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#417	diff < 0	1
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > dayOfWeek	0
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#317	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))== 0	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart < next	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd == dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev == instant	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis != saveMillis	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#155	(iUnitMillis)< 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#295	(iField.getUnitMillis())>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse >= thisYear	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#458	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	!(next <= instant)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#548	isSupported(f=chrono.centuryOfEra())	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	(prev)== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#494	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#131	(base=iBase) != null && (iBaseFlags & 5) == 5	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1282	(((start > end) ? start : end) - 1)!= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	isLeapYear(year)	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#81	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#81	(instant + (value - get(instant)) * iUnitMillis)> 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	!(isLeapYear(year))	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == dayOfWeek	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#147	(datePart + timePart)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	standardOffsets[i] >= poolSize	0
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#503	isSupported(f=chrono.hourOfDay())	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#167	(base=getBase()) != null	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	(iOfYear.previous(instant,standardOffset,saveMillis))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1180	iStandardOffset < standardOffset	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#155	(iUnitMillis)> 0	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#443	(getMonthOfYear(millis,getYear(millis)))> 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags == flags	0
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#200	!(chrono == null)	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)> 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#60	(instant)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end == instant	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1282	(((start > end) ? start : end) - 1)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1586	(iTailZone.nextTransition(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < millisOfDay	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1586	(iTailZone.nextTransition(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next >= instant	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)<= 0	1
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis > instant	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= dayOfWeek	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#475	!(isSupported(f=chrono.centuries()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next != instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#94	(instant)== 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#436	(year)> 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#48	(iChronology.getDayOfMonth(instant))< 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#48	(iChronology.getDayOfMonth(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	!(instant < end)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= monthOfYear	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#151	(0)== 0	0
org.joda.time.DateTimeZone#int#hashCode#?#1273	(57 + getID().hashCode())> 0	0
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#59	base == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != millisOfDay	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#144	!(id.equals(obj))	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	!(isSupported(f=chrono.clockhourOfHalfday()))	1
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#94	(instant)!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#59	years == 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))!= 0	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#560	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	iDayOfWeek == 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < monthOfYear	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#478	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#205	id == null	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#317	(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)))>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#545	isSupported(f=chrono.yearOfCentury())	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)== 0	1
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#200	chrono == null	1
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	(base=iBase) != null	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#931	(offsetPrev)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)== 0	0
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#310	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))== 0	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)> 0	0
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#668	!(printer == null)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index <= i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next != instant	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next == instant	1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#161	(iUnitMillis)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#73	(iChronology.getMonthOfYear(instant))> 0	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#560	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1546	(iTailZone.getOffset(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1358	wallOffsets[i] <= poolSize	1
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	!(chrono != null && chrono.getZone() == zone)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1346	!(i < poolSize)	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)< 0	1
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	(getWrappedField().getUnitMillis() * iScalar)== 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#60	(instant)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == monthOfYear	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1363	index > size	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	(iNextInfo.getOffset(millis))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse == thisYear	0
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#443	(getMonthOfYear(millis,getYear(millis)))<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#478	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	(hash)== 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#436	(year)== 0	1
org.joda.time.chrono.ZonedChronology$ZonedDurationField#?#ZonedDurationField#?,DurationField,DateTimeZone#282	!(!field.isSupported())	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#162	periodStart == end	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode <= mode	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#155	(iUnitMillis)== 0	1
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	!(type == null)	0
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	(hash)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	iAdvance	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	(((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#615	prev > instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1325	end <= instant	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#97	(iChronology.getDaysInMonthMaxForSet(instant,value))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1180	iStandardOffset != standardOffset	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#518	isSupported(f=chrono.dayOfWeek())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#460	isSupported(f=chrono.days())	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	0
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	(0)>= 0	0
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#144	(localInstant)!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#64	(set(instant,newYear))< 0	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#144	id.equals(obj)	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis == saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1226	instant > 0 && end < 0	1
org.joda.time.base.BaseDateTime#void#setMillis#?,long#317	iMillis <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1314	start > instant	0
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2169	displayOffset < hours	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#491	isSupported(f=chrono.secondOfMinute())	0
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#931	(offsetPrev)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	daysToAdd != 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end > instant	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#552	(1 + (int)((daysSince19700101 + 3) % 7))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1224	end >= instant	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#97	(iChronology.getDaysInMonthMaxForSet(instant,value))< 0	1
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	(iZone.hashCode())!= 0	0
org.joda.time.field.MillisDurationField#int#hashCode#?#155	((int)getUnitMillis())< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next > instant	1
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	(instant)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1537	i < transitions.length	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#419	!(diff >= DateTimeConstants.MILLIS_PER_DAY * 365L)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	(prev - offset)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#139	!(dayToUse > maxDay)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != millisOfDay	1
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2182	displayOffset > hours	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#94	(instant)> 0	0
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#668	printer == null	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	yearToUse == months	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#155	(iUnitMillis)>= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	!(dayOfYear > (31 + 28))	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#64	(set(instant,newYear))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= monthOfYear	0
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#197	!(field == null || !field.isSupported())	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#132	(iRange - 1)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#500	isSupported(f=chrono.minuteOfDay())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#536	isSupported(f=chrono.monthOfYear())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != dayOfMonth	0