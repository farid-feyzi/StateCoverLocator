line	predicate	lable
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end <= instant	1
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMaximumValue#?#97	(getWrappedField().getMaximumValue())< 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin > j	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)> 0	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	!(isLeapYear(year))	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#207	id.equals("UTC")	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)>= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin != min	1
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#205	in == null	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax > minValue	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end < start	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start >= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != months	0
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMaximumValue#?#97	(getWrappedField().getMaximumValue())<= 0	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < thisMonth	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next >= instant	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#518	isSupported(f=chrono.dayOfWeek())	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)< 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)<= 0	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis == firstDayMillis	0
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)>= 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin <= j	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax <= offset	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))<= 0	1
org.joda.time.DateTimeZone#String#getShortName#?,long,Locale#752	name != null	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end < instant	1
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	!(type == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#536	isSupported(f=chrono.monthOfYear())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#539	isSupported(f=chrono.year())	0
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart > periodStart	1
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#133	minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == thisYear	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart < periodStart	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#527	isSupported(f=chrono.weekOfWeekyear())	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)<= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#521	!(isSupported(f=chrono.dayOfMonth()))	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)< 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin > divisor	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= yearToUse	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == dayOfWeek	1
org.joda.time.field.DecoratedDurationField#?#DecoratedDurationField#?,DurationField,DurationFieldType#56	!field.isSupported()	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)>= 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags >= flags	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)< 0	1
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#207	!(id.equals("UTC"))	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset >= offset	0
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	!(type == null)	0
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek <= minDaysInFirstWeek	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode > mode	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < monthToUse	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#545	!(isSupported(f=chrono.yearOfCentury()))	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] >= poolSize	0
org.joda.time.DateTimeZone#String#getName#?,long,Locale#788	!(nameKey == null)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis <= millis	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > monthOfYear	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	!(daysToAdd > 0)	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#460	isSupported(f=chrono.days())	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis == millis	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == thisMonth	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax >= offset	0
org.joda.time.field.PreciseDurationField#?#PreciseDurationField#?,DurationFieldType,long#44	iUnitMillis > unitMillis	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax != minValue	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin < divisor	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] > i	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)== 0	1
org.joda.time.field.OffsetDateTimeField#int#getMinimumValue#?#174	(iMin)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next < instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != millisOfDay	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)< 0	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)<= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next <= instant	1
org.joda.time.field.ZeroIsMaxDateTimeField#?#ZeroIsMaxDateTimeField#?,DateTimeField,DateTimeFieldType#46	!(field.getMinimumValue() != 0)	0
org.joda.time.field.PreciseDurationField#?#PreciseDurationField#?,DurationFieldType,long#44	iUnitMillis < unitMillis	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#551	iMode == 's'	1
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMinimumValue#?#93	(1)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#551	!(isSupported(f=chrono.era()))	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax >= min	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#506	isSupported(f=chrono.clockhourOfDay())	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)>= 0	0
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMinimumValue#?#87	(0)< 0	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)<= 0	1
org.joda.time.field.ScaledDurationField#?#ScaledDurationField#?,DurationField,DurationFieldType,int#51	iScalar != scalar	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart >= periodStart	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#545	isSupported(f=chrono.yearOfCentury())	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	!(value < 10)	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset != standardOffset	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)<= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.field.ScaledDurationField#?#ScaledDurationField#?,DurationField,DurationFieldType,int#48	scalar == 0 || scalar == 1	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))== 0	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#448	isSupported(f=chrono.seconds())	0
org.joda.time.field.ImpreciseDateTimeField#?#ImpreciseDateTimeField#?,DateTimeFieldType,long#56	iUnitMillis < unitMillis	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))>= 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))<= 0	1
org.joda.time.field.RemainderDateTimeField#int#getMaximumValue#?#158	(iDivisor - 1)== 0	1
org.joda.time.chrono.BasicYearDateTimeField#int#getMaximumValue#?#119	(iChronology.getMaxYear())== 0	1
org.joda.time.DateTimeZone#String#printOffset#?,int#632	!(offset >= 0)	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())>= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd >= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] >= i	0
org.joda.time.tz.DefaultNameProvider#String[]#getNameSet#?,Locale,String,String#58	!(byIdCache == null)	1
org.joda.time.DateTimeZone#String#getName#?,long,Locale#784	locale == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > thisMonth	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < monthOfYear	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYear#?#229	(MILLIS_PER_YEAR)== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= thisYear	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#542	!(isSupported(f=chrono.yearOfEra()))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] == i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > millisOfDay	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#466	isSupported(f=chrono.weekyears())	0
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	type == null	1
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset <= minutes	0
org.joda.time.DateTimeZone#String#printOffset#?,int#647	offset == 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax < divisor	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] > i	0
org.joda.time.field.ImpreciseDateTimeField#?#ImpreciseDateTimeField#?,DateTimeFieldType,long#56	iUnitMillis != unitMillis	1
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next >= instant	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#81	!(minValue < (field.getMinimumValue() + offset))	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis <= firstDayMillis	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#505	mode != 'u' && mode != 'w' && mode != 's'	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))< 0	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset <= minValue	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode <= mode	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1208	instant > 0 && start < 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin < min	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#494	!(isSupported(f=chrono.secondOfDay()))	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin < maxValue	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#521	isSupported(f=chrono.dayOfMonth())	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax == j	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))<= 0	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)== 0	1
org.joda.time.field.RemainderDateTimeField#?#RemainderDateTimeField#?,DateTimeField,DateTimeFieldType,int#66	iDivisor == divisor	0
org.joda.time.field.DecoratedDurationField#?#DecoratedDurationField#?,DurationField,DurationFieldType#53	field == null	1
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek == minDaysInFirstWeek	0
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	!(field == null)	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax == offset	1
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	field == null	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax > min	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset <= hours	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))== 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin == max	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))== 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#String#getNameKey#?,long#1515	!(i < transitions.length)	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerMonth#?#237	(MILLIS_PER_MONTH)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis == saveMillis	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode == mode	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)> 0	0
org.joda.time.chrono.BasicChronology#DateTimeZone#getZone#?#143	!((base=getBase()) != null)	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 < instant	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#70	iDivisor >= divisor	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis != millis	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1534	!(i < transitions.length)	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset > maxValue	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	!(isLeapYear(year))	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#getMaximumValue#?#119	(iChronology.getMaxYear())> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	!(next <= instant)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end != start	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)> 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax != min	0
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMaximumValue#?#91	(getWrappedField().getMaximumValue())!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#58	divisor < 2	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#58	!(divisor < 2)	0
org.joda.time.chrono.BasicYearDateTimeField#int#getMaximumValue#?#119	(iChronology.getMaxYear())>= 0	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#457	isSupported(f=chrono.halfdays())	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags != flags	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= thisYear	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear != year	1
org.joda.time.field.DecoratedDateTimeField#?#DecoratedDateTimeField#?,DateTimeField,DateTimeFieldType#55	!(field == null)	0
org.joda.time.tz.CachedDateTimeZone$Info#String#getNameKey#?,long#194	!(iNextInfo == null || millis < iNextInfo.iPeriodStart)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)>= 0	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags > flags	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1576	iTailZone == null	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)== 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#203	year < 0	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)> 0	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))>= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax >= divisor	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end > start	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())== 0	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis > firstDayMillis	1
org.joda.time.tz.DefaultNameProvider#String[]#getNameSet#?,Locale,String,String#76	!(setLoc[2].equals(setLoc[4]))	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)>= 0	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin <= maxValue	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] < poolSize	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	daysToAdd > 0	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	!(diff < 0)	0
org.joda.time.field.DecoratedDateTimeField#?#DecoratedDateTimeField#?,DateTimeField,DateTimeFieldType#58	!field.isSupported()	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis != saveMillis	1
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset >= minutes	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#113	!(monthToUse >= 0)	1
org.joda.time.chrono.BasicYearDateTimeField#int#getMaximumValue#?#119	(iChronology.getMaxYear())< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] >= size	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin == offset	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)>= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)< 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= monthOfYear	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end > instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > thisMonth	0
org.joda.time.field.OffsetDateTimeField#int#getMinimumValue#?#174	(iMin)<= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#448	!(isSupported(f=chrono.seconds()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd < dayOfWeek	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#485	isSupported(f=chrono.millisOfSecond())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next > instant	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	years == 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != millisOfDay	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#53	iMax >= leapMonth	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] != i	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin >= min	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next != instant	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin <= min	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= dayOfWeek	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset < minValue	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next < instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#551	!(iMode == 's')	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#136	id == null	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= thisYear	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] > poolSize	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next == instant	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#548	!(isSupported(f=chrono.centuryOfEra()))	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)<= 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears != year	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != monthOfYear	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin >= divisor	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < dayOfMonth	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= thisMonth	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < millisOfDay	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#138	dayToUse > maxDay	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end >= start	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)!= 0	0
org.joda.time.field.ImpreciseDateTimeField#?#ImpreciseDateTimeField#?,DateTimeFieldType,long#56	iUnitMillis >= unitMillis	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin == minValue	1
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMaximumValue#?#97	(getWrappedField().getMaximumValue())!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > dayOfWeek	1
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMaximumValue#?#91	(getWrappedField().getMaximumValue())== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next >= instant	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset != offset	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != dayOfMonth	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.tz.DefaultNameProvider#String[]#getNameSet#?,Locale,String,String#63	!(byNameKeyCache == null)	1
org.joda.time.field.PreciseDateTimeField#?#PreciseDateTimeField#?,DateTimeFieldType,DurationField,DurationField#59	!(!range.isPrecise())	0
org.joda.time.field.PreciseDurationDateTimeField#?#PreciseDurationDateTimeField#?,DateTimeFieldType,DurationField#55	iUnitMillis < 1	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin >= maxValue	1
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMinimumValue#?#87	(0)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index > poolSize	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin != j	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#524	isSupported(f=chrono.dayOfYear())	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd <= dayOfWeek	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset < maxValue	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] >= i	0
org.joda.time.field.RemainderDateTimeField#int#getMinimumValue#?#148	(0)> 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start > instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode < mode	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)== 0	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd > dayOfWeek	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < thisMonth	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1353	i < size	0
org.joda.time.field.ScaledDurationField#?#ScaledDurationField#?,DurationField,DurationFieldType,int#51	iScalar > scalar	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)> 0	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin != offset	0
org.joda.time.field.DecoratedDurationField#?#DecoratedDurationField#?,DurationField,DurationFieldType#56	!(!field.isSupported())	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	!(size > 1)	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next <= instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#530	isSupported(f=chrono.weekyear())	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))<= 0	1
org.joda.time.field.RemainderDateTimeField#?#RemainderDateTimeField#?,DateTimeField,DateTimeFieldType,int#66	iDivisor != divisor	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))< 0	1
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#133	!(minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7)	0
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMinimumValue#?#93	(1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#574	next <= instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end >= instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#548	isSupported(f=chrono.centuryOfEra())	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd != dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start >= instant	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin < max	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#478	!(isSupported(f=chrono.eras()))	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > dayOfMonth	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#214	!((value < lowerBound) || (value > upperBound))	0
org.joda.time.field.OffsetDateTimeField#int#getMaximumValue#?#183	(iMax)<= 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax >= i	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end == start	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > dayOfWeek	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerMonth#?#237	(MILLIS_PER_MONTH)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= millisOfDay	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax > divisor	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin != divisor	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#75	offset == 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != yearToUse	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == monthOfYear	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	!(i < transitions.length)	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax < i	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != dayOfMonth	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax >= minValue	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)== 0	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)<= 0	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#497	!(isSupported(f=chrono.minuteOfHour()))	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)< 0	1
org.joda.time.field.ScaledDurationField#?#ScaledDurationField#?,DurationField,DurationFieldType,int#51	iScalar < scalar	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == monthOfYear	1
org.joda.time.field.ZeroIsMaxDateTimeField#?#ZeroIsMaxDateTimeField#?,DateTimeField,DateTimeFieldType#46	field.getMinimumValue() != 0	1
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset <= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek > millisOfDay	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#505	!(mode != 'u' && mode != 'w' && mode != 's')	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())> 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] >= size	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > thisYear	1
org.joda.time.field.OffsetDateTimeField#int#getMinimumValue#?#174	(iMin)>= 0	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin <= minValue	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#469	!(isSupported(f=chrono.months()))	1
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)<= 0	1
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	!(iAdvance)	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start > instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > monthOfYear	0
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	getBase().getZone() == DateTimeZone.UTC	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index == poolSize	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin >= i	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1208	!(instant > 0 && start < 0)	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#70	iDivisor != divisor	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax <= j	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.field.RemainderDateTimeField#int#getMinimumValue#?#148	(0)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != monthOfYear	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	!(value < 0)	0
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMinimumValue#?#87	(0)>= 0	0
org.joda.time.field.ScaledDurationField#?#ScaledDurationField#?,DurationField,DurationFieldType,int#51	iScalar >= scalar	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin >= minValue	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1223	!(instant > 0 && end < 0)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != thisMonth	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	isLeapYear(year)	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1580	!(instant < end)	0
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMinimumValue#?#93	(1)== 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= millisOfDay	0
org.joda.time.field.OffsetDateTimeField#int#getMaximumValue#?#183	(iMax)!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax < max	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))> 0	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)<= 0	0
org.joda.time.field.RemainderDateTimeField#?#RemainderDateTimeField#?,DateTimeField,DateTimeFieldType,int#54	divisor < 2	1
org.joda.time.tz.DefaultNameProvider#String[]#getNameSet#?,Locale,String,String#58	byIdCache == null	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#String#getNameKey#?,long#1511	!(i >= 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next < instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)== 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	!(i2 < 0)	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin == divisor	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != monthOfYear	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset < offset	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin > minValue	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next >= instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#454	isSupported(f=chrono.hours())	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#66	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax <= maxValue	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())< 0	1
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek > minDaysInFirstWeek	1
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	!(zone instanceof CachedDateTimeZone)	0
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)<= 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] != poolSize	0
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMinimumValue#?#93	(1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index <= poolSize	0
org.joda.time.DurationFieldType$StandardDurationFieldType#?#StandardDurationFieldType#?,String,byte#260	iOrdinal >= ordinal	0
org.joda.time.field.RemainderDateTimeField#int#getMaximumValue#?#158	(iDivisor - 1)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= dayOfWeek	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis > saveMillis	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax < min	1
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)<= 0	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#141	obj == null	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin == maxValue	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= dayOfMonth	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)> 0	0
org.joda.time.DateTimeZone#String#getShortName#?,long,Locale#752	!(name != null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= millisOfDay	1
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#211	zone != null	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= monthToUse	0
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMaximumValue#?#91	(getWrappedField().getMaximumValue())> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next < instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= millisOfDay	0
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType#?#StandardDateTimeFieldType#?,String,byte,DurationFieldType,DurationFieldType#445	iOrdinal >= ordinal	0
org.joda.time.tz.DefaultNameProvider#String[]#getNameSet#?,Locale,String,String#76	setLoc[2].equals(setLoc[4])	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin > maxValue	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start < instant	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#63	unitField == null	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	isLeapYear(year)	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)>= 0	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax <= minValue	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYear#?#229	(MILLIS_PER_YEAR)<= 0	1
org.joda.time.field.OffsetDateTimeField#int#getMaximumValue#?#183	(iMax)< 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax > i	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end == start	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))< 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] <= poolSize	1
org.joda.time.DateTimeZone#String#printOffset#?,int#632	offset >= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax == divisor	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] < size	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] < i	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin == min	0
org.joda.time.tz.DefaultNameProvider#String[]#getNameSet#?,Locale,String,String#69	!(strings != null && strings.length == 5 && id.equals(strings[0]))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > millisOfDay	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYear#?#229	(MILLIS_PER_YEAR)> 0	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	!(isLeapYear(year))	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] != poolSize	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags == flags	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start <= instant	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#136	!(id == null)	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#200	iLoader != null	0
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#readFrom#?,InputStream,String#95	!(in instanceof DataInput)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= dayOfWeek	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#298	!(thisDom > maxDom)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= yearToUse	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#70	iDivisor == divisor	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))< 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax != i	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= monthOfYear	0
org.joda.time.field.RemainderDateTimeField#int#getMinimumValue#?#148	(0)>= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#515	!(isSupported(f=chrono.halfdayOfDay()))	1
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#167	next == periodStart || next > end	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)!= 0	0
org.joda.time.DurationFieldType$StandardDurationFieldType#?#StandardDurationFieldType#?,String,byte#260	iOrdinal <= ordinal	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#491	isSupported(f=chrono.secondOfMinute())	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next >= instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start != instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end != start	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax <= min	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1343	!(i < poolSize)	0
org.joda.time.field.ImpreciseDateTimeField#?#ImpreciseDateTimeField#?,DateTimeFieldType,long#56	iUnitMillis == unitMillis	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#298	thisDom > maxDom	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay < dayOfWeek	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)== 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))<= 0	0
org.joda.time.field.RemainderDateTimeField#?#RemainderDateTimeField#?,DateTimeField,DateTimeFieldType,int#59	!(rangeField == null)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] > size	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#463	isSupported(f=chrono.weeks())	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != thisMonth	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#54	iLeapMonth <= leapMonth	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))< 0	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] <= size	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end >= instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#509	isSupported(f=chrono.hourOfHalfday())	0
org.joda.time.field.PreciseDurationField#?#PreciseDurationField#?,DurationFieldType,long#44	iUnitMillis <= unitMillis	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#203	!(year < 0)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] > size	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#String#getNameKey#?,long#1511	i >= 0	1
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next <= instant	0
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))<= 0	1
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end >= start	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 == instant	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)> 0	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#551	!(instant >= 0)	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#494	isSupported(f=chrono.secondOfDay())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#509	!(isSupported(f=chrono.hourOfHalfday()))	1
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#204	!(id == null)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	poolSize < 256	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis < firstDayMillis	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin < i	0
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	type == null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())>= 0	0
org.joda.time.field.DecoratedDateTimeField#?#DecoratedDateTimeField#?,DateTimeField,DateTimeFieldType#58	!(!field.isSupported())	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))<= 0	1
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= months	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != dayOfMonth	1
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMaximumValue#?#91	(getWrappedField().getMaximumValue())< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#53	iMax != leapMonth	0
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMaximumValue#?#91	(getWrappedField().getMaximumValue())<= 0	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#54	iLeapMonth > leapMonth	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin > i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay >= dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1534	i < transitions.length	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin != max	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#478	isSupported(f=chrono.eras())	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)== 0	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < monthOfYear	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next == instant	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1580	instant < end	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#205	iOffset == Integer.MIN_VALUE	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)>= 0	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)== 0	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin != maxValue	0
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMaximumValue#?#91	(getWrappedField().getMaximumValue())>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))<= 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 <= instant	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)== 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= months	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#205	!(iOffset == Integer.MIN_VALUE)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != millisOfDay	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= dayOfMonth	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)<= 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#551	isSupported(f=chrono.era())	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)!= 0	0
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)< 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin <= i	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))>= 0	0
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType#?#StandardDateTimeFieldType#?,String,byte,DurationFieldType,DurationFieldType#445	iOrdinal < ordinal	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)>= 0	0
org.joda.time.field.RemainderDateTimeField#?#RemainderDateTimeField#?,DateTimeField,DateTimeFieldType,int#66	iDivisor >= divisor	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYear#?#229	(MILLIS_PER_YEAR)>= 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1353	!(i < size)	0
org.joda.time.field.RemainderDateTimeField#int#getMinimumValue#?#148	(0)<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	!(isSupported(f=chrono.clockhourOfHalfday()))	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset >= minValue	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#196	iFileDir != null	1
org.joda.time.DateTimeZone#String#getShortName#?,long,Locale#744	!(locale == null)	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())!= 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)<= 0	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax < maxValue	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset > hours	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	0
org.joda.time.field.PreciseDurationDateTimeField#?#PreciseDurationDateTimeField#?,DateTimeFieldType,DurationField#55	!(iUnitMillis < 1)	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis != firstDayMillis	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin > min	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == millisOfDay	1
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset != minutes	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index != size	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1371	!(in.readBoolean())	1
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#152	!(info == null || (int)((info.iPeriodStart >> 32)) != period)	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	!(months == 0)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	!(daysToAdd != 0)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#469	isSupported(f=chrono.months())	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)>= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > monthToUse	0
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)< 0	1
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)!= 0	1
org.joda.time.field.ScaledDurationField#?#ScaledDurationField#?,DurationField,DurationFieldType,int#51	iScalar <= scalar	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset < standardOffset	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index >= i	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#141	!(obj == null)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#457	!(isSupported(f=chrono.halfdays()))	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end != instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= thisMonth	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin <= divisor	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerMonth#?#237	(MILLIS_PER_MONTH)> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#488	isSupported(f=chrono.millisOfDay())	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#491	!(isSupported(f=chrono.secondOfMinute()))	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))!= 0	0
org.joda.time.chrono.GregorianChronology#GregorianChronology#getInstance#?,DateTimeZone,int#111	zone == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > millisOfDay	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset > minValue	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#466	!(isSupported(f=chrono.weekyears()))	1
org.joda.time.tz.DefaultNameProvider#String[]#getNameSet#?,Locale,String,String#53	!(locale == null || id == null || nameKey == null)	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear > year	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next > instant	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse > months	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	months == 0	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index >= poolSize	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next < instant	1
org.joda.time.field.PreciseDateTimeField#?#PreciseDateTimeField#?,DateTimeFieldType,DurationField,DurationField#65	!(iRange < 2)	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	(val1 ^ sum) < 0 && (val1 ^ val2) >= 0	1
org.joda.time.field.ImpreciseDateTimeField#?#ImpreciseDateTimeField#?,DateTimeFieldType,long#56	iUnitMillis > unitMillis	1
org.joda.time.DateTimeZone#String#printOffset#?,int#647	!(offset == 0)	1
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset == hours	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1540	iTailZone == null	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#138	!(dayToUse > maxDay)	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis > millis	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end > start	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	!(iDayOfWeek == 0)	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)< 0	1
org.joda.time.field.RemainderDateTimeField#?#RemainderDateTimeField#?,DateTimeField,DateTimeFieldType,int#66	iDivisor <= divisor	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax > offset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1343	i < poolSize	0
org.joda.time.tz.DefaultNameProvider#String[]#getNameSet#?,Locale,String,String#63	byNameKeyCache == null	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= monthOfYear	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] <= i	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#539	!(isSupported(f=chrono.year()))	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis >= saveMillis	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax <= max	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))== 0	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax == i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	(next - offset)!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#getMaximumValue#?#119	(iChronology.getMaxYear())!= 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset != hours	0
org.joda.time.DateTimeZone#String#getName#?,long,Locale#784	!(locale == null)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= monthToUse	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin > max	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))== 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())> 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < millisOfDay	0
org.joda.time.field.PreciseDateTimeField#?#PreciseDateTimeField#?,DateTimeFieldType,DurationField,DurationField#59	!range.isPrecise()	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#320	!(iBase != null)	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin >= offset	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > monthOfYear	1
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	info == null || info.iYear != year	0
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMinimumValue#?#87	(0)!= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart <= periodStart	0
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	!(info == null || info.iYear != year)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#445	!(isSupported(f=chrono.millis()))	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#401	i2 < 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse <= thisYear	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears <= year	0
org.joda.time.field.RemainderDateTimeField#int#getMaximumValue#?#158	(iDivisor - 1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= monthOfYear	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] == poolSize	1
org.joda.time.DateTimeZone#String#getShortName#?,long,Locale#744	locale == null	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset >= standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < dayOfMonth	1
org.joda.time.chrono.GregorianChronology#void#assemble#?,Fields#191	getBase() == null	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end > instant	0
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek < minDaysInFirstWeek	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1530	i >= 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())== 0	1
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset < hours	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))== 0	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerMonth#?#237	(MILLIS_PER_MONTH)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#506	!(isSupported(f=chrono.clockhourOfDay()))	1
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))!= 0	0
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMinimumValue#?#87	(0)== 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))> 0	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)< 0	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#63	size > 1	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == monthToUse	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse >= months	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next > instant	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end <= start	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset == maxValue	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset > offset	1
org.joda.time.DurationFieldType$StandardDurationFieldType#?#StandardDurationFieldType#?,String,byte#260	iOrdinal < ordinal	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next == instant	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#503	!(isSupported(f=chrono.hourOfDay()))	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])<= 0	0
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek >= minDaysInFirstWeek	0
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	(getInfo(instant).getOffset(instant))< 0	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < thisYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	iMode == 'w'	1
org.joda.time.field.RemainderDateTimeField#int#getMinimumValue#?#148	(0)< 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#472	isSupported(f=chrono.years())	0
org.joda.time.DurationFieldType$StandardDurationFieldType#?#StandardDurationFieldType#?,String,byte#260	iOrdinal > ordinal	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)<= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#54	iLeapMonth != leapMonth	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))>= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)<= 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#204	iNextInfo == null || millis < iNextInfo.iPeriodStart	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#54	iLeapMonth == leapMonth	0
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType#?#StandardDateTimeFieldType#?,String,byte,DurationFieldType,DurationFieldType#445	iOrdinal == ordinal	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= millisOfDay	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == monthOfYear	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#451	isSupported(f=chrono.minutes())	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset >= maxValue	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next >= instant	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#500	isSupported(f=chrono.minuteOfDay())	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)== 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax < j	0
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])<= 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)> 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin >= max	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))>= 0	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears > year	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] != size	0
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#204	id == null	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	isLeapYear(thisYear)	1
org.joda.time.field.PreciseDurationDateTimeField#?#PreciseDurationDateTimeField#?,DateTimeFieldType,DurationField#50	!unit.isPrecise()	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#515	isSupported(f=chrono.halfdayOfDay())	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears < year	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < monthOfYear	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 >= instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode >= mode	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= dayOfWeek	0
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#70	iDivisor > divisor	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] != i	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerMonth#?#237	(MILLIS_PER_MONTH)< 0	1
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#139	isLeapYear(year)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index < size	0
org.joda.time.tz.DefaultNameProvider#String[]#getNameSet#?,Locale,String,String#53	locale == null || id == null || nameKey == null	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)== 0	1
org.joda.time.field.OffsetDateTimeField#int#getMinimumValue#?#174	(iMin)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == dayOfWeek	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#527	!(isSupported(f=chrono.weekOfWeekyear()))	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == months	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	iAdvance	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax < offset	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] <= poolSize	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end == instant	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax > maxValue	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < millisOfDay	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#63	!(unitField == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek >= dayOfMonth	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax > max	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse != thisYear	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next != instant	0
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next > instant	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax >= max	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#772	iFirstDayMillis >= firstDayMillis	0
org.joda.time.field.RemainderDateTimeField#int#getMaximumValue#?#158	(iDivisor - 1)< 0	1
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	(iChronology.getYear(instant))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end < instant	1
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#49	!(cCache == null)	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next >= instant	0
org.joda.time.field.RemainderDateTimeField#int#getMinimumValue#?#148	(0)!= 0	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin < minValue	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	(MIN_DAYS_PER_MONTH_ARRAY[month - 1])>= 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#145	id.equals(obj)	0
org.joda.time.field.RemainderDateTimeField#int#getMaximumValue#?#158	(iDivisor - 1)>= 0	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax >= maxValue	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset != minValue	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))> 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset < minutes	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)< 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax <= divisor	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next < instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == monthOfYear	1
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))< 0	1
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	zone instanceof CachedDateTimeZone	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear >= year	0
org.joda.time.field.RemainderDateTimeField#?#RemainderDateTimeField#?,DateTimeField,DateTimeFieldType,int#59	rangeField == null	1
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#690	id == null	1
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay > dayOfWeek	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax != maxValue	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)>= 0	0
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#167	!(next == periodStart || next > end)	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))<= 0	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYear#?#229	(MILLIS_PER_YEAR)!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax == max	0
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset > hours	0
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#152	info == null || (int)((info.iPeriodStart >> 32)) != period	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= millisOfDay	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin == j	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#518	!(isSupported(f=chrono.dayOfWeek()))	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))> 0	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin <= offset	0
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	(0)< 0	1
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear <= year	0
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMinimumValue#?#87	(0)<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#536	!(isSupported(f=chrono.monthOfYear()))	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start == instant	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start != instant	0
org.joda.time.tz.DefaultNameProvider#String[]#getNameSet#?,Locale,String,String#69	strings != null && strings.length == 5 && id.equals(strings[0])	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	isSupported(f=chrono.clockhourOfHalfday())	0
org.joda.time.DateTimeZone#String#getName#?,long,Locale#792	name != null	0
org.joda.time.field.OffsetDateTimeField#int#getMaximumValue#?#183	(iMax)== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)< 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)<= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#500	!(isSupported(f=chrono.minuteOfDay()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next >= instant	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#loadZoneData#?,String#236	in != null	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#533	isSupported(f=chrono.weekyearOfCentury())	0
org.joda.time.field.OffsetDateTimeField#int#getMaximumValue#?#183	(iMax)> 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	(getDayOfMonth(millis,year,month))== 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#180	!(isLeapYear(thisYear))	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] != size	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear < year	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#451	!(isSupported(f=chrono.minutes()))	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)== 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index <= size	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	end != instant	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#320	iBase != null	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis <= saveMillis	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1540	!(iTailZone == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < dayOfWeek	0
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#54	iLeapMonth < leapMonth	1
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)== 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax != max	1
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#200	!(iLoader != null)	1
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	(MAX_YEAR)== 0	1
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset < hours	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < yearToUse	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#530	!(isSupported(f=chrono.weekyear()))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))== 0	1
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	((value > 28 ? getDaysInMonthMax(instant) : 28))!= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))< 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)<= 0	1
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	(1)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > dayOfMonth	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	isLeapYear(year)	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next == instant	1
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset == minutes	0
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMaximumValue#?#97	(getWrappedField().getMaximumValue())>= 0	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerMonth#?#237	(MILLIS_PER_MONTH)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] <= i	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	dayOfYear > (31 + 28)	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	(iChronology.getDayOfMonth(instant))!= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 != instant	0
org.joda.time.tz.CachedDateTimeZone$Info#String#getNameKey#?,long#195	iNameKey == null	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1359	!(poolSize < 256)	1
org.joda.time.field.RemainderDateTimeField#?#RemainderDateTimeField#?,DateTimeField,DateTimeFieldType,int#66	iDivisor > divisor	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)<= 0	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)<= 0	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax == min	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < thisYear	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index != poolSize	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index == size	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#488	!(isSupported(f=chrono.millisOfDay()))	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())!= 0	0
org.joda.time.field.OffsetDateTimeField#int#getMinimumValue#?#174	(iMin)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next != instant	0
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType#?#StandardDateTimeFieldType#?,String,byte,DurationFieldType,DurationFieldType#445	iOrdinal != ordinal	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYear#?#229	(MILLIS_PER_YEAR)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] <= size	1
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index > size	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin != i	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end <= instant	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#578	next == instant	1
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))> 0	0
org.joda.time.field.DecoratedDateTimeField#?#DecoratedDateTimeField#?,DateTimeField,DateTimeFieldType#55	field == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear >= dayOfMonth	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1371	in.readBoolean()	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != dayOfWeek	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#575	next <= instant	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > months	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek < dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] == size	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index >= size	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next != instant	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset != maxValue	0
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#62	value < 10	0
org.joda.time.field.ImpreciseDateTimeField#?#ImpreciseDateTimeField#?,DateTimeFieldType,long#56	iUnitMillis <= unitMillis	0
org.joda.time.field.DecoratedDurationField#?#DecoratedDurationField#?,DurationField,DurationFieldType#53	!(field == null)	0
org.joda.time.field.OffsetDateTimeField#int#getMaximumValue#?#183	(iMax)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next < instant	0
org.joda.time.field.RemainderDateTimeField#?#RemainderDateTimeField#?,DateTimeField,DateTimeFieldType,int#54	!(divisor < 2)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth >= millisOfDay	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#535	daysSince19700101 > instant	1
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#211	!(zone != null)	1
org.joda.time.chrono.BasicChronology#?#BasicChronology#?,Chronology,Object,int#138	iMinDaysInFirstWeek != minDaysInFirstWeek	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	(instant)> 0	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] == size	1
org.joda.time.chrono.BasicChronology#DateTimeZone#getZone#?#143	(base=getBase()) != null	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin >= j	1
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#196	!(iFileDir != null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek != dayOfWeek	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next <= instant	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags < flags	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next < instant	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax <= i	1
org.joda.time.field.ScaledDurationField#?#ScaledDurationField#?,DurationField,DurationFieldType,int#48	!(scalar == 0 || scalar == 1)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#53	iMax < leapMonth	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next > instant	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset == minValue	1
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index != i	0
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	!(diff >= DateTimeConstants.MILLIS_PER_DAY * 365L)	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax > j	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#726	daysToAdd == dayOfWeek	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))> 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset == hours	1
org.joda.time.field.PreciseDurationField#?#PreciseDurationField#?,DurationFieldType,long#44	iUnitMillis >= unitMillis	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())< 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#475	!(isSupported(f=chrono.centuries()))	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart != periodStart	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))== 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#209	(in.readLong())<= 0	0
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#loadZoneData#?,String#236	!(in != null)	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())<= 0	1
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMinimumValue#?#93	(1)!= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	!(instant >= 0)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] == i	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay == dayOfMonth	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	(v * (30 * 60000L))> 0	0
org.joda.time.field.PreciseDurationField#?#PreciseDurationField#?,DurationFieldType,long#44	iUnitMillis != unitMillis	1
org.joda.time.tz.CachedDateTimeZone$Info#String#getNameKey#?,long#194	iNextInfo == null || millis < iNextInfo.iPeriodStart	0
org.joda.time.chrono.AssembledChronology#void#setFields#?#385	iBaseFlags <= flags	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	next != instant	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#564	next > instant	0
org.joda.time.DateTimeZone#String#getName#?,long,Locale#792	!(name != null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear == dayOfWeek	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.field.ScaledDurationField#?#ScaledDurationField#?,DurationField,DurationFieldType,int#51	iScalar == scalar	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#70	iDivisor <= divisor	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))== 0	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#567	iDayOfWeek == 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth == dayOfMonth	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	(sum)> 0	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset <= maxValue	0
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next != instant	0
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	(iUnitMillis)< 0	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end <= start	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#565	next <= instant	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax == maxValue	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1530	!(i >= 0)	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax < minValue	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))>= 0	0
org.joda.time.chrono.BasicYearDateTimeField#int#getMaximumValue#?#119	(iChronology.getMaxYear())<= 0	1
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#690	!(id == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay <= monthOfYear	1
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	(12)>= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)<= 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != months	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index < i	0
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))== 0	1
org.joda.time.DurationFieldType$StandardDurationFieldType#?#StandardDurationFieldType#?,String,byte#260	iOrdinal != ordinal	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next <= instant	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#445	isSupported(f=chrono.millis())	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears >= year	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index < poolSize	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= thisMonth	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#75	!(offset == 0)	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset <= offset	0
org.joda.time.DateTimeZone#String#getShortName#?,long,Locale#748	!(nameKey == null)	0
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType#?#StandardDateTimeFieldType#?,String,byte,DurationFieldType,DurationFieldType#445	iOrdinal <= ordinal	0
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))<= 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	diff >= DateTimeConstants.MILLIS_PER_DAY * 365L	1
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	(getDayOfMonth(millis,year,month))>= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth < monthOfYear	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin < j	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis >= millis	1
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMaximumValue#?#97	(getWrappedField().getMaximumValue())> 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#475	isSupported(f=chrono.centuries())	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))!= 0	0
org.joda.time.field.RemainderDateTimeField#?#RemainderDateTimeField#?,DateTimeField,DateTimeFieldType,int#66	iDivisor < divisor	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	(set(instant,newYear))== 0	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#204	!(iNextInfo == null || millis < iNextInfo.iPeriodStart)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] == poolSize	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#577	next == instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next <= instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	iMillisOfDay != monthOfYear	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#113	monthToUse >= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	((int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#719	daysToAdd != 0	0
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)<= 0	1
org.joda.time.chrono.GregorianChronology#GregorianChronology#getInstance#?,DateTimeZone,int#111	!(zone == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)< 0	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax != offset	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] >= poolSize	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth > monthOfYear	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse <= months	1
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	(FieldUtils.safeAdd(instant,value))<= 0	1
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	!(years == 0)	0
org.joda.time.DurationFieldType$StandardDurationFieldType#?#StandardDurationFieldType#?,String,byte#260	iOrdinal == ordinal	0
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	((1970L * MILLIS_PER_YEAR) / 2)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index == i	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax >= j	1
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#49	cCache == null	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	(iTailZone.getOffset(instant))< 0	1
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset > minutes	1
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#70	iDivisor < divisor	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#String#getNameKey#?,long#1521	iTailZone == null	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#576	next > instant	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < dayOfWeek	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)== 0	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#54	iLeapMonth >= leapMonth	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#542	isSupported(f=chrono.yearOfEra())	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start == instant	1
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#readFrom#?,InputStream,String#95	in instanceof DataInput	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#53	iMax > leapMonth	0
org.joda.time.field.PreciseDurationDateTimeField#?#PreciseDurationDateTimeField#?,DateTimeFieldType,DurationField#50	!(!unit.isPrecise())	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse > yearToUse	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)> 0	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#81	minValue < (field.getMinimumValue() + offset)	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)>= 0	0
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))>= 0	0
org.joda.time.chrono.GregorianChronology#void#assemble#?,Fields#191	!(getBase() == null)	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))>= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] > poolSize	0
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	((year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY)== 0	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#497	isSupported(f=chrono.minuteOfHour())	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	((start > end) ? end : start)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth <= monthOfYear	0
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	iSaveMillis < saveMillis	1
org.joda.time.field.PreciseDurationField#?#PreciseDurationField#?,DurationFieldType,long#44	iUnitMillis == unitMillis	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#454	!(isSupported(f=chrono.hours()))	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#53	iMax <= leapMonth	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)< 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	instant >= 0	0
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	dateMillis < millis	0
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	(iRange - 1)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	!(iMode == 'w')	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#?#BasicMonthOfYearDateTimeField#?,BasicChronology,int#53	iMax == leapMonth	1
org.joda.time.DateTimeZone#String#printOffset#?,int#646	offset >= hours	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	!(isLeapYear(year))	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))< 0	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin > offset	0
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#551	instant >= 0	0
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	(FieldUtils.safeAdd(instant,addition))< 0	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	end < start	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1206	start < instant	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)<= 0	1
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#179	!(dayOfYear > (31 + 28))	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#460	!(isSupported(f=chrono.days()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#563	next > instant	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#86	!(maxValue > (field.getMaximumValue() + offset))	1
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	(MIN_YEAR)!= 0	0
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	(instant + (value - get(instant)) * iUnitMillis)>= 0	0
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	(w * 1000L)!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin == i	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == thisMonth	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#503	isSupported(f=chrono.hourOfDay())	0
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == months	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#509	iMode != mode	1
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	(iChronology.setYear(instant,year))< 0	1
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset != hours	0
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	(sum)<= 0	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	iBase == null	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse < months	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	!(iDayOfMonth >= 0)	0
org.joda.time.field.RemainderDateTimeField#int#getMaximumValue#?#158	(iDivisor - 1)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > dayOfMonth	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse != monthToUse	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == dayOfMonth	1
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#472	!(isSupported(f=chrono.years()))	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))> 0	0
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#79	iOffset == offset	0
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	!(getBase().getZone() == DateTimeZone.UTC)	1
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType#?#StandardDateTimeFieldType#?,String,byte,DurationFieldType,DurationFieldType#445	iOrdinal > ordinal	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	(iOfYear.next(instant,standardOffset,saveMillis))!= 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse < months	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	instant >= 0	0
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	((int)((instant / getUnitMillis()) % iRange))>= 0	0
org.joda.time.tz.CachedDateTimeZone$Info#String#getNameKey#?,long#195	!(iNameKey == null)	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index > i	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset > standardOffset	1
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	(getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#String#getNameKey#?,long#1515	i < transitions.length	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin != minValue	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)<= 0	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	(year)<= 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1576	!(iTailZone == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear > dayOfWeek	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax != j	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	(datePart + timePart)> 0	0
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#205	!(in == null)	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])!= 0	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#533	!(isSupported(f=chrono.weekyearOfCentury()))	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	(next)> 0	0
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	(MILLIS_PER_YEAR / 2)!= 0	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1223	instant > 0 && end < 0	1
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	(iUnitMillis)< 0	1
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	!(iBase == null)	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)!= 0	0
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	(iChronology.getDayOfWeek(instant))>= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#78	iMin <= max	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	i < transitions.length	1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1311	start <= instant	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	(iChronology.getDaysInMonthMaxForSet(instant,value))== 0	1
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#196	(v * 60000L)< 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))< 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse == thisYear	0
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#214	(value < lowerBound) || (value > upperBound)	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#86	maxValue > (field.getMaximumValue() + offset)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#485	!(isSupported(f=chrono.millisOfSecond()))	1
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#50	value < 0	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#82	iMin < offset	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek == millisOfDay	1
org.joda.time.DateTimeZone#String#getShortName#?,long,Locale#748	nameKey == null	1
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)== 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear <= millisOfDay	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	monthToUse == yearToUse	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#512	iDayOfWeek <= dayOfMonth	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#544	(1 + (int)((daysSince19700101 + 3) % 7))>= 0	0
org.joda.time.field.PreciseDateTimeField#?#PreciseDateTimeField#?,DateTimeFieldType,DurationField,DurationField#65	iRange < 2	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] < size	1
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMinimumValue#?#93	(1)<= 0	1
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#145	!(id.equals(obj))	1
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	(getDurationField().add(instant,value))!= 0	0
org.joda.time.field.DividedDateTimeField#?#DividedDateTimeField#?,DateTimeField,DateTimeFieldType,int#79	iMax != divisor	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	(instant)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1583	(iTailZone.nextTransition(instant))!= 0	0
org.joda.time.field.OffsetDateTimeField#int#getMinimumValue#?#174	(iMin)> 0	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	(instant)!= 0	0
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset <= hours	1
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	diff < 0	1
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear != dayOfMonth	0
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	(MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])< 0	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	wallOffsets[i] < i	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1360	index <= i	0
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	iStandardOffset == standardOffset	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#510	iMonthOfYear < dayOfMonth	1
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	!(instant >= 0)	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#String#getNameKey#?,long#1521	!(iTailZone == null)	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#463	!(isSupported(f=chrono.weeks()))	1
org.joda.time.DateTimeZone#String#printOffset#?,int#641	offset >= hours	0
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#524	!(isSupported(f=chrono.dayOfYear()))	1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1356	standardOffsets[i] < poolSize	1
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	(iOffset)!= 0	0
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	iYear == year	0
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))== 0	1
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))< 0	1
org.joda.time.DateTimeZone#String#getName#?,long,Locale#788	nameKey == null	1
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	iPeriodStart == periodStart	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#511	iDayOfMonth != dayOfWeek	0
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	(getYearInfo(year).iFirstDayMillis)!= 0	0
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	(1)< 0	1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	(iSaveMillis)> 0	0
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#114	yearToUse >= thisMonth	0
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	iDayOfMonth >= 0	1
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#87	iMax == minValue	1
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMaximumValue#?#97	(getWrappedField().getMaximumValue())== 0	1
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#211	leapYears == year	1
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	(instant + (value - get(instant)) * iUnitMillis)>= 0	0