line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#188	0.33333333333333337	0.33333333333333337	0.6666666666666667	dx2[i] >= r	GT
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#325	0.25	0.33333333333333337	0.5833333333333334	!(distance < minDistance)	_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#85	0.25	0.25	0.44999999999999996	point[i] != otherPoint[i]	_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#?#KMeansPlusPlusClusterer#?,Random#69	0.33333333333333337	0.0	0.33333333333333337		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#cluster#?,Collection<T>,int,int#134	0.33333333333333337	0.0	0.33333333333333337		_
org.apache.commons.math.stat.clustering.Cluster#T#getCenter#?#71	0.25	0.0	0.25		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#?#KMeansPlusPlusClusterer#?,Random,EmptyClusterStrategy#79	0.25	0.0	0.25		_
org.apache.commons.math.stat.clustering.Cluster#void#addPoint#?,T#55	0.25	0.0	0.25		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#void#assignPointsToClusters#?,Collection<Cluster<T>>,Collection<T>#148	0.25	0.0	0.25		_
org.apache.commons.math.stat.clustering.Cluster#?#Cluster#?,T#46	0.25	0.0	0.25		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	0.19999999999999996	0.0	0.19999999999999996		_
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1874	0.16666666666666663	0.0	0.16666666666666663		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#?#EuclideanIntegerPoint#?,int[]#44	0.125	0.0	0.125		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#int[]#getPoint#?#52	0.125	0.0	0.125		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.0020790020790020236	0.0	0.0020790020790020236		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1098	0.0	0.0	0.0	!(in[0] == 0.0)	_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1766	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1168	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1832	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1847	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1734	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1196	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1061	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1037	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1070	0.0	0.0	0.0		_
