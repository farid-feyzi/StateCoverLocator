line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#87	1.0	0.0	0.8		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#751	0.5	0.5	0.5	negccov < negminresidualvariance	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#583	0.5	0.5	0.4		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#253	0.33333333333333337	0.0	0.2666666666666667		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#932	0.25	0.33333333333333337	0.2666666666666667	res[i] <= diff	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#246	0.33333333333333337	0.0	0.2666666666666667		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#956	0.25	0.25	0.25	!(i < x.length)	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1018	0.25	0.25	0.25	!(x[i] > 1.0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1038	0.25	0.25	0.25	(isMinimize ? penalty : -penalty)>= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#827	0.05882352941176472	1.0	0.24705882352941178	vals[i] == val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#970	0.25	0.25	0.2		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#541	0.16666666666666663	0.5	0.17333333333333328	!(Double.isInfinite(boundaries[1][i] - boundaries[0][i]))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#872	0.05882352941176472	0.33333333333333337	0.11372549019607846	(Double.compare(value,o.value))== 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#314	0.038461538461538436	0.33333333333333337	0.09743589743589742	this.lambda == checkFeasableCount	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#115	0.09090909090909094	0.09090909090909094	0.07972027972027969	!(v > hi)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1340	0.0625	0.0625	0.0625	inverse[indices[i]] >= i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1141	0.0625	0.0625	0.0625	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1110	0.0625	0.0625	0.0625	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#789	0.0625	0.0625	0.0625	ccov1 + ccovmu + negccov > 0 && (iterations % 1. / (ccov1 + ccovmu + negccov) / dimension / 10.) < 1.	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1351	0.0625	0.0625	0.0625	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1159	0.0625	0.0625	0.0625	d[0][c] == sum	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#667	0.05882352941176472	0.06666666666666665	0.06039215686274511	!(hsig)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1194	0.05882352941176472	0.05882352941176472	0.05882352941176472	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1220	0.05882352941176472	0.05882352941176472	0.05882352941176472	r < m	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1050	0.05882352941176472	0.05882352941176472	0.05882352941176472	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1206	0.05882352941176472	0.05882352941176472	0.05882352941176472	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1066	0.05882352941176472	0.05882352941176472	0.05882352941176472	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1312	0.05882352941176472	0.05882352941176472	0.05882352941176472	!(max < m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#1006	0.05882352941176472	0.05882352941176472	0.05882352941176472	this.valueRange <= valueRange	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1096	0.05882352941176472	0.05882352941176472	0.05882352941176472	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1247	0.05882352941176472	0.05882352941176472	0.05882352941176472	c < m * cd	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#867	0.05882352941176472	0.05882352941176472	0.05882352941176472	this.index >= index	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1325	0.05882352941176472	0.05882352941176472	0.05882352941176472	r < m.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1080	0.05882352941176472	0.05882352941176472	0.05882352941176472	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1170	0.05882352941176472	0.05882352941176472	0.05882352941176472	m.getColumnDimension() == 1	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#840	0.05882352941176472	0.05882352941176472	0.05882352941176472	i < doubles.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1295	0.05882352941176472	0.05882352941176472	0.05882352941176472	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1280	0.05882352941176472	0.05882352941176472	0.05882352941176472	max < e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1376	0.05882352941176472	0.05882352941176472	0.05882352941176472	r < size	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1266	0.05882352941176472	0.05882352941176472	0.05882352941176472	value == start	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1125	0.05882352941176472	0.05882352941176472	0.05882352941176472	r < m.getRowDimension()	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#344	0.05555555555555558	0.05555555555555558	0.05555555555555558	!(i < nRows)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#115	0.052631578947368474	0.052631578947368474	0.05263157894736848	row < rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#84	0.04761904761904767	0.04761904761904767	0.04761904761904767	row < rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#254	0.04761904761904767	0.04761904761904767	0.04761904761904767	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) < 0)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#469	0.04761904761904767	0.04761904761904767	0.04761904761904767	i < nRows	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#498	0.05882352941176472	0.0	0.04705882352941178		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#917	0.05882352941176472	0.0	0.04705882352941178		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#942	0.05882352941176472	0.0	0.04705882352941178		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1233	0.05882352941176472	0.0	0.04705882352941178		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#130	0.045454545454545414	0.045454545454545414	0.045454545454545414	col < columnCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.05555555555555558	0.0	0.04444444444444447		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.04166666666666663	0.04166666666666663	0.04166666666666663	i < diagonal.length	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#226	0.040000000000000036	0.040000000000000036	0.040000000000000036	!(k < m)	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#523	0.038461538461538436	0.038461538461538436	0.038461538461538436	!(vector.getDimension() != nRows)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#711	0.022727272727272707	0.09999999999999998	0.0377777777777778	tmp[j] > maxAbsoluteValue	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#99	0.03703703703703709	0.03703703703703709	0.03703703703703709	Double.isNaN(nextGaussian)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.033333333333333326	0.033333333333333326	0.033333333333333326	(evaluations.getMaximalCount())>= 0	_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#548	0.040000000000000036	0.0	0.03200000000000003		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#288	0.038461538461538436	0.0	0.03076923076923075		_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.02857142857142858	0.03125	0.029107142857142866	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.02777777777777779	0.02857142857142858	0.02793650793650795	(maximalCount)> 0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#66	0.03448275862068961	0.0	0.027586206896551693		_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#247	0.02631578947368418	0.027027027027026973	0.026458036984352742	y >= mtNext	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	0.025000000000000022	0.025000000000000022	0.025000000000000022	!(i < nRows)	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.024390243902439046	0.024390243902439046	0.02348269994327854	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.024390243902439046	0.024390243902439046	0.02348269994327854	!(i < rows)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.021739130434782594	0.021739130434782594	0.021739130434782594	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.021276595744680882	0.021276595744680882	0.021276595744680882	cachedQt == null	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.02631578947368418	0.0	0.021052631578947347		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.02631578947368418	0.0	0.021052631578947347		_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.020408163265306145	0.020408163265306145	0.020408163265306145	(0)>= 0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.020408163265306145	0.020408163265306145	0.020081632653061243	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.019607843137254943	0.019607843137254943	0.019607843137254943	i < nCols	_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.024390243902439046	0.0	0.019512195121951237		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.023809523809523836	0.0	0.01904761904761907		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.023809523809523836	0.0	0.01904761904761907		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.023255813953488413	0.0	0.018604651162790732		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#252	0.020408163265306145	0.0	0.016326530612244917		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.006756756756756799	0.04761904761904767	0.014929214929214975	(visitor.end())!= 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.006711409395973145	0.04761904761904767	0.014892937040588052	(walkInRowOrder(visitor))> 0	_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#81	0.018181818181818188	0.0	0.01454545454545455		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.013513513513513487	0.013513513513513487	0.013513513513513488	((high | low) * 0x1.0p-52d)>= 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.013333333333333308	0.013513513513513487	0.013369369369369345	(function.value(point))> 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.016393442622950838	0.0	0.013114754098360671		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.012195121951219523	0.012195121951219523	0.012195121951219523	!(f == null)	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.0117647058823529	0.013157894736842146	0.01204334365325075	(relativeThreshold)> 0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.011904761904761862	0.011904761904761862	0.011904761904761862	(absoluteThreshold)> 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.01449275362318836	0.0	0.011594202898550688		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.011363636363636354	0.011363636363636354	0.011363636363636354	i < nSum	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#101	0.011235955056179803	0.011235955056179803	0.011235955056179803	!(row < rowCount)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#116	0.011235955056179803	0.011235955056179803	0.011235955056179803	r < nRows	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.013333333333333308	0.0	0.010666666666666647		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.010526315789473717	0.010309278350515427	0.010482908301682059	(sinQ(xa,xb))> 0	_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.012658227848101222	0.0	0.010126582278480978		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.012195121951219523	0.0	0.009756097560975618		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1197	0.006369426751592355	0.021739130434782594	0.009443367488230403	yb > ab	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.0092592592592593	0.0092592592592593	0.0092592592592593	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.011494252873563204	0.0	0.009195402298850564		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.008849557522123908	0.008849557522123908	0.008849557522123908	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.00952380952380949	0.0	0.007619047619047592		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.00952380952380949	0.0	0.007619047619047592		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.00917431192660545	0.0	0.00733944954128436		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.006896551724137945	0.006802721088435382	0.006877785596997433	(-cosQ(xa,xb))!= 0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.006535947712418277	0.006535947712418277	0.006535947712418277	(0)== 0	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.007633587786259555	0.0	0.006106870229007644		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1800	0.0037037037037036535	0.01388888888888884	0.00574074074074069	b < cosEpsB	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.005494505494505475	0.005494505494505475	0.005494505494505475	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.006802721088435382	0.0	0.005442176870748306		_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.006711409395973145	0.0	0.005369127516778516		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.005235602094240788	0.005235602094240788	0.005235602094240789	!(i < nRows)	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3806	0.004424778761061954	0.005681818181818232	0.00467618664521321	remB == a	_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.005780346820809301	0.0	0.004624277456647441		_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.004424778761061954	0.005102040816326481	0.004560231172114859	(finalRemB)>= 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#145	0.005555555555555536	0.0	0.004444444444444429		_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.004424778761061954	0.004424778761061954	0.004424778761061954	(finalK)> 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.004424778761061954	0.004424778761061954	0.004424778761061954	(finalRemA)!= 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#254	0.005434782608695676	0.0	0.004347826086956541		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.005347593582887722	0.0	0.004278074866310178		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.0052631578947368585	0.0	0.004210526315789487		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0037453183520599342	0.005780346820809301	0.004152324045809808	(data[row][column])< 0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1821	0.0037174721189591198	0.005847953216374324	0.004143568338442161	b == pi2b	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.004016064257028162	0.0043290043290042934	0.004078652271423388	(data[index])> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.0038610038610038533	0.0038610038610038533	0.0038610038610038533	data[row][column] == value	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#290	0.0038610038610038533	0.0038610038610038533	0.0038610038610038533	i < data.length	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.0034129692832765013	0.00497512437810943	0.0037254003022430876	p < x	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.0034129692832765013	0.004310344827586188	0.0035924443921384387	p <= x	_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#47	0.004385964912280715	0.0	0.0035087719298245723		_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.0029761904761904656	0.005050505050505083	0.003391053391053389	(log(x,null))< 0	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0033112582781457123	0.0033222591362126463	0.0033134584497590993	(data.length)> 0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3523	0.0029761904761904656	0.004385964912280715	0.0032581453634085156	(a)> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.0038910505836575737	0.0	0.003112840466926059		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#547	0.0038610038610038533	0.0	0.0030888030888030827		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#62	0.0037453183520599342	0.0	0.0029962546816479476		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0028818443804035088	0.0028818443804035088	0.0028818443804035088	((data == null) ? 0 : data.length)> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.002873563218390829	0.002873563218390829	0.002873563218390829	(((data == null) || (data[0] == null)) ? 0 : data[0].length)> 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.002457002457002422	0.002457002457002422	0.002457002457002422	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.0024154589371980784	0.0024154589371980784	0.0024154589371980784	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.002409638554216831	0.002409638554216831	0.002409638554216831	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#389	0.002624671916010457	0.0	0.0020997375328083655		_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.002044989775051076	0.002044989775051076	0.002044989775051076	maximalCount <= max	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.0018214936247723523	0.0029325513196480912	0.0020437051637475	((x < 0l) ? -x : x)== 0	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.0019493177387914784	0.001953125	0.0019500791910331827	!(++count > maximalCount)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#337	0.0019011406844106071	0.001953125	0.0019115375475284857	!(yInt < 0)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.001908396946564861	0.0019120458891013214	0.0019091267350721532	((a <= b) ? a : b)!= 0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0017825311942959443	0.0017825311942959443	0.0017825311942959443	!(cb == null)	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.0011376564277588708	0.003389830508474523	0.0015880912439020013	(Math.sqrt(a))<= 0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.001984126984126977	0.0	0.0015873015873015817		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.001890359168241984	0.0	0.0015122873345935874		_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0014641288433382416	0.001468428781204123	0.001464988830911418	!(o == null)	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.0017857142857142794	0.0	0.0014285714285714236		_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	8.539709649871829E-4	0.001179245283018826	9.190258285935116E-4	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)== 0	_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#205	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#151	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#107	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#109	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#140	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#54	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
