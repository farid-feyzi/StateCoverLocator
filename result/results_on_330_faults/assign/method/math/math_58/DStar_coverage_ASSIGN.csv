line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#390	0.047619047619047616	Infinity	Infinity	lmPar >= xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#533	0.06666666666666667	1.0	1.0526315789473684	parl > dxNorm	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#48	0.05	0.5	0.55	this.weight == x	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#183	0.5	0.0	0.5		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#272	0.5	0.0	0.5		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#183	0.5	0.0	0.5		_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#121	0.2	0.0	0.2		GT
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#boolean#isBetween#?,double,double,double#291	0.2	0.0	0.2		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#Comparator<WeightedObservedPoint>#createWeightedObservedPointComparator#?#302	0.2	0.0	0.2		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#199	0.2	0.0	0.2		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.2	0.0	0.2		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#147	0.2	0.0	0.2		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#159	0.2	0.0	0.2		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#132	0.16666666666666666	0.0	0.16666666666666666		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#161	0.16666666666666666	0.0	0.16666666666666666		_
org.apache.commons.math.optimization.fitting.GaussianFitter#?#GaussianFitter#?,DifferentiableMultivariateVectorialOptimizer#68	0.14285714285714285	0.0	0.14285714285714285		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#688	0.05	0.08333333333333333	0.13333333333333333	cos > dpj	_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double#67	0.1111111111111111	0.0	0.1111111111111111		_
org.apache.commons.math.optimization.fitting.CurveFitter#WeightedObservedPoint[]#getObservations#?#100	0.1	0.0	0.1		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#828	0.022727272727272728	0.07142857142857142	0.09270516717325228	weightedResidualJacobian[j][permutation[k + dk]] >= ak2	_
org.apache.commons.math.analysis.function.Gaussian#double#value#?,double,double,double#197	0.08333333333333333	0.0	0.08333333333333333		_
org.apache.commons.math.exception.NotStrictlyPositiveException#?#NotStrictlyPositiveException#?,Number#38	0.07142857142857142	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#?#TheoreticalValuesFunction#?,ParametricUnivariateRealFunction#178	0.05263157894736842	0.0	0.05263157894736842		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,ParametricUnivariateRealFunction,double[]#126	0.05263157894736842	0.0	0.05263157894736842		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getX#?#64	0.05263157894736842	0.0	0.05263157894736842		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getWeight#?#57	0.05263157894736842	0.0	0.05263157894736842		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getY#?#71	0.05263157894736842	0.0	0.05263157894736842		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#203	0.05263157894736842	0.0	0.05263157894736842		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#MultivariateMatrixFunction#jacobian#?#183	0.05263157894736842	0.0	0.05263157894736842		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#153	0.05263157894736842	0.0	0.05263157894736842		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#212	0.0196078431372549	0.03125	0.0508578431372549	this.orthoTolerance == parRelativeTolerance	_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Number,Number,Number#46	0.05	0.0	0.05		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double,double#80	0.05	0.0	0.05		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#52	0.047619047619047616	0.0	0.047619047619047616		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#849	0.020833333333333332	0.023255813953488372	0.0440891472868217	y[i] < gamma	_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Number,Number,boolean#52	0.043478260869565216	0.0	0.043478260869565216		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#142	0.014492753623188406	0.02702702702702703	0.041519780650215436	index < i	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#152	0.03225806451612903	0.0	0.03225806451612903		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#115	0.014492753623188406	0.014705882352941176	0.02919863597612958	weightedResidualJacobian[i][j] < wi	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#246	0.014285714285714285	0.014285714285714285	0.02857142857142857	cols <= maxEval	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#812	0.004545454545454545	0.015151515151515152	0.018623737373737376	result < epsilon	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#85	0.015873015873015872	0.0	0.015873015873015872		_
org.apache.commons.math.optimization.VectorialPointValuePair#double[]#getValueRef#?#97	0.015625	0.0	0.015625		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#67	0.015384615384615385	0.0	0.015384615384615385		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#47	0.014492753623188406	0.0	0.014492753623188406		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getTargetRef#?#165	0.014492753623188406	0.0	0.014492753623188406		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getWeightRef#?#171	0.014492753623188406	0.0	0.014492753623188406		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#ConvergenceChecker<VectorialPointValuePair>#getConvergenceChecker#?#88	0.014285714285714285	0.0	0.014285714285714285		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#132	0.014285714285714285	0.0	0.014285714285714285		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#107	0.014285714285714285	0.0	0.014285714285714285		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?#62	0.013888888888888888	0.0	0.013888888888888888		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?,ConvergenceChecker<VectorialPointValuePair>#68	0.013888888888888888	0.0	0.013888888888888888		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3831	0.010869565217391304	0.0	0.010869565217391304		_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.004807692307692308	0.004807692307692308	0.009615384615384616	maximalCount >= max	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#80	0.009523809523809525	0.0	0.009523809523809525		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#73	0.009433962264150943	0.0	0.009433962264150943		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#65	0.008333333333333333	0.0	0.008333333333333333		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#53	0.008333333333333333	0.0	0.008333333333333333		_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.005	0.0	0.005		_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.004901960784313725	0.0	0.004901960784313725		_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3908	0.004081632653061225	0.0	0.004081632653061225		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#50	0.004032258064516129	0.0	0.004032258064516129		_
org.apache.commons.math.util.FastMath#double#exp#?,double#697	0.003663003663003663	0.0	0.003663003663003663		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#46	0.0035842293906810036	0.0	0.0035842293906810036		_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.003205128205128205	0.0	0.003205128205128205		_
org.apache.commons.math.exception.MathIllegalArgumentException#?#MathIllegalArgumentException#?,Localizable,Localizable,Object#44	0.003115264797507788	0.0	0.003115264797507788		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#67	0.002717391304347826	0.0	0.002717391304347826		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.0020833333333333333	0.0	0.0020833333333333333		_
org.apache.commons.math.util.FastMath#double#abs#?,double#3380	0.0015105740181268882	0.0	0.0015105740181268882		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1809	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1038	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1070	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1174	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1185	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1061	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1022	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1000	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1870	0.0	0.0	0.0		_
