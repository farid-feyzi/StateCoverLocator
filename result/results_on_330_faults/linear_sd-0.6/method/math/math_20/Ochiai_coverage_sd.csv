line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#730	1.0	1.0	1.0	negccov != negminresidualvariance	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1012	0.5773502691896258	1.0	0.8309401076758504	penalty < diff	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#851	0.25	1.0	0.7	(Double.compare(value,o.value))== 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#561	1.0	1.0	0.7	lambda <= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#538	0.5	1.0	0.6917662935482247	!(inputSigma != null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#308	0.20412414523193154	1.0	0.6816496580927726	this.lambda <= diagonalOnly	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#911	0.5773502691896258	0.7071067811865475	0.6552041763877788	res[i] < diff	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#994	0.7071067811865475	0.7071067811865475	0.6552041763877788	x[i] > 1.0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#936	0.5773502691896258	0.5773502691896258	0.5773502691896258	res[i] != diff	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#947	0.5773502691896258	0.5773502691896258	0.44641016151377555	boundaries != null && isRepairMode	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#247	1.0	0.0	0.4		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#240	1.0	0.0	0.4		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#112	0.3333333333333333	0.3333333333333333	0.32060453783110543	!(i < dim)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1316	0.2581988897471611	0.2581988897471611	0.2581988897471611	inverse[indices[i]] <= i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1116	0.2581988897471611	0.2581988897471611	0.2581988897471611	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1087	0.2581988897471611	0.2581988897471611	0.2581988897471611	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#787	0.2581988897471611	0.2581988897471611	0.2581988897471611	!(max(diagD) > 1e14 * min(diagD))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1328	0.2581988897471611	0.2581988897471611	0.2581988897471611	reverse[i] < i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1135	0.2581988897471611	0.2581988897471611	0.2581988897471611	d[0][c] == sum	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1170	0.25	0.25	0.25	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1195	0.25	0.25	0.25	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1026	0.25	0.25	0.25	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1182	0.25	0.25	0.25	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1042	0.25	0.25	0.25	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1292	0.25	0.25	0.25	(max)>= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#982	0.25	0.25	0.25	this.valueRange <= valueRange	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1071	0.25	0.25	0.25	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1222	0.25	0.25	0.25	r < n * rd	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#846	0.25	0.25	0.25	this.index >= index	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#805	0.25	0.25	0.25	!(i > 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1058	0.25	0.25	0.25	d[r][c] > e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1301	0.25	0.25	0.25	!(r < m.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1148	0.25	0.25	0.25	i < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#824	0.25	0.25	0.25	i < doubles.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1270	0.25	0.25	0.25	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#646	0.25	0.25	0.25	hsig	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1257	0.25	0.25	0.25	max <= e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1352	0.25	0.25	0.25	!(r < size)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1240	0.25	0.25	0.25	!(r < size)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1102	0.25	0.25	0.25	!(c < cols.length)	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#344	0.24253562503633297	0.24253562503633297	0.24253562503633297	!(i < nRows)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#711	0.15249857033260467	0.30151134457776363	0.24120907566221092	tmp[j] >= maxAbsoluteValue	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#116	0.23570226039551587	0.23570226039551587	0.23570226039551584	col < columnCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#251	0.22941573387056174	0.22941573387056174	0.22941573387056174	i < imagEigenvalues.length	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#130	0.22360679774997896	0.22360679774997896	0.22360679774997894	col < columnCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#85	0.22360679774997896	0.22360679774997896	0.22360679774997894	col < columnCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#469	0.22360679774997896	0.22360679774997896	0.22360679774997894	i < nRows	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.21320071635561041	0.21320071635561041	0.21320071635561041	i < diagonal.length	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.20851441405707477	0.20851441405707477	0.20851441405707477	cachedV == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#527	0.20412414523193154	0.20412414523193154	0.20412414523193154	i < nRows	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#105	0.19611613513818404	0.20412414523193154	0.20092094119443255	random > alpha	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.18569533817705186	0.18569533817705186	0.18569533817705186	(evaluations.getMaximalCount())>= 0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.17149858514250882	0.1796053020267749	0.17636261527306846	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.1690308509457033	0.17149858514250882	0.17051149146378664	(maximalCount)> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#415	0.08304547985373997	0.22360679774997896	0.16738227059148336	(visitor.end())> 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0827605888602368	0.22360679774997896	0.16726831419408209	(walkInRowOrder(visitor))> 0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#259	0.1643989873053573	0.1643989873053573	0.1643989873053573	y > bits	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	0.16012815380508713	0.16012815380508713	0.16012815380508713	!(i < nRows)	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.15811388300841897	0.15811388300841897	0.1573378345604938	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.15811388300841897	0.15811388300841897	0.1573378345604938	!(i < rows)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.14907119849998599	0.14907119849998599	0.14907119849998599	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.14744195615489714	0.14744195615489714	0.14744195615489714	cachedQt == null	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.14586499149789456	0.14586499149789456	0.14586499149789456	(0)<= 0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.14433756729740646	0.14433756729740646	0.14374539752130103	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.1414213562373095	0.1414213562373095	0.1414213562373095	!(i < nCols)	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.11704114719613057	0.11704114719613057	0.11704114719613057	((high | low) * 0x1.0p-52d)> 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.11624763874381928	0.11704114719613057	0.11672374381520606	(function.value(point))> 0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.1091089451179962	0.11547005383792514	0.11292561034995356	(relativeThreshold)>= 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.11180339887498948	0.11180339887498948	0.11180339887498947	!(f == null)	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.10976425998969035	0.10976425998969035	0.10976425998969036	(absoluteThreshold)> 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.1091089451179962	0.1091089451179962	0.1091089451179962	!(i < nSum)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#102	0.10846522890932808	0.10846522890932808	0.10846522890932808	!(col < columnCount)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#116	0.10783277320343841	0.10783277320343841	0.10783277320343841	r < nRows	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.10259783520851541	0.10206207261596577	0.10227637765298563	(sinQ(xa,xb))!= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#492	0.25	0.0	0.1		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#896	0.25	0.0	0.1		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#921	0.25	0.0	0.1		GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1209	0.25	0.0	0.1		_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.09805806756909202	0.09805806756909202	0.09805806756909202	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.24253562503633297	0.0	0.09701425001453319		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.09578262852211514	0.09578262852211514	0.09578262852211514	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1797	0.06097107608496923	0.10050378152592121	0.08469069934954042	c < a	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.08304547985373997	0.0827605888602368	0.08287454525763807	(-cosQ(xa,xb))!= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#282	0.20412414523193154	0.0	0.08164965809277262		_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#549	0.20412414523193154	0.0	0.08164965809277262		_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.08164965809277261	0.08164965809277261	0.08164965809277261	(0)>= 0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#65	0.19245008972987526	0.0	0.07698003589195011		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.07495316889958614	0.07495316889958614	0.07495316889958614	!(data == null || data[0] == null)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1274	0.05643326479831003	0.08606629658238704	0.07421308386875625	lnza >= x	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#527	0.07312724241271307	0.07312724241271307	0.07312724241271307	i < nRows	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3806	0.06666666666666667	0.07559289460184544	0.07202240342777393	remB == a	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#304	0.061662641597820735	0.07692307692307693	0.07081890279297445	(data[row][column])< 0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1821	0.06108472217815261	0.07669649888473704	0.07045178820210327	b == pi2b	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.06666666666666667	0.0716114874039433	0.06963355910903264	(finalRemB)> 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.16666666666666666	0.0	0.06666666666666667		_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.06666666666666667	0.06666666666666667	0.06666666666666667	(finalK)>= 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.06666666666666667	0.06666666666666667	0.06666666666666667	(finalRemA)> 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.16666666666666666	0.0	0.06666666666666667		_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.058520573598065284	0.07088812050083358	0.06594110173972625	p <= x	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.06362847629757777	0.06608186004550898	0.06510050654633649	(data[index])> 0	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.05463583647081531	0.07142857142857142	0.06471147744546898	(log(x,null))< 0	_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.15811388300841897	0.0	0.0632455532033676		_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.058520573598065284	0.0659380473395787	0.06297105784297333	p <= x	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#311	0.06262242910851495	0.06262242910851495	0.06262242910851495	data[row][column] == value	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#284	0.06262242910851495	0.06262242910851495	0.06262242910851495	!(nCols == 0)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.15617376188860607	0.0	0.06246950475544243		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.15617376188860607	0.0	0.06246950475544243		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.15617376188860607	0.0	0.06246950475544243		_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.05773502691896257	0.05783149319662402	0.05779290668555944	(data.length)> 0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#193	0.14433756729740646	0.0	0.05773502691896259		_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#78	0.13608276348795434	0.0	0.05443310539518174		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#335	0.05399492471560388	0.05399492471560388	0.05399492471560388	((data == null) ? 0 : data.length)!= 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#341	0.053916386601719206	0.053916386601719206	0.053916386601719206	(((data == null) || (data[0] == null)) ? 0 : data[0].length)>= 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.12909944487358055	0.0	0.051639777949432225		_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.04981354813867179	0.04981354813867179	0.04981354813867179	!(columnDimension < 1)	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.04279604925109129	0.054312544659356844	0.049705946496050625	((x < 0l) ? -x : x)== 0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3510	0.048507125007266595	0.05439282932204212	0.04961475199234563	!(a < b)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.04938647983247948	0.04938647983247948	0.04938647983247948	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.049326362366699	0.049326362366699	0.049326362366699	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.12216944435630522	0.0	0.048867777742522094		_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.03382550457458692	0.0584206237836986	0.048582576100053926	(Math.sqrt(a))== 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.11624763874381928	0.0	0.04649905549752772		_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.04531432544294438	0.04531432544294438	0.04531432544294438	maximalCount == max	_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#73	0.11322770341445956	0.0	0.04529108136578383		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.11180339887498948	0.0	0.044721359549995794		_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.044194173824159216	0.04423739552038088	0.04422010684189222	!(++count > maximalCount)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#337	0.04372694694466261	0.04432422071779363	0.04408531120854122	!(yInt < 0)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.04389512813061471	0.04393747751637468	0.043920537762070694	((a <= b) ? a : b)> 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.10846522890932808	0.0	0.04338609156373124		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#84	0.042295493443781355	0.042295493443781355	0.042295493443781355	maximalCount == max	_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.09805806756909202	0.0	0.03922322702763681		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.09805806756909202	0.0	0.03922322702763681		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.09667364890456635	0.0	0.03866945956182655		_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.038376477822666816	0.03843312210120439	0.03841046438978936	!(o == null)	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.08770580193070293	0.0	0.03508232077228118		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#611	0.08333333333333333	0.0	0.03333333333333333		_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.0827605888602368	0.0	0.033104235544094716		_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	0.029247769028706173	0.034421419541075714	0.032351959336127896	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)<= 0	_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.07624928516630233	0.0	0.030499714066520935		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#144	0.07537783614444091	0.0	0.030151134457776365		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#252	0.07453559924999299	0.0	0.0298142396999972		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.07372097807744857	0.0	0.02948839123097943		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.07293249574894728	0.0	0.029172998299578912		_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.0663723311599972	0.0	0.026548932463998882		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.06286946134619315	0.0	0.02514778453847726		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#543	0.06262242910851495	0.0	0.025048971643405984		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.061662641597820735	0.0	0.024665056639128297		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#389	0.051502620262460476	0.0	0.020601048104984192		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.04463218426774518	0.0	0.017852873707098073		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.04356068418690321	0.0	0.017424273674761286		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.04233337566673017	0.0	0.016933350266692068		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#191	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#112	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#55	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
