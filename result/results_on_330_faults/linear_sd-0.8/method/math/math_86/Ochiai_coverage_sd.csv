line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.CholeskyDecompositionImpl#?#CholeskyDecompositionImpl#?,RealMatrix,double,double#145	0.4472135954999579	1.0	0.8894427190999916	ltQ[p] < inverse	GT
org.apache.commons.math.linear.DenseRealMatrix#DenseRealMatrix#multiply#?,DenseRealMatrix#599	0.125	0.5	0.4223606797749979	outBlock[k++] != sum	_
org.apache.commons.math.linear.AbstractRealMatrix#String#toString#?#999	0.35355339059327373	0.35355339059327373	0.35355339059327373	!(i > 0)	_
org.apache.commons.math.linear.CholeskyDecompositionImpl#RealMatrix#getLT#?#164	0.2886751345948129	0.31622776601683794	0.310717239732433	!(cachedLT == null)	_
org.apache.commons.math.linear.CholeskyDecompositionImpl#RealMatrix#getL#?#155	0.2886751345948129	0.2886751345948129	0.2886751345948129	cachedL == null	_
org.apache.commons.math.linear.DenseRealMatrix#double[][]#getData#?#636	0.11995202878081344	0.1259881576697424	0.1247809318919566	lastPos == pEnd	_
org.apache.commons.math.linear.DenseRealMatrix#?#DenseRealMatrix#?,int,int,double[][],boolean#150	0.10629880069054679	0.1143323900950059	0.11272567221411409	this.columns == rows	_
org.apache.commons.math.linear.DenseRealMatrix#double[][]#toBlocksLayout#?,double[][]#237	0.10690449676496974	0.10690449676496974	0.10690449676496974	!(p < pEnd)	_
org.apache.commons.math.linear.DenseRealMatrix#int#blockHeight#?,int#1626	0.10259783520851541	0.10259783520851541	0.10259783520851541	((blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE)> 0	_
org.apache.commons.math.linear.DenseRealMatrix#int#getColumnDimension#?#1323	0.09556369651349932	0.09556369651349932	0.09556369651349932	(columns)!= 0	_
org.apache.commons.math.linear.DenseRealMatrix#int#getRowDimension#?#1317	0.09513029883089881	0.09513029883089881	0.09513029883089881	(rows)!= 0	_
org.apache.commons.math.linear.DenseRealMatrix#int#blockWidth#?,int#1635	0.09304842103984709	0.09304842103984709	0.09304842103984709	((blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE)!= 0	_
org.apache.commons.math.linear.CholeskyDecompositionImpl#?#CholeskyDecompositionImpl#?,RealMatrix#74	0.4472135954999579	0.0	0.08944271909999156		_
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#61	0.08687444855261388	0.08687444855261388	0.08687444855261388	!(columnDimension <= 0)	_
org.apache.commons.math.linear.DenseRealMatrix#DenseRealMatrix#transpose#?#1287	0.08512565307587486	0.08512565307587486	0.08512565307587486	!(iBlock < blockColumns)	_
org.apache.commons.math.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#627	0.08333333333333333	0.08333333333333333	0.08333333333333333	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math.linear.DenseRealMatrix#double#getEntry#?,int,int#1218	0.06622661785325219	0.06835859270246633	0.0679321977326235	(blocks[iBlock * blockColumns + jBlock][k])> 0	_
org.apache.commons.math.linear.DenseRealMatrix#?#DenseRealMatrix#?,int,int#99	0.05643326479831003	0.06108472217815261	0.0601544307021841	this.rows == columns	_
org.apache.commons.math.linear.DenseRealMatrix#double[][]#createBlocksLayout#?,int,int#266	0.05643326479831003	0.05643326479831003	0.05643326479831003	iBlock < blockRows	_
org.apache.commons.math.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#88	0.15249857033260467	0.0	0.030499714066520925		_
org.apache.commons.math.linear.AbstractRealMatrix#boolean#isSquare#?#639	0.1386750490563073	0.0	0.027735009811261452		_
org.apache.commons.math.linear.DenseRealMatrix#DenseRealMatrix#multiply#?,RealMatrix#492	0.11322770341445956	0.0	0.02264554068289191		_
org.apache.commons.math.linear.DenseRealMatrix#?#DenseRealMatrix#?,double[][]#126	0.10690449676496974	0.0	0.021380899352993945		_
