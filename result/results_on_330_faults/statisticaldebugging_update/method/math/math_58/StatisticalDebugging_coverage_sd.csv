line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#405	0.0	1.959183673469388	1.959183673469388	xNorm <= coeff2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#533	0.0	0.8999999999999999	0.8999999999999999	parl > dxNorm	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#49	0.0	0.5714285714285714	0.5714285714285714	this.x == weight	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#182	0.0	0.46666666666666656	0.46666666666666656	param[2] <= 0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#262	0.0	0.3333333333333333	0.3333333333333333	!((idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length))	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getX#?#64	0.0	0.15	0.15	(x)== 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#778	0.0	0.09333333333333332	0.09333333333333332	jacNorm[k] > norm2	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#144	0.0	0.08333333333333331	0.08333333333333331	!(observations.length < 3)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#688	0.0	0.05860805860805862	0.05860805860805862	cos > dpj	_
org.apache.commons.math.analysis.function.Gaussian#double#value#?,double,double,double#197	0.0	0.046153846153846156	0.046153846153846156	(norm * FastMath.exp(-xMinusMean * xMinusMean * i2s2))> 0	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#142	0.0	0.02406015037593985	0.02406015037593985	index < i	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#812	0.0	0.022930331043743223	0.022930331043743223	result < epsilon	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#210	0.0	0.022144522144522148	0.022144522144522148	this.costRelativeTolerance == orthoTolerance	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3827	0.0	0.007991862830572509	0.007991862830572509	!(a > b)	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getY#?#71	0.0	0.005263157894736831	0.005263157894736831	(y)!= 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#849	0.0	0.004638218923933214	0.004638218923933214	y[i] < gamma	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3911	0.0	0.003105873755366766	0.003105873755366766	(a)> 0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#73	0.0	0.0017165744802593932	0.0017165744802593932	(relativeThreshold)> 0	_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.0	5.75017692852087E-4	5.75017692852087E-4	o instanceof Object[]	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#83	0.0	4.8076923076922906E-4	4.8076923076922906E-4	difference > size * getRelativeThreshold() && difference > getAbsoluteThreshold()	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#115	0.0	4.140786749482414E-4	4.140786749482414E-4	weightedResidualJacobian[i][j] < wi	_
org.apache.commons.math.util.FastMath#double#exp#?,double#697	0.0	3.343177132668412E-4	3.343177132668412E-4	(exp(x,0.0,null))> 0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3380	0.0	1.9884283171591645E-4	1.9884283171591645E-4	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)> 0	_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.0	1.2465108824851866E-4	1.2465108824851866E-4	(Math.sqrt(a))> 0	_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.0	2.0480052428934262E-5	2.0480052428934262E-5	((a <= b) ? a : b)!= 0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#156	0.0	0.0	0.0	parameters == null	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#80	0.0	0.0	0.0	(absoluteThreshold)> 0	_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.0	0.0	0.0	!(++count > maximalCount)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#185	0.0	0.0	0.0	params[2] <= fwhmApprox	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.0	0.0	0.0	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#199	0.0	0.0	0.0	points[i].getY() > points[maxYIdx].getY()	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#117	0.0	0.0	0.0	!(t == null)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#245	0.0	0.0	0.0	rows != maxEval	_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.0	0.0	0.0	maximalCount >= max	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getWeight#?#57	0.0	0.0	0.0	(weight)> 0	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#132	0.0	0.0	0.0	(Gaussian.value(diff,param[0],i2s2))> 0	_
