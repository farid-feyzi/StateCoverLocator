line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.EigenDecompositionImpl#void#process2RowsBlock#?,int#745	0.0	0.9600000000000002	0.9600000000000002	realEigenvalues[index] == s	_
org.apache.commons.math.linear.BiDiagonalTransformer#void#transformToUpperBiDiagonal#?#281	0.0	0.9565217391304348	0.9565217391304348	hI[j] > xNormSqr	_
org.apache.commons.math.linear.SingularValueDecompositionImpl#?#SingularValueDecompositionImpl#?,RealMatrix,int#142	0.0	0.8155415053385302	0.8155415053385302	(p > 0) && (eigenValues[p - 1] <= 0)	_
org.apache.commons.math.linear.BiDiagonalTransformer#RealMatrix#getU#?#106	0.0	0.5454545454545455	0.5454545454545455	!(hK[k - diagOffset] != 0.0)	_
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1803	0.0	0.4117647058823529	0.4117647058823529	eigenvector[i] > eigenvalue	_
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#201	0.0	0.3846153846153846	0.3846153846153846	squaredSecondary[i] < s	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#process3RowsBlock#?,int#808	0.0	0.36363636363636365	0.36363636363636365	realEigenvalues[index + 2] < d	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#603	0.0	0.2608695652173913	0.2608695652173913	upperSpectra <= upper	_
org.apache.commons.math.linear.SingularValueDecompositionImpl#RealMatrix#getU#?#181	0.0	0.19500913598823477	0.19500913598823477	i < m	GT
org.apache.commons.math.linear.EigenDecompositionImpl#RealMatrix#getV#?#257	0.0	0.09427619483207818	0.09427619483207818	!(cachedV == null)	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1838	0.0	0.08481429786275027	0.08481429786275027	work[sixI] >= liP1	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1888	0.0	0.05054151624548738	0.05054151624548738	work[sixI + 5] >= di	_
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#699	0.0	0.030473436952813633	0.030473436952813633	absDCurrent >= absDPrevious	_
org.apache.commons.math.linear.ArrayRealVector#double#getEntry#?,int#946	0.0	0.027040085529549417	0.027040085529549417	(data[index])< 0	_
org.apache.commons.math.linear.Array2DRowRealMatrix#double#walkInColumnOrder#?,RealMatrixPreservingVisitor#572	0.0	0.025715605216233103	0.025715605216233103	(visitor.end())> 0	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1747	0.0	0.025557168719329212	0.025557168719329212	d[i] > mu	_
org.apache.commons.math.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#374	0.0	0.021161046817720356	0.021161046817720356	(data[row][column])< 0	_
org.apache.commons.math.linear.BiDiagonalTransformer#RealMatrix#getV#?#187	0.0	0.014637974019551907	0.014637974019551907	hK[k] != 0.0	_
org.apache.commons.math.linear.BiDiagonalTransformer#?#BiDiagonalTransformer#?,RealMatrix#73	0.0	0.006652675430433606	0.006652675430433606	m >= n	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#678	0.0	0.002562030178116758	0.002562030178116758	i < j	_
org.apache.commons.math.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#919	0.0	0.0015865071630369741	0.0015865071630369741	(walkInRowOrder(visitor))== 0	_
org.apache.commons.math.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#505	0.0	8.777200264793626E-4	8.777200264793626E-4	(visitor.end())<= 0	_
org.apache.commons.math.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#151	0.0	4.0398891138903123E-4	4.0398891138903123E-4	r < nRows	_
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#56	0.0	9.848999604703397E-5	9.848999604703397E-5	!(rowDimension <= 0)	_
org.apache.commons.math.linear.Array2DRowRealMatrix#Array2DRowRealMatrix#subtract#?,Array2DRowRealMatrix#257	0.0	0.0	0.0	!(row < rowCount)	_
org.apache.commons.math.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#340	0.0	0.0	0.0	!(column > 0)	_
org.apache.commons.math.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#544	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor#double#end#?#44	0.0	0.0	0.0	(0)>= 0	_
org.apache.commons.math.linear.AbstractRealMatrix#RealMatrix#getSubMatrix#?,int,int,int,int#269	0.0	0.0	0.0	j <= endColumn	_
org.apache.commons.math.linear.Array2DRowRealMatrix#int#getRowDimension#?#420	0.0	0.0	0.0	((data == null) ? 0 : data.length)>= 0	_
org.apache.commons.math.linear.Array2DRowRealMatrix#double[][]#copyOut#?#619	0.0	0.0	0.0	i < nRows	_
org.apache.commons.math.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#203	0.0	0.0	0.0	i < diagonal.length	_
org.apache.commons.math.linear.ArrayRealVector#int#getDimension#?#951	0.0	0.0	0.0	(data.length)>= 0	_
org.apache.commons.math.linear.MatrixUtils#void#checkSubMatrixIndex#?,AnyMatrix,int,int,int,int#573	0.0	0.0	0.0	!(startColumn > endColumn)	_
org.apache.commons.math.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#386	0.0	0.0	0.0	data[row][column] <= value	_
org.apache.commons.math.linear.Array2DRowRealMatrix#void#addToEntry#?,int,int,double#398	0.0	0.0	0.0	data[row][column] <= increment	_
org.apache.commons.math.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#633	0.0	0.0	0.0	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#105	0.0	0.0	0.0	!(d.length == 0)	_
org.apache.commons.math.linear.SingularValueDecompositionImpl#RealMatrix#getV#?#239	0.0	0.0	0.0	m >= n	GT
org.apache.commons.math.linear.SingularValueDecompositionImpl#RealMatrix#getS#?#217	0.0	0.0	0.0	cachedS == null	_
org.apache.commons.math.linear.Array2DRowRealMatrix#int#getColumnDimension#?#426	0.0	0.0	0.0	(((data == null) || (data[0] == null)) ? 0 : data[0].length)>= 0	_
org.apache.commons.math.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#650	0.0	0.0	0.0	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#509	0.0	0.0	0.0	!(vector.getDimension() != nRows)	_
org.apache.commons.math.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#530	0.0	0.0	0.0	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math.linear.SingularValueDecompositionImpl#RealMatrix#getVT#?#283	0.0	0.0	0.0	cachedVt == null	_
org.apache.commons.math.linear.Array2DRowRealMatrix#Array2DRowRealMatrix#multiply#?,Array2DRowRealMatrix#306	0.0	0.0	0.0	outDataRow[col] == sum	_
