line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#717	0.0	1.971830985915493	1.971830985915493	tmp[j] == maxAbsoluteValue	_
org.apache.commons.math3.distribution.NormalDistribution#double#density#?,double#137	0.0	0.11428571428571434	0.11428571428571434	(FastMath.exp(-0.5 * x1 * x1) / (standardDeviation * SQRT2PI))!= 0	_
org.apache.commons.math3.util.FastMath#double#pow#?,double,double#1581	0.0	0.09326599326599327	0.09326599326599327	lna == yb	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1328	0.0	0.09186541395647635	0.09186541395647635	d == c	_
org.apache.commons.math3.distribution.NormalDistribution#?#NormalDistribution#?,RandomGenerator,double,double,double#112	0.0	0.05952380952380952	0.05952380952380952	solverAbsoluteAccuracy > mean	_
org.apache.commons.math3.util.FastMath#double#pow#?,double,int#1613	0.0	0.017365661861074702	0.017365661861074702	e == 0	_
org.apache.commons.math3.linear.EigenDecomposition$Solver#RealMatrix#getInverse#?#532	0.0	0.015151515151515164	0.015151515151515164	!(!isNonSingular())	_
org.apache.commons.math3.util.FastMath#double#exp#?,double,double,double[]#926	0.0	0.011079784339911955	0.011079784339911955	z == intPartA	_
org.apache.commons.math3.linear.EigenDecomposition$Solver#boolean#isNonSingular#?#516	0.0	0.010989010989011005	0.010989010989011005	!(i < realEigenvalues.length)	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.0	0.0017088572017463324	0.0017088572017463324	((x < 0l) ? -x : x)== 0	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetricInternal#?,RealMatrix,double,boolean#399	0.0	0.001544401544401542	0.001544401544401542	!(i < rows)	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	0.0	0.0012793176972281453	0.0012793176972281453	isSymmetric	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#154	0.0	0.0010497237569060767	0.0010497237569060767	seed == null	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.0	5.646805682291841E-4	5.646805682291841E-4	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)== 0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.0	3.508771929824593E-4	3.508771929824593E-4	!(!matrix.isSquare())	_
org.apache.commons.math3.util.FastMath#double#exp#?,double#831	0.0	2.6682395236490245E-4	2.6682395236490245E-4	(exp(x,0.0,null))> 0	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#112	0.0	2.564102564102562E-4	2.564102564102562E-4	iRm1[j] > w	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0	1.6706975560081428E-4	1.6706975560081428E-4	(data[row][column])> 0	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#335	0.0	8.545182653279214E-5	8.545182653279214E-5	!(xInt < 0)	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.0	6.710405730303028E-5	6.710405730303028E-5	(Math.sqrt(a))> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.0	6.420133538777642E-5	6.420133538777642E-5	(visitor.end())== 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0	6.347997206881256E-5	6.347997206881256E-5	(walkInRowOrder(visitor))<= 0	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	7.143112254008859E-6	7.143112254008859E-6	!(o == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#68	0.0	5.161210407064656E-6	5.161210407064656E-6	!(rowDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#468	0.0	4.952211162283747E-6	4.952211162283747E-6	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.0	4.726456339359565E-6	4.726456339359565E-6	((a <= b) ? a : b)> 0	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#hasComplexEigenvalues#?#272	0.0	0.0	0.0	i < imagEigenvalues.length	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.0	0.0	0.0	i < nSum	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.0	0.0	0.0	cachedQ == null	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.0	0.0	0.0	(((data == null) || (data[0] == null)) ? 0 : data[0].length)>= 0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.0	0.0	0.0	(0)>= 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumn#?,int,double[]#574	0.0	0.0	0.0	!(array.length != nRows)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#484	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution#?#AbstractMultivariateRealDistribution#?,RandomGenerator,int#43	0.0	0.0	0.0	dimension <= n	_
org.apache.commons.math3.linear.EigenDecomposition#DecompositionSolver#getSolver#?#406	0.0	0.0	0.0	!(hasComplexEigenvalues())	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.0	0.0	0.0	!(data == null || data[0] == null)	_
org.apache.commons.math3.distribution.MultivariateNormalDistribution#?#MultivariateNormalDistribution#?,RandomGenerator,double[],double[][]#112	0.0	0.0	0.0	!(dim != covariances[i].length)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.0	0.0	0.0	cachedQt == null	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0	0.0	0.0	((data == null) ? 0 : data.length)>= 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[]#preMultiply#?,double[]#375	0.0	0.0	0.0	!(v.length != nRows)	_
org.apache.commons.math3.distribution.MultivariateNormalDistribution#double#getExponentTerm#?,double[]#230	0.0	0.0	0.0	!(i < centered.length)	_
org.apache.commons.math3.linear.EigenDecomposition#double#getDeterminant#?#361	0.0	0.0	0.0	(determinant)!= 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.0	0.0	0.0	data[row][column] == value	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#290	0.0	0.0	0.0	i < data.length	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#multiplyEntry#?,int,int,double#333	0.0	0.0	0.0	data[row][column] >= factor	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#607	0.0	0.0	0.0	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution#int#getDimension#?#53	0.0	0.0	0.0	(dimension)>= 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.distribution.MultivariateNormalDistribution#double#density#?,double[]#183	0.0	0.0	0.0	(FastMath.pow(2 * FastMath.PI,-dim / 2) * FastMath.pow(covarianceMatrixDeterminant,-0.5) * getExponentTerm(vals))>= 0	GT
