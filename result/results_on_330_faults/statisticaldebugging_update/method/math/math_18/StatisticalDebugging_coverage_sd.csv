line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#827	0.0	1.8823529411764706	1.8823529411764706	vals[i] == val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#559	0.0	0.8999999999999999	0.8999999999999999	!(inputSigma != null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#612	0.0	0.8823529411764706	0.8823529411764706	mueff > sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#750	0.0	0.875	0.875	negccov > negcovMax	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#319	0.0	0.5897435897435896	0.5897435897435896	this.diagonalOnly == lambda	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#872	0.0	0.5490196078431372	0.5490196078431372	(Double.compare(value,o.value))== 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#952	0.0	0.38235294117647056	0.38235294117647056	!(boundaries == null)	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#969	0.0	0.38235294117647056	0.38235294117647056	boundaries != null && isRepairMode	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#926	0.0	0.38235294117647056	0.38235294117647056	!(boundaries == null)	GT
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#711	0.0	0.15555555555555556	0.15555555555555556	tmp[j] > maxAbsoluteValue	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#122	0.0	0.1291866028708134	0.1291866028708134	!(lower == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0	0.08181527644614893	0.08181527644614893	(walkInRowOrder(visitor))> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.0	0.08172458172458172	0.08172458172458172	(visitor.end())!= 0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1197	0.0	0.030820033021463952	0.030820033021463952	yb > ab	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1800	0.0	0.02037037037037037	0.02037037037037037	b < cosEpsB	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#667	0.0	0.01568627450980392	0.01568627450980392	!(hsig)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.0	0.005357142857142859	0.005357142857142859	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.0	0.004504348161431519	0.004504348161431519	(Math.sqrt(a))<= 0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1821	0.0	0.004260962194830322	0.004260962194830322	b == pi2b	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.0	0.00414862914862915	0.00414862914862915	(log(x,null))< 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0	0.004070056937498646	0.004070056937498646	(data[row][column])< 0	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2291	0.0	0.003483825097760398	0.003483825097760398	xa > 1.5707963267948966	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.0	0.003124310189666004	0.003124310189666004	p < x	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3523	0.0	0.002837211723671195	0.002837211723671195	(a)> 0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.0	0.002786377708978327	0.002786377708978327	(relativeThreshold)> 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3805	0.0	0.0025140788415124703	0.0025140788415124703	remA == b	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.0	0.002268859897901307	0.002268859897901307	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.0	0.002268859897901307	0.002268859897901307	!(i < rows)	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.0	0.002222115389751561	0.002222115389751561	((x < 0l) ? -x : x)== 0	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2236	0.0	0.0019381754870076533	0.0019381754870076533	xa > 1.5707963267948966	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.0	0.0017947510886195126	0.0017947510886195126	p <= x	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#96	0.0	0.0016006402561024383	0.0016006402561024383	equals(x,y,eps)	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.0	0.0015873015873015888	0.0015873015873015888	(maximalCount)> 0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#248	0.0	0.001422475106685639	0.001422475106685639	mt[N - 1] < bits	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.0	0.0013545241105291667	0.0013545241105291667	(finalRemB)>= 0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.0	8.163265306122408E-4	8.163265306122408E-4	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#116	0.0	7.327796775769418E-4	7.327796775769418E-4	r < nRows	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	0.0	6.505486360633549E-4	6.505486360633549E-4	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)== 0	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.0	5.608426661058239E-4	5.608426661058239E-4	(data[index])> 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.0	3.6036036036036015E-4	3.6036036036036015E-4	(function.value(point))> 0	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#337	0.0	1.0396863117870725E-4	1.0396863117870725E-4	!(yInt < 0)	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0	2.2001716133858602E-5	2.2001716133858602E-5	(data.length)> 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#68	0.0	1.2044129691188461E-5	1.2044129691188461E-5	!(rowDimension < 1)	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	8.599875731795433E-6	8.599875731795433E-6	!(o == null)	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.0	7.6145224171542125E-6	7.6145224171542125E-6	!(++count > maximalCount)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.0	7.297885072905882E-6	7.297885072905882E-6	((a <= b) ? a : b)!= 0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.0	0.0	0.0	(absoluteThreshold)> 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.0	0.0	0.0	i < nSum	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#469	0.0	0.0	0.0	i < nRows	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1247	0.0	0.0	0.0	c < m * cd	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.0	0.0	0.0	(((data == null) || (data[0] == null)) ? 0 : data[0].length)> 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#808	0.0	0.0	0.0	!(max(diagD) > 1e14 * min(diagD))	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1219	0.0	0.0	0.0	!(r < n)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1377	0.0	0.0	0.0	!(c < popSize)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.0	0.0	0.0	i < nCols	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1015	0.0	0.0	0.0	!(i < x.length)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.0	0.0	0.0	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.0	0.0	0.0	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.0	0.0	0.0	i < diagonal.length	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0	0.0	0.0	((data == null) ? 0 : data.length)> 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1339	0.0	0.0	0.0	!(i < indices.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1172	0.0	0.0	0.0	i < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.0	0.0	0.0	(evaluations.getMaximalCount())>= 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#290	0.0	0.0	0.0	i < data.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1312	0.0	0.0	0.0	!(max < m[r])	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#85	0.0	0.0	0.0	!(col < columnCount)	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.0	0.0	0.0	(finalK)> 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1266	0.0	0.0	0.0	value == start	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1095	0.0	0.0	0.0	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1352	0.0	0.0	0.0	reverse[i] == i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1111	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.0	0.0	0.0	cachedQ == null	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1080	0.0	0.0	0.0	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#1006	0.0	0.0	0.0	this.valueRange <= valueRange	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.0	0.0	0.0	!(f == null)	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.0	0.0	0.0	(0)== 0	_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.0	0.0	0.0	maximalCount <= max	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1050	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#106	0.0	0.0	0.0	nextGaussian < r	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#84	0.0	0.0	0.0	maximalCount == max	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1206	0.0	0.0	0.0	r < n	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#252	0.0	0.0	0.0	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) > 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#866	0.0	0.0	0.0	this.value == value	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#344	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.0	0.0	0.0	((high | low) * 0x1.0p-52d)>= 0	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.0	0.0	0.0	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#129	0.0	0.0	0.0	!(row < rowCount)	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.0	0.0	0.0	(finalRemA)!= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1194	0.0	0.0	0.0	!(i < m1.getRowDimension())	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.0	0.0	0.0	cachedQt == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#101	0.0	0.0	0.0	!(row < rowCount)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1278	0.0	0.0	0.0	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1330	0.0	0.0	0.0	(min)!= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1066	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1159	0.0	0.0	0.0	d[0][c] == sum	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#115	0.0	0.0	0.0	row < rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#226	0.0	0.0	0.0	!(k < m)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#840	0.0	0.0	0.0	i < doubles.length	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#523	0.0	0.0	0.0	!(vector.getDimension() != nRows)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1141	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1298	0.0	0.0	0.0	min <= e	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.0	0.0	0.0	data[row][column] == value	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1126	0.0	0.0	0.0	!(c < cols.length)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.0	0.0	0.0	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1038	0.0	0.0	0.0	(isMinimize ? penalty : -penalty)>= 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.0	0.0	0.0	!(i < nRows)	_
