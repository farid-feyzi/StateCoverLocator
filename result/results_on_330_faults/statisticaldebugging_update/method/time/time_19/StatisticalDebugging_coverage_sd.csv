line	original_score	max_predicate_score	total	predicate	label
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#210	0.0	0.3821428571428572	0.3821428571428572	(iNextInfo.getOffset(millis))== 0	_
org.joda.time.tz.CachedDateTimeZone#Info#createInfo#?,long#170	0.0	0.0736231884057971	0.0736231884057971	periodStart < millis	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#readFrom#?,DataInput,String#1355	0.0	0.06359649122807018	0.06359649122807018	wallOffsets[i] > i	_
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#910	0.0	0.01922320104138286	0.01922320104138286	(offsetAdjusted)== 0	GT
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#getZone#?,String#145	0.0	0.018972332015810275	0.018972332015810275	id.equals(obj)	_
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	0.0	0.012427038222556957	0.012427038222556957	(iStandardOffset + findMatchingRecurrence(instant).getSaveMillis())== 0	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	0.0	0.012427038222556957	0.012427038222556957	(iTailZone.getOffset(instant))== 0	_
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	0.0	0.01109535808790187	0.01109535808790187	!(chrono != null && chrono.getZone() == zone)	_
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2115	0.0	0.010007913233719684	0.010007913233719684	displayOffset == 0 && iZeroOffsetPrintText != null	_
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#212	0.0	0.008827812158718602	0.008827812158718602	isLeapYear(year)	_
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#188	0.0	0.007649442755825734	0.007649442755825734	isLeapYear(year)	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#573	0.0	0.007201022949054444	0.007201022949054444	next == instant	_
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	0.0	0.006578947368421052	0.006578947368421052	(v * (30 * 60000L))> 0	_
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	0.0	0.005058717253839206	0.005058717253839206	(hash)< 0	_
org.joda.time.tz.CachedDateTimeZone#Info#getInfo#?,long#152	0.0	0.004140373299251804	0.004140373299251804	info == null || (int)((info.iPeriodStart >> 32)) != period	_
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	0.0	0.004115914754212626	0.004115914754212626	info == null || info.iYear != year	_
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	0.0	0.003207644077487378	0.003207644077487378	(MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1])== 0	_
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#Recurrence#findMatchingRecurrence#?,long#1322	0.0	0.0031440162271805273	0.0031440162271805273	end > start	_
org.joda.time.DateTimeZone#int#hashCode#?#1227	0.0	0.002741812642802742	0.002741812642802742	(57 + getID().hashCode())>= 0	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1573	0.0	0.002735947180391625	0.002735947180391625	!(i < transitions.length)	_
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#127	0.0	0.002720810801618883	0.002720810801618883	(instant % iUnitMillis)== 0	_
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#131	0.0	0.0026968820938670186	0.0026968820938670186	(iZone.hashCode())> 0	_
org.joda.time.format.DateTimeFormatterBuilder$Fraction#void#printTo#?,StringBuffer,Writer,long,Chronology#1923	0.0	0.0026396725837308987	0.0026396725837308987	fraction == 0	_
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	0.0	0.0026029450091217096	0.0026029450091217096	(getInfo(instant).getOffset(instant))== 0	_
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1221	0.0	0.0023626116703172294	0.0023626116703172294	end >= start	_
org.joda.time.chrono.ISOChronology#void#assemble#?,Fields#169	0.0	0.0017908920347944734	0.0017908920347944734	!(getBase().getZone() == DateTimeZone.UTC)	_
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	0.0	0.0015432025601517128	0.0015432025601517128	((int)((instant / getUnitMillis()) % iRange))== 0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	0.0	0.0014946050003714663	0.0014946050003714663	isLeapYear(year)	_
org.joda.time.DateTimeZone#DateTimeZone#forID#?,String#211	0.0	0.0012356575463371572	0.0012356575463371572	zone != null	_
org.joda.time.format.FormatUtils#void#appendPaddedInteger#?,StringBuffer,int,int#67	0.0	0.0010949704357982332	0.0010949704357982332	value < 100	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#514	0.0	8.503401360544227E-4	8.503401360544227E-4	iMillisOfDay >= dayOfWeek	_
org.joda.time.format.DateTimeFormatter#Chronology#selectChronology#?,Chronology#936	0.0	8.463618196779123E-4	8.463618196779123E-4	!(iChrono != null)	_
org.joda.time.tz.ZoneInfoProvider#InputStream#openResource#?,String#196	0.0	5.649717514124297E-4	5.649717514124297E-4	!(iFileDir != null)	_
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	0.0	5.456698370084195E-4	5.456698370084195E-4	((int)(instant % DateTimeConstants.MILLIS_PER_DAY))!= 0	_
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	0.0	3.0915320384824856E-4	3.0915320384824856E-4	(iChronology.setYear(instant,year))> 0	_
org.joda.time.format.ISODateTimeFormat#DateTimeFormatter#dateTime#?#953	0.0	2.972399150743101E-4	2.972399150743101E-4	!(dt == null)	_
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	0.0	2.8466702091895944E-4	2.8466702091895944E-4	(instant + (value - get(instant)) * iUnitMillis)> 0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	0.0	2.7553374010066923E-4	2.7553374010066923E-4	(iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant))> 0	_
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	0.0	2.7057175130332104E-4	2.7057175130332104E-4	(getYearInfo(year).iFirstDayMillis)> 0	_
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#690	0.0	2.673082063619353E-4	2.673082063619353E-4	!(id == null)	_
org.joda.time.format.DateTimeFormatterBuilder$Composite#void#printTo#?,StringBuffer,long,Chronology,int,DateTimeZone,Locale#2619	0.0	2.3009106762255337E-4	2.3009106762255337E-4	locale == null	_
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#606	0.0	2.2320476082625146E-4	2.2320476082625146E-4	(getYearMonthDayMillis(year,monthOfYear,dayOfMonth))> 0	_
org.joda.time.base.BaseDateTime#long#getMillis#?#295	0.0	2.1952587183984154E-4	2.1952587183984154E-4	(iMillis)> 0	_
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	0.0	2.0885547201336674E-4	2.0885547201336674E-4	(instant + (value - get(instant)) * iUnitMillis)> 0	_
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	0.0	1.7091548109097045E-4	1.7091548109097045E-4	(millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)> 0	_
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	0.0	1.6811307348761672E-4	1.6811307348761672E-4	(FieldUtils.safeAdd(instant,addition))> 0	_
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#133	0.0	1.6513209922891037E-4	1.6513209922891037E-4	(base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond))> 0	_
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	0.0	1.5722625541746962E-4	1.5722625541746962E-4	(sum)> 0	_
org.joda.time.DateTimeUtils#Chronology#getInstantChronology#?,ReadableInstant#164	0.0	1.5626878230556559E-4	1.5626878230556559E-4	!(instant == null)	_
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#146	0.0	1.4670131612037896E-4	1.4670131612037896E-4	!(instant == null)	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	0.0	1.4097744360902238E-4	1.4097744360902238E-4	dateMillis < millis	_
org.joda.time.field.UnsupportedDurationField#UnsupportedDurationField#getInstance#?,DurationFieldType#55	0.0	1.253132832080197E-4	1.253132832080197E-4	!(field == null)	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	0.0	1.147049335069837E-4	1.147049335069837E-4	monthToUse > thisMonth	_
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	0.0	1.130364414073039E-4	1.130364414073039E-4	(set(instant,newYear))> 0	_
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	0.0	1.0997180322965179E-4	1.0997180322965179E-4	(instant)> 0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#706	0.0	1.0967437677535367E-4	1.0967437677535367E-4	!(iDayOfMonth >= 0)	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	0.0	1.0436062638346458E-4	1.0436062638346458E-4	!(iAdvance)	_
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#252	0.0	1.0306108407802512E-4	1.0306108407802512E-4	!(chrono == null)	_
org.joda.time.chrono.AssembledChronology#void#setFields#?#369	0.0	8.322929671244258E-5	8.322929671244258E-5	!(iBase == null)	_
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	0.0	6.366676813557856E-5	6.366676813557856E-5	(sum)> 0	_
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#177	0.0	6.211365879356867E-5	6.211365879356867E-5	(getDateMidnightMillis(year,monthOfYear,dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond)> 0	_
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	0.0	6.208047181158584E-5	6.208047181158584E-5	instant >= 0	_
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	0.0	4.2264452521650984E-5	4.2264452521650984E-5	(FieldUtils.safeAdd(instant,value))>= 0	_
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#142	0.0	2.746548504046565E-5	2.746548504046565E-5	!(offset != zone.getOffset(instant))	_
org.joda.time.field.BaseDurationField#?#BaseDurationField#?,DurationFieldType#48	0.0	1.6004865479105936E-5	1.6004865479105936E-5	!(type == null)	_
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	0.0	1.4444674489260192E-5	1.4444674489260192E-5	(getDurationField().add(instant,value))> 0	_
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#119	0.0	1.3921436692266621E-5	1.3921436692266621E-5	(localToUTC(getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond)))>= 0	_
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	0.0	1.3608929272126502E-5	1.3608929272126502E-5	(iChronology.getYear(instant))> 0	_
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#214	0.0	3.5258485836077787E-6	3.5258485836077787E-6	!((value < lowerBound) || (value > upperBound))	_
org.joda.time.chrono.BasicChronology#int#getYear#?,long#411	0.0	1.915686792872042E-6	1.915686792872042E-6	!(diff >= DateTimeConstants.MILLIS_PER_DAY * 365L)	_
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeFieldType,int,int,int#232	0.0	1.4424748252081683E-6	1.4424748252081683E-6	!((value < lowerBound) || (value > upperBound))	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#72	0.0	0.0	0.0	(iChronology.getMonthOfYear(instant))> 0	_
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField#?#ZonedDateTimeField#?,DateTimeField,DateTimeZone,DurationField,DurationField,DurationField#390	0.0	0.0	0.0	!(!field.isSupported())	_
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?#691	0.0	0.0	0.0	(12)>= 0	_
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	0.0	0.0	0.0	((1970L * MILLIS_PER_YEAR) / 2)> 0	_
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	0.0	0.0	0.0	(iUnitMillis)> 0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	0.0	0.0	0.0	(iSaveMillis)<= 0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	0.0	0.0	0.0	(1)> 0	_
org.joda.time.format.DateTimeFormatter#DateTimePrinter#requirePrinter#?#657	0.0	0.0	0.0	!(printer == null)	_
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	0.0	0.0	0.0	(hash)!= 0	_
org.joda.time.field.MillisDurationField#long#getUnitMillis#?#80	0.0	0.0	0.0	(1)!= 0	_
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#682	0.0	0.0	0.0	(getMaxMonth())!= 0	_
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	0.0	0.0	0.0	((int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1)>= 0	_
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	0.0	0.0	0.0	(MILLIS_PER_YEAR / 2)> 0	_
org.joda.time.chrono.ZonedChronology$ZonedDurationField#?#ZonedDurationField#?,DurationField,DateTimeZone#285	0.0	0.0	0.0	!(!field.isSupported())	_
org.joda.time.format.DateTimeFormatter#void#printTo#?,StringBuffer,long,Chronology#624	0.0	0.0	0.0	!((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	0.0	0.0	0.0	((value > 28 ? getDaysInMonthMax(instant) : 28))!= 0	_
org.joda.time.field.UnsupportedDurationField#long#getUnitMillis#?#218	0.0	0.0	0.0	(0)== 0	_
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#?#DSTZone#?,String,int,Recurrence,Recurrence#1177	0.0	0.0	0.0	iStandardOffset >= standardOffset	_
org.joda.time.chrono.ZonedChronology#ZonedChronology#getInstance#?,Chronology,DateTimeZone#60	0.0	0.0	0.0	!(base == null)	_
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2608	0.0	0.0	0.0	(iPrintedLengthEstimate)!= 0	_
org.joda.time.chrono.BasicChronology$YearInfo#?#YearInfo#?,int,long#771	0.0	0.0	0.0	iYear == year	_
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	0.0	0.0	0.0	(0)== 0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	0.0	0.0	0.0	(getDayOfMonth(millis,year,month))!= 0	_
org.joda.time.field.BaseDateTimeField#?#BaseDateTimeField#?,DateTimeFieldType#51	0.0	0.0	0.0	!(type == null)	_
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	0.0	0.0	0.0	!(zone instanceof CachedDateTimeZone)	_
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	0.0	0.0	0.0	(MIN_YEAR)!= 0	_
org.joda.time.tz.CachedDateTimeZone$Info#?#Info#?,DateTimeZone,long#189	0.0	0.0	0.0	iPeriodStart <= periodStart	_
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#298	0.0	0.0	0.0	(iField.getUnitMillis())> 0	_
org.joda.time.chrono.AssembledChronology$Fields#void#copyFieldsFrom#?,Chronology#512	0.0	0.0	0.0	isSupported(f=chrono.clockhourOfHalfday())	_
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	0.0	0.0	0.0	(getWrappedField().getUnitMillis() * iScalar)!= 0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	0.0	0.0	0.0	(iChronology.getDaysInMonthMaxForSet(instant,value))>= 0	_
org.joda.time.chrono.ZonedChronology#DurationField#convertField#?,DurationField,HashMap<Object,Object>#203	0.0	0.0	0.0	converted.containsKey(field)	_
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	0.0	0.0	0.0	(iUnitMillis)> 0	_
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	0.0	0.0	0.0	(iRange - 1)> 0	_
org.joda.time.chrono.ZonedChronology#DateTimeField#convertField#?,DateTimeField,HashMap<Object,Object>#215	0.0	0.0	0.0	!(converted.containsKey(field))	_
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#256	0.0	0.0	0.0	iMillis >= instant	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#160	0.0	0.0	0.0	(iUnitMillis)!= 0	_
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	0.0	0.0	0.0	(iChronology.getDayOfWeek(instant))> 0	_
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	0.0	0.0	0.0	(MAX_YEAR)!= 0	_
org.joda.time.chrono.AssembledChronology#DateTimeZone#getZone#?#107	0.0	0.0	0.0	(base=iBase) != null	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	0.0	0.0	0.0	(iOfYear.next(instant,standardOffset,saveMillis))> 0	_
org.joda.time.field.MillisDurationField#int#hashCode#?#155	0.0	0.0	0.0	((int)getUnitMillis())!= 0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	0.0	0.0	0.0	(iChronology.getDayOfMonth(instant))> 0	_
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#435	0.0	0.0	0.0	(getMonthOfYear(millis,getYear(millis)))!= 0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	0.0	0.0	0.0	(getDayOfMonth(millis,year,month))!= 0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	0.0	0.0	0.0	(next)!= 0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#?#Recurrence#?,OfYear,String,int#750	0.0	0.0	0.0	iSaveMillis == saveMillis	_
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	0.0	0.0	0.0	((isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12))))!= 0	_
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#readFrom#?,InputStream,String#95	0.0	0.0	0.0	!(in instanceof DataInput)	_
org.joda.time.tz.ZoneInfoProvider#DateTimeZone#loadZoneData#?,String#236	0.0	0.0	0.0	in != null	_
