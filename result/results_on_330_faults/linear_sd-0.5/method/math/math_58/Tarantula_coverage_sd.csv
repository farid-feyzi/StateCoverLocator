line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#274	0.9990855052583447	0.9990855052583447	0.9990855052583447	minY > maxY	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#185	0.9990855052583447	0.9977168949771689	0.9977168949771689	params[2] <= fwhmApprox	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#199	0.9977168949771689	0.9977168949771689	0.9977168949771689	points[i].getY() > points[maxYIdx].getY()	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.9977168949771689	0.9977168949771689	0.9977168949771689	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#156	0.9977168949771689	0.9977168949771689	0.9977168949771689	parameters == null	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#182	0.9990855052583447	0.9990855052583447	0.9974917043155899	param[2] <= 0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#144	0.9977168949771689	0.9977168949771689	0.9972617321601174	!(observations.length < 3)	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#132	0.997261524418074	0.997261524418074	0.997261524418074	(Gaussian.value(diff,param[0],i2s2))> 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#614	0.993181818181818	0.9995425434583715	0.9956772498857924	parl >= dxNorm	_
org.apache.commons.math.analysis.function.Gaussian#double#value#?,double,double,double#197	0.9945380063723259	0.995897903372835	0.9952179548725805	(norm * FastMath.exp(-xMinusMean * xMinusMean * i2s2))> 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#390	0.9904805077062556	1.0	0.9950158586316267	lmPar >= xNorm	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#48	0.9909297052154196	0.9990855052583447	0.9950076052368821	this.weight == x	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getX#?#64	0.9913793103448276	0.9968065693430658	0.9940929398439466	(x)== 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#688	0.9909297052154196	0.9945380063723259	0.9927338557938727	cos > dpj	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getY#?#71	0.9913793103448276	0.9918293236495689	0.9916043169971982	(y)!= 0	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getWeight#?#57	0.9913793103448276	0.9913793103448276	0.9913793103448276	(weight)> 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#828	0.9802602063705698	0.9936334697589813	0.9862880610443652	weightedResidualJacobian[j][permutation[k + dk]] >= ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#212	0.9771914132379249	0.9855660802886784	0.9813787467633017	this.orthoTolerance == parRelativeTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#849	0.9785042543663233	0.9807001795332136	0.9796022169497685	y[i] < gamma	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#142	0.9693877551020407	0.9833483348334833	0.976368044967762	index < i	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#83	0.9719750889679716	0.9719750889679716	0.9717589984635322	difference > size * getRelativeThreshold() && difference > getAbsoluteThreshold()	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#115	0.9693877551020407	0.9698180204172214	0.969602887759631	weightedResidualJacobian[i][j] < wi	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#114	0.9689578713968959	0.9689578713968959	0.9689578713968959	!(f == null)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#246	0.9689578713968959	0.9689578713968959	0.9689578713968959	cols <= maxEval	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3831	0.9595959595959597	0.9600175746924428	0.9598067671442012	(a)>= 0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#73	0.9537319947621127	0.9574934268185802	0.9556127107903465	(relativeThreshold)> 0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#80	0.9541484716157206	0.9541484716157206	0.9541484716157206	(absoluteThreshold)> 0	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#765	0.9085239085239086	0.970679697912039	0.9321709656355326	intPartB == x	_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.9161425576519917	0.9161425576519917	0.9161425576519917	!(++count > maximalCount)	_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.9130798161303803	0.9130798161303803	0.9130798161303803	maximalCount >= max	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3911	0.8991769547325104	0.9250635055038102	0.9121202301181603	(a)> 0	_
org.apache.commons.math.util.FastMath#double#exp#?,double#697	0.8889340927583402	0.8932951757972198	0.89111463427778	(exp(x,0.0,null))> 0	_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.8867694805194805	0.8838996763754046	0.8792997180916253	o instanceof Object[]	_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.8750500600720865	0.875400641025641	0.8752253505488637	((a <= b) ? a : b)!= 0	_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.8198874296435272	0.8242172764994342	0.8220523530714807	(Math.sqrt(a))> 0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3380	0.7674745345978223	0.7786885245901639	0.7730815295939931	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)> 0	_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#121	0.9977168949771689	0.0	0.49885844748858443		GT
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#boolean#isBetween#?,double,double,double#291	0.9977168949771689	0.0	0.49885844748858443		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#Comparator<WeightedObservedPoint>#createWeightedObservedPointComparator#?#302	0.9977168949771689	0.0	0.49885844748858443		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#161	0.997261524418074	0.0	0.498630762209037		_
org.apache.commons.math.optimization.fitting.GaussianFitter#?#GaussianFitter#?,DifferentiableMultivariateVectorialOptimizer#68	0.9968065693430658	0.0	0.4984032846715329		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double#67	0.995897903372835	0.0	0.4979489516864175		_
org.apache.commons.math.optimization.fitting.CurveFitter#WeightedObservedPoint[]#getObservations#?#100	0.9954441913439636	0.0	0.4977220956719818		_
org.apache.commons.math.exception.NotStrictlyPositiveException#?#NotStrictlyPositiveException#?,Number#38	0.9936334697589813	0.0	0.49681673487949063		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#?#TheoreticalValuesFunction#?,ParametricUnivariateRealFunction#178	0.9913793103448276	0.0	0.4956896551724138		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,ParametricUnivariateRealFunction,double[]#126	0.9913793103448276	0.0	0.4956896551724138		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#203	0.9913793103448276	0.0	0.4956896551724138		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#MultivariateMatrixFunction#jacobian#?#183	0.9913793103448276	0.0	0.4956896551724138		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#153	0.9913793103448276	0.0	0.4956896551724138		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Number,Number,Number#46	0.9909297052154196	0.0	0.4954648526077098		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double,double#80	0.9909297052154196	0.0	0.4954648526077098		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#52	0.9904805077062556	0.0	0.4952402538531278		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Number,Number,boolean#52	0.9895833333333333	0.0	0.49479166666666663		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#152	0.9860108303249098	0.0	0.4930054151624549		_
org.apache.commons.math.optimization.VectorialPointValuePair#double[]#getValueRef#?#97	0.9715429079590929	0.0	0.48577145397954646		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#67	0.9711111111111111	0.0	0.4855555555555556		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#47	0.9693877551020407	0.0	0.48469387755102034		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getTargetRef#?#165	0.9693877551020407	0.0	0.48469387755102034		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getWeightRef#?#171	0.9693877551020407	0.0	0.48469387755102034		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#ConvergenceChecker<VectorialPointValuePair>#getConvergenceChecker#?#88	0.9689578713968959	0.0	0.48447893569844797		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#107	0.9689578713968959	0.0	0.48447893569844797		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?#62	0.9680992467877715	0.0	0.48404962339388574		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?,ConvergenceChecker<VectorialPointValuePair>#68	0.9680992467877715	0.0	0.48404962339388574		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#65	0.947939262472885	0.0	0.4739696312364425		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#53	0.947939262472885	0.0	0.4739696312364425		_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.914608622854751	0.0	0.4573043114273755		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#50	0.8980682285244553	0.0	0.44903411426222767		_
org.apache.commons.math.exception.MathIllegalArgumentException#?#MathIllegalArgumentException#?,Localizable,Localizable,Object#44	0.8719074221867518	0.0	0.4359537110933759		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#67	0.8558558558558558	0.0	0.4279279279279279		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1809	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1038	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1070	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1174	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1185	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1061	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1022	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1000	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1870	0.0	0.0	0.0		_
