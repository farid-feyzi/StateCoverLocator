line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#751	0.9997105643994212	0.9997105643994212	0.9997105643994212	negccov < negminresidualvariance	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#932	0.9991321955452704	0.9994212962962963	0.9992767459207834	res[i] <= diff	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#956	0.9991321955452704	0.9991321955452704	0.9991321955452704	!(i < x.length)	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1018	0.9991321955452704	0.9991321955452704	0.9991321955452704	!(x[i] > 1.0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1038	0.9991321955452704	0.9991321955452704	0.9991321955452704	(isMinimize ? penalty : -penalty)>= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#541	0.9985544955189362	0.9997105643994212	0.9986988787600465	!(Double.isInfinite(boundaries[1][i] - boundaries[0][i]))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#827	0.9953890489913544	1.0	0.9976945244956772	vals[i] == val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#582	0.9997105643994212	0.9997105643994212	0.9975498066953878	lambda <= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#872	0.9953890489913544	0.9994212962962963	0.9974051726438253	(Double.compare(value,o.value))== 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#969	0.9991321955452704	0.9991321955452704	0.9972606222683125	boundaries != null && isRepairMode	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#115	0.9971131639722864	0.9971131639722864	0.9968254798511171	!(v > hi)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#314	0.9928140270192585	0.9994212962962963	0.9961176616577774	this.lambda == checkFeasableCount	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#667	0.9953890489913544	0.9959630911188004	0.9956760700550774	!(hsig)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1340	0.9956759873162294	0.9956759873162294	0.9956759873162294	inverse[indices[i]] >= i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1141	0.9956759873162294	0.9956759873162294	0.9956759873162294	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1110	0.9956759873162294	0.9956759873162294	0.9956759873162294	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#789	0.9956759873162294	0.9956759873162294	0.9956759873162294	ccov1 + ccovmu + negccov > 0 && (iterations % 1. / (ccov1 + ccovmu + negccov) / dimension / 10.) < 1.	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1351	0.9956759873162294	0.9956759873162294	0.9956759873162294	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1159	0.9956759873162294	0.9956759873162294	0.9956759873162294	d[0][c] == sum	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1194	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1220	0.9953890489913544	0.9953890489913544	0.9953890489913544	r < m	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1050	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1206	0.9953890489913544	0.9953890489913544	0.9953890489913544	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1066	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1312	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(max < m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#1006	0.9953890489913544	0.9953890489913544	0.9953890489913544	this.valueRange <= valueRange	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1096	0.9953890489913544	0.9953890489913544	0.9953890489913544	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1247	0.9953890489913544	0.9953890489913544	0.9953890489913544	c < m * cd	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#867	0.9953890489913544	0.9953890489913544	0.9953890489913544	this.index >= index	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1325	0.9953890489913544	0.9953890489913544	0.9953890489913544	r < m.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1080	0.9953890489913544	0.9953890489913544	0.9953890489913544	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1170	0.9953890489913544	0.9953890489913544	0.9953890489913544	m.getColumnDimension() == 1	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#840	0.9953890489913544	0.9953890489913544	0.9953890489913544	i < doubles.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1295	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1280	0.9953890489913544	0.9953890489913544	0.9953890489913544	max < e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1376	0.9953890489913544	0.9953890489913544	0.9953890489913544	r < size	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1266	0.9953890489913544	0.9953890489913544	0.9953890489913544	value == start	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1125	0.9953890489913544	0.9953890489913544	0.9953890489913544	r < m.getRowDimension()	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#344	0.9951022760011523	0.9951022760011523	0.9951022760011523	!(i < nRows)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#115	0.9948156682027649	0.9948156682027649	0.9948156682027649	row < rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#84	0.9942429476108232	0.9942429476108232	0.9942429476108232	row < rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#254	0.9942429476108232	0.9942429476108232	0.9942429476108232	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) < 0)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#469	0.9942429476108232	0.9942429476108232	0.9942429476108232	i < nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#130	0.993956834532374	0.993956834532374	0.993956834532374	col < columnCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.993385102099511	0.993385102099511	0.993385102099511	i < diagonal.length	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#226	0.9930994824611846	0.9930994824611846	0.9930994824611846	!(k < m)	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#523	0.9928140270192585	0.9928140270192585	0.9928140270192585	!(vector.getDimension() != nRows)	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#99	0.9925287356321839	0.9925287356321839	0.9925287356321839	Double.isNaN(nextGaussian)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#711	0.9877037460680583	0.9974010973144674	0.992411240481133	tmp[j] > maxAbsoluteValue	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.9916738443870228	0.9916738443870228	0.9916738443870228	(evaluations.getMaximalCount())>= 0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.9902522935779815	0.9911047345767576	0.9906785140773695	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.9899684723416451	0.9902522935779815	0.9901103829598132	(maximalCount)> 0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#247	0.9894013176740188	0.9896848137535816	0.9895430657138002	y >= mtNext	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	0.988834812482107	0.988834812482107	0.988834812482107	!(i < nRows)	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.9885518030910131	0.9885518030910131	0.9882690365569482	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.9885518030910131	0.9885518030910131	0.9882690365569482	!(i < rows)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.9871391826236068	0.9871391826236068	0.9871391826236068	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.9868571428571429	0.9868571428571429	0.9868571428571429	cachedQt == null	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.9862935465448316	0.9862935465448316	0.9862935465448316	(0)>= 0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.9862935465448316	0.9862935465448316	0.986152768133963	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.985730593607306	0.985730593607306	0.985730593607306	i < nCols	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.9793025233909839	0.9793025233909839	0.9793025233909839	((high | low) * 0x1.0p-52d)>= 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.9790249433106577	0.9793025233909839	0.9791637333508207	(function.value(point))> 0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.9762577727529678	0.9787475205440636	0.9775026466485157	(relativeThreshold)> 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.977086280056577	0.977086280056577	0.977086280056577	!(f == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.959178006109414	0.9942429476108232	0.9767104768601186	(visitor.end())!= 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.9589117157134924	0.9942429476108232	0.9765773316621578	(walkInRowOrder(visitor))> 0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.976533785694091	0.976533785694091	0.976533785694091	(absoluteThreshold)> 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.9754306693024569	0.9754306693024569	0.9754306693024569	i < nSum	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#101	0.9751552795031055	0.9751552795031055	0.9751552795031055	!(row < rowCount)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#116	0.9751552795031055	0.9751552795031055	0.9751552795031055	r < nRows	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.9735062006764374	0.9729577464788733	0.9732319735776553	(sinQ(xa,xb))> 0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1197	0.9567867036011081	0.9871391826236068	0.9719629431123574	yb > ab	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.9699522606009547	0.9699522606009547	0.9699522606009547	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.9685922602355581	0.9685922602355581	0.9685922602355581	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.9599777654252362	0.9594444444444444	0.9597111049348404	(-cosQ(xa,xb))!= 0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.9578480310593456	0.9578480310593456	0.9578480310593456	(0)== 0	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1800	0.9277464410421703	0.9798581560283689	0.9538022985352697	b < cosEpsB	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.9502063273727649	0.9502063273727649	0.9502063273727649	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.9478594950603731	0.9478594950603731	0.9478594950603731	!(i < nRows)	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3806	0.938842076651264	0.9517773491319923	0.9453097128916281	remB == a	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.938842076651264	0.9465607015620718	0.9427013891066679	(finalRemB)>= 0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1821	0.9279957012358947	0.9530905077262692	0.9405431044810819	b == pi2b	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.9284946236559141	0.9525648097076668	0.9405297166817904	(data[row][column])< 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.938842076651264	0.938842076651264	0.938842076651264	(finalK)> 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.938842076651264	0.938842076651264	0.938842076651264	(finalRemA)!= 0	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.9330091842247434	0.9375678610206298	0.9352885226226866	(data[index])> 0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.9220501868659905	0.9452654625068418	0.9336578246864162	p < x	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.9304956896551724	0.9304956896551724	0.9304956896551724	data[row][column] == value	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#290	0.9304956896551724	0.9304956896551724	0.9304956896551724	i < data.length	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.9220501868659905	0.9373134328358208	0.9296818098509056	p <= x	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.911586170493534	0.946042180224596	0.928814175359065	(log(x,null))< 0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3523	0.911586170493534	0.9383319750067917	0.9249590727501629	(a)> 0	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.9198402130492676	0.920085242408098	0.9199627277286828	(data.length)> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.9089473684210526	0.9089473684210526	0.9089473684210526	((data == null) ? 0 : data.length)> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.9087082346750854	0.9087082346750854	0.9087082346750854	(((data == null) || (data[0] == null)) ? 0 : data[0].length)> 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.8948186528497408	0.8948186528497408	0.8948186528497408	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.8931988621670546	0.8931988621670546	0.8931988621670546	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.8929679420889348	0.8929679420889348	0.8929679420889348	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.8630684657671165	0.9103848181338955	0.886726641950506	((x < 0l) ? -x : x)== 0	_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.8762049720953831	0.8762049720953831	0.8762049720953831	maximalCount <= max	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.870902672718104	0.8711223203026482	0.871012496510376	!(++count > maximalCount)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#337	0.8680573008293541	0.8711223203026482	0.8695898105660012	!(yInt < 0)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.868493839577571	0.8687122736418511	0.868603056609711	((a <= b) ? a : b)!= 0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.8604882909815644	0.8604882909815644	0.8604882909815644	!(cb == null)	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.7973222530009234	0.9215581643543224	0.8594402086776229	(Math.sqrt(a))<= 0	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.8351063829787234	0.8355104015481374	0.8353083922634303	!(o == null)	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	0.7469723183391003	0.8030690537084398	0.7750206860237701	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)== 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#87	1.0	0.0	0.5		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#253	0.9994212962962963	0.0	0.49971064814814814		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#246	0.9994212962962963	0.0	0.49971064814814814		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#498	0.9953890489913544	0.0	0.4976945244956772		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#917	0.9953890489913544	0.0	0.4976945244956772		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#942	0.9953890489913544	0.0	0.4976945244956772		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1233	0.9953890489913544	0.0	0.4976945244956772		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.9951022760011523	0.0	0.49755113800057615		_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#548	0.9930994824611846	0.0	0.4965497412305923		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#288	0.9928140270192585	0.0	0.49640701350962924		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#66	0.9919586444572086	0.0	0.4959793222286043		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.9894013176740188	0.0	0.4947006588370094		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.9894013176740188	0.0	0.4947006588370094		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.9885518030910131	0.0	0.49427590154550655		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.9882689556509299	0.0	0.49413447782546494		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.9882689556509299	0.0	0.49413447782546494		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.9879862700228833	0.0	0.49399313501144165		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#252	0.9862935465448316	0.0	0.4931467732724158		_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#81	0.9846066134549601	0.0	0.4923033067274801		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.9829254410927717	0.0	0.49146272054638585		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.9806927881885292	0.0	0.4903463940942646		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.9790249433106577	0.0	0.48951247165532885		_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.9779161947904869	0.0	0.48895809739524343		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.977086280056577	0.0	0.4885431400282885		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.9757062146892655	0.0	0.4878531073446328		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.9707700955593029	0.0	0.48538504777965147		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.9707700955593029	0.0	0.48538504777965147		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.9696799550814149	0.0	0.48483997754070746		_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.9637276785714286	0.0	0.4818638392857143		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.9594444444444444	0.0	0.4797222222222222		_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.9589117157134924	0.0	0.4794558578567462		_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.9525648097076668	0.0	0.4762824048538334		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#145	0.950729424717864	0.0	0.475364712358932		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#254	0.9496838053340666	0.0	0.4748419026670333		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.948901098901099	0.0	0.4744505494505495		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.9481196815811144	0.0	0.4740598407905572		_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#47	0.9383319750067917	0.0	0.46916598750339583		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.9309973045822102	0.0	0.4654986522911051		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#547	0.9304956896551724	0.0	0.4652478448275862		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#62	0.9284946236559141	0.0	0.46424731182795703		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#389	0.9008868022952531	0.0	0.45044340114762654		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.8728834975991913	0.0	0.43644174879959563		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.8674033149171271	0.0	0.43370165745856354		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.8607027161724395	0.0	0.43035135808621977		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#205	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#151	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#107	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#109	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#140	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#54	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
