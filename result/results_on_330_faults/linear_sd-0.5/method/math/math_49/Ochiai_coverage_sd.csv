line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.OpenMapRealVector#void#setEntry#?,int,double#666	0.5773502691896258	1.0	0.7886751345948129	!(entries.containsKey(index))	_
org.apache.commons.math.linear.OpenMapRealVector#OpenMapRealVector#ebeMultiply#?,RealVector#371	0.7071067811865475	0.7071067811865475	0.7071067811865475	iter.hasNext()	GT
org.apache.commons.math.linear.AbstractRealVector#void#checkVectorDimensions#?,int#64	0.5773502691896258	0.7071067811865475	0.6422285251880866	!(d != n)	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#boolean#containsKey#?,int#216	0.5	0.5	0.47360679774997894	states[index] == FREE	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#void#advance#?#563	0.7071067811865475	0.7071067811865475	0.4714045207910317	referenceCount != count	_
org.apache.commons.math.linear.OpenMapRealVector#double#getEntry#?,int#480	0.3333333333333333	0.5773502691896258	0.4553418012614796	(entries.get(index))== 0	_
org.apache.commons.math.linear.OpenMapRealVector#?#OpenMapRealVector#?,int,double#77	0.4472135954999579	0.4472135954999579	0.4472135954999579	this.epsilon == epsilon	_
org.apache.commons.math.linear.AbstractRealVector#void#checkIndex#?,int#76	0.31622776601683794	0.31622776601683794	0.31622776601683794	!(index < 0 || index >= getDimension())	_
org.apache.commons.math.MathRuntimeException#ConcurrentModificationException#createConcurrentModificationException#?,Localizable,Object#373	0.5773502691896258	0.0	0.2886751345948129		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#doRemove#?,int#397	0.2581988897471611	0.31622776601683794	0.2872133278819995	values[index] < previous	_
org.apache.commons.math.linear.OpenMapRealVector#int#getDimension#?#422	0.2773500981126146	0.2773500981126146	0.2773500981126146	(virtualSize)!= 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#int#key#?#535	0.25	0.2672612419124244	0.2586306209562122	(keys[current])<= 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,OpenIntToDoubleHashMap#144	0.2581988897471611	0.2581988897471611	0.2581988897471611	count < length	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#remove#?,int#357	0.2581988897471611	0.2581988897471611	0.2581988897471611	(doRemove(index))> 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#double#value#?#546	0.24253562503633297	0.24253562503633297	0.24253562503633297	!(referenceCount != count)	_
org.apache.commons.math.linear.OpenMapRealVector#?#OpenMapRealVector#?,OpenMapRealVector#182	0.4472135954999579	0.0	0.22360679774997896		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#get#?,int#187	0.21320071635561041	0.22941573387056174	0.22130822511308607	(missingEntries)<= 0	_
org.apache.commons.math.linear.OpenMapRealVector#OpenIntToDoubleHashMap#getEntries#?#208	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#put#?,int,double#428	0.13483997249264842	0.15617376188860607	0.14550686719062725	(previous)== 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#125	0.13245323570650439	0.15811388300841897	0.14528355935746168	this.missingEntries >= missingEntries	_
org.apache.commons.math.linear.OpenMapRealVector#boolean#isDefaultValue#?,double#220	0.2773500981126146	0.0	0.1386750490563073		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int[],byte[],int,int#275	0.13483997249264842	0.1386750490563073	0.13675751077447784	(index)== 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int#259	0.13483997249264842	0.1386750490563073	0.13675751077447784	(findInsertionIndex(keys,states,key,mask))== 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#hashOf#?,int#479	0.13245323570650439	0.13736056394868904	0.1349068998275967	(h ^ (h >>> 7) ^ (h >>> 4))== 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#159	0.13483997249264842	0.13483997249264842	0.13483997249264842	(capacity)> 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#boolean#hasNext#?#518	0.24253562503633297	0.0	0.12126781251816648		_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#?#Iterator#?#504	0.23570226039551587	0.0	0.11785113019775793		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#Iterator#iterator#?#241	0.23570226039551587	0.0	0.11785113019775793		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,double#103	0.15811388300841897	0.0	0.07905694150420949		_
org.apache.commons.math.util.FastMath#double#ceil#?,double#3757	0.07738232325341368	0.08058229640253803	0.07898230982797586	(y)!= 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#boolean#containsKey#?,int,int#385	0.13736056394868904	0.0	0.06868028197434452		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#boolean#shouldGrowTable#?#469	0.13483997249264842	0.0	0.06741998624632421		_
org.apache.commons.math.util.FastMath#double#floor#?,double#3741	0.0576390417704235	0.058025885318565944	0.05783246354449472	(y)> 0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3410	0.03485780871878749	0.0419960525565808	0.03842693063768415	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)== 0	_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1143	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1179	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1860	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1781	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1245	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1086	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1049	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1067	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1804	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1022	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1929	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1095	0.0	0.0	0.0		_
