line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#sample#?#193	0.16666666666666663	1.0	0.5833333333333333	(inverseCumulativeProbability(random.nextDouble()))< 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalMean#?#268	0.1428571428571429	1.0	0.5714285714285714	((double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize())< 0	GT
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#138	0.06666666666666665	1.0	0.5333333333333333	upper <= lower	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#110	0.09999999999999998	0.5	0.3	this.sampleSize < numberOfSuccesses	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#176	0.045454545454545414	0.5	0.2727272727272727	(upper)< 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#295	0.1428571428571429	0.25	0.19642857142857145	((n * m * (N - n)* (N - m)) / (N * N * (N - 1)))> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#283	0.1428571428571429	0.25	0.19642857142857145	(numericalVariance)!= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportLowerBound#?#308	0.1428571428571429	0.19999999999999996	0.17142857142857143	(FastMath.max(0,getSampleSize() + getNumberOfSuccesses() - getPopulationSize()))<= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportUpperBound#?#321	0.1428571428571429	0.16666666666666663	0.15476190476190477	(FastMath.min(getNumberOfSuccesses(),getSampleSize()))> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getNumberOfSuccesses#?#161	0.11111111111111116	0.125	0.11805555555555558	(numberOfSuccesses)!= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSampleSize#?#179	0.11111111111111116	0.11111111111111116	0.11111111111111116	(sampleSize)>= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getPopulationSize#?#170	0.11111111111111116	0.11111111111111116	0.11111111111111116	(populationSize)> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,int,int,int#63	0.09999999999999998	0.0	0.04999999999999999		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#101	0.01851851851851849	0.023809523809523836	0.021164021164021163	v[indexRm1] <= z1	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#?#AbstractIntegerDistribution#?,RandomGenerator#72	0.020408163265306145	0.0	0.010204081632653073		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.006451612903225823	0.006451612903225823	0.006451612903225823	((high | low) * 0x1.0p-52d)!= 0	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3497	0.003215434083601254	0.007633587786259555	0.005424510934930404	((a <= b) ? b : a)== 0	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#154	0.0049261083743842304	0.0049261083743842304	0.004308072637376592	seed == null	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#115	0.0036900369003689537	0.004310344827586188	0.004000190863977571	i2[j] >= w	_
org.apache.commons.math3.random.RandomDataImpl#?#RandomDataImpl#?#115	0.005025125628140725	0.0	0.0025125628140703626		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int#72	0.0049261083743842304	0.0	0.0024630541871921152		_
org.apache.commons.math3.random.Well19937c#?#Well19937c#?#57	0.0049261083743842304	0.0	0.0024630541871921152		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,long#179	0.004587155963302725	0.0	0.0022935779816513624		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#195	0.0031250000000000444	0.0	0.0015625000000000222		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#41	0.0031250000000000444	0.0	0.0015625000000000222		_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3429	0.0013333333333332975	0.001335113484646211	0.0013342234089897542	((a <= b) ? a : b)!= 0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#385	8.196721311475308E-4	8.481764206954567E-4	8.339242759214938E-4	(Math.sqrt(a))> 0	_
