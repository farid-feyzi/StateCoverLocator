line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#138	0.07142857142857142	Infinity	Infinity	upper <= lower	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#136	0.07142857142857142	Infinity	Infinity	tmp <= p	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalMean#?#268	0.16666666666666666	Infinity	Infinity	((double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize())< 0	GT
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#sample#?#193	0.2	Infinity	Infinity	(inverseCumulativeProbability(random.nextDouble()))< 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#110	0.1111111111111111	1.0	0.5555555555555556	this.sampleSize < numberOfSuccesses	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#108	0.1111111111111111	1.0	0.5555555555555556	this.numberOfSuccesses > sampleSize	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#142	0.047619047619047616	1.0	0.5238095238095238	(solveInverseCumulativeProbability(p,lower,upper))< 0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#176	0.047619047619047616	1.0	0.5238095238095238	(upper)< 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#283	0.16666666666666666	0.3333333333333333	0.25	(numericalVariance)!= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#295	0.16666666666666666	0.3333333333333333	0.25	((n * m * (N - n)* (N - m)) / (N * N * (N - 1)))> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportLowerBound#?#308	0.16666666666666666	0.25	0.20833333333333331	(FastMath.max(0,getSampleSize() + getNumberOfSuccesses() - getPopulationSize()))<= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportUpperBound#?#321	0.16666666666666666	0.2	0.18333333333333335	(FastMath.min(getNumberOfSuccesses(),getSampleSize()))> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#279	0.16666666666666666	0.16666666666666666	0.16666666666666666	!numericalVarianceIsCalculated	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getNumberOfSuccesses#?#161	0.125	0.14285714285714285	0.13392857142857142	(numberOfSuccesses)!= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getPopulationSize#?#170	0.125	0.125	0.125	(populationSize)> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSampleSize#?#179	0.125	0.125	0.125	(sampleSize)>= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#109	0.1111111111111111	0.125	0.11805555555555555	this.populationSize != sampleSize	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#103	0.1	0.1111111111111111	0.10555555555555556	!(sampleSize > populationSize)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#86	0.1	0.1	0.1	!(populationSize <= 0)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#94	0.1	0.1	0.1	!(sampleSize < 0)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#99	0.1	0.1	0.1	!(numberOfSuccesses > populationSize)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#90	0.1	0.1	0.1	!(numberOfSuccesses < 0)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#280	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#281	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#292	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#293	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#294	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#135	0.07142857142857142	0.07692307692307693	0.07417582417582418	k >= sigma	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#132	0.07142857142857142	0.07692307692307693	0.07417582417582418	!(tmp > lower)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#137	0.07142857142857142	0.07142857142857142	0.07142857142857142	tmp < upper	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#129	0.047619047619047616	0.07142857142857142	0.05952380952380952	chebyshevApplies	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,int,int,int#63	0.1111111111111111	0.0	0.05555555555555555		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#84	0.1	0.0	0.05		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#119	0.034482758620689655	0.047619047619047616	0.041050903119868636	!(p == 1.0)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#130	0.07142857142857142	0.0	0.03571428571428571		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#131	0.07142857142857142	0.0	0.03571428571428571		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#106	0.034482758620689655	0.034482758620689655	0.034482758620689655	!(p == 0.0)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#109	0.034482758620689655	0.034482758620689655	0.034482758620689655	!(lower == Integer.MIN_VALUE)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#101	0.027777777777777776	0.034482758620689655	0.031130268199233715	!(p < 0.0 || p > 1.0)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#125	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#126	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#127	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#101	0.018867924528301886	0.024390243902439025	0.021629084215370457	v[indexRm1] <= z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#100	0.018867924528301886	0.024390243902439025	0.021629084215370457	v[index] <= z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#109	0.018867924528301886	0.024390243902439025	0.021629084215370457	z4 < z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#108	0.018867924528301886	0.024390243902439025	0.021629084215370457	z4 < z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#103	0.018867924528301886	0.024390243902439025	0.021629084215370457	index < z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#111	0.018867924528301886	0.018867924528301886	0.018867924528301886	(z4 >>> (32 - bits))>= 0	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#102	0.018867924528301886	0.018867924528301886	0.018867924528301886	v[indexRm2] <= vM3	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#118	0.034482758620689655	0.0	0.017241379310344827		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#114	0.034482758620689655	0.0	0.017241379310344827		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#105	0.034482758620689655	0.0	0.017241379310344827		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#?#AbstractIntegerDistribution#?,RandomGenerator#72	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#98	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#96	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#97	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#90	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#91	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#94	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#95	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#92	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#86	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#87	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#89	0.018867924528301886	0.0	0.009433962264150943		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.006493506493506494	0.006493506493506494	0.006493506493506494	((high | low) * 0x1.0p-52d)!= 0	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3497	0.0032258064516129032	0.007692307692307693	0.005459057071960298	((a <= b) ? b : a)== 0	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#154	0.003703703703703704	0.0049504950495049506	0.004327099376604327	seed == null	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#115	0.003703703703703704	0.004329004329004329	0.004016354016354017	i2[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#114	0.003703703703703704	0.004329004329004329	0.004016354016354017	i1[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#113	0.003703703703703704	0.004329004329004329	0.004016354016354017	iRm2[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#112	0.003703703703703704	0.004329004329004329	0.004016354016354017	iRm1[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#116	0.003703703703703704	0.004329004329004329	0.004016354016354017	i3[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#102	0.003703703703703704	0.003703703703703704	0.003703703703703704	this.index <= m2	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#111	0.003703703703703704	0.003703703703703704	0.003703703703703704	!(j < r)	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#162	0.003703703703703704	0.003703703703703704	0.003703703703703704	i < v.length	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#161	0.003703703703703704	0.003703703703703704	0.003703703703703704	seed.length < v.length	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#164	0.003703703703703704	0.003703703703703704	0.003703703703703704	v[i] <= i	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#90	0.006493506493506494	0.0	0.003246753246753247		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#91	0.006493506493506494	0.0	0.003246753246753247		_
org.apache.commons.math3.random.RandomDataImpl#?#RandomDataImpl#?#115	0.005050505050505051	0.0	0.0025252525252525255		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#156	0.0049504950495049506	0.0	0.0024752475247524753		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#155	0.0049504950495049506	0.0	0.0024752475247524753		_
org.apache.commons.math3.random.Well19937c#?#Well19937c#?#57	0.0049504950495049506	0.0	0.0024752475247524753		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int#72	0.0049504950495049506	0.0	0.0024752475247524753		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,long#179	0.004608294930875576	0.0	0.002304147465437788		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#101	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#100	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#159	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#109	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#106	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#107	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#108	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#110	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#163	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#168	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#169	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#120	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#99	0.003703703703703704	0.0	0.001851851851851852		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#41	0.003134796238244514	0.0	0.001567398119122257		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#195	0.003134796238244514	0.0	0.001567398119122257		_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3429	0.0013351134846461949	0.001336898395721925	0.0013360059401840599	((a <= b) ? a : b)!= 0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#385	8.203445447087777E-4	8.488964346349745E-4	8.346204896718761E-4	(Math.sqrt(a))> 0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#158	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#159	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#133	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#120	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#87	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#95	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#91	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#173	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#171	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#170	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#104	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#100	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#169	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#107	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#166	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#160	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#102	0.0	0.0	0.0		_
