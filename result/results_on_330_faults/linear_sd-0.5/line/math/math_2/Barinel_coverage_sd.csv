line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#sample#?#193	0.16666666666666663	1.0	0.5833333333333333	(inverseCumulativeProbability(random.nextDouble()))< 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalMean#?#268	0.1428571428571429	1.0	0.5714285714285714	((double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize())< 0	GT
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#138	0.06666666666666665	1.0	0.5333333333333333	upper <= lower	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#136	0.06666666666666665	1.0	0.5333333333333333	tmp <= p	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#110	0.09999999999999998	0.5	0.3	this.sampleSize < numberOfSuccesses	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#108	0.09999999999999998	0.5	0.3	this.numberOfSuccesses > sampleSize	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#142	0.045454545454545414	0.5	0.2727272727272727	(solveInverseCumulativeProbability(p,lower,upper))< 0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#176	0.045454545454545414	0.5	0.2727272727272727	(upper)< 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#283	0.1428571428571429	0.25	0.19642857142857145	(numericalVariance)!= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#295	0.1428571428571429	0.25	0.19642857142857145	((n * m * (N - n)* (N - m)) / (N * N * (N - 1)))> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportLowerBound#?#308	0.1428571428571429	0.19999999999999996	0.17142857142857143	(FastMath.max(0,getSampleSize() + getNumberOfSuccesses() - getPopulationSize()))<= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportUpperBound#?#321	0.1428571428571429	0.16666666666666663	0.15476190476190477	(FastMath.min(getNumberOfSuccesses(),getSampleSize()))> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#279	0.1428571428571429	0.1428571428571429	0.1428571428571429	!numericalVarianceIsCalculated	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getNumberOfSuccesses#?#161	0.11111111111111116	0.125	0.11805555555555558	(numberOfSuccesses)!= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getPopulationSize#?#170	0.11111111111111116	0.11111111111111116	0.11111111111111116	(populationSize)> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSampleSize#?#179	0.11111111111111116	0.11111111111111116	0.11111111111111116	(sampleSize)>= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#109	0.09999999999999998	0.11111111111111116	0.10555555555555557	this.populationSize != sampleSize	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#103	0.09090909090909094	0.09999999999999998	0.09545454545454546	!(sampleSize > populationSize)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#86	0.09090909090909094	0.09090909090909094	0.09090909090909094	!(populationSize <= 0)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#94	0.09090909090909094	0.09090909090909094	0.09090909090909094	!(sampleSize < 0)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#99	0.09090909090909094	0.09090909090909094	0.09090909090909094	!(numberOfSuccesses > populationSize)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#90	0.09090909090909094	0.09090909090909094	0.09090909090909094	!(numberOfSuccesses < 0)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#280	0.1428571428571429	0.0	0.07142857142857145		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#281	0.1428571428571429	0.0	0.07142857142857145		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#292	0.1428571428571429	0.0	0.07142857142857145		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#293	0.1428571428571429	0.0	0.07142857142857145		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#294	0.1428571428571429	0.0	0.07142857142857145		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#135	0.06666666666666665	0.0714285714285714	0.06904761904761902	k >= sigma	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#132	0.06666666666666665	0.0714285714285714	0.06904761904761902	!(tmp > lower)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#137	0.06666666666666665	0.06666666666666665	0.06666666666666665	tmp < upper	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#129	0.045454545454545414	0.06666666666666665	0.05606060606060603	chebyshevApplies	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,int,int,int#63	0.09999999999999998	0.0	0.04999999999999999		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#84	0.09090909090909094	0.0	0.04545454545454547		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#119	0.033333333333333326	0.045454545454545414	0.03939393939393937	!(p == 1.0)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#130	0.06666666666666665	0.0	0.033333333333333326		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#131	0.06666666666666665	0.0	0.033333333333333326		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#106	0.033333333333333326	0.033333333333333326	0.033333333333333326	!(p == 0.0)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#109	0.033333333333333326	0.033333333333333326	0.033333333333333326	!(lower == Integer.MIN_VALUE)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#101	0.027027027027026973	0.033333333333333326	0.03018018018018015	!(p < 0.0 || p > 1.0)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#125	0.045454545454545414	0.0	0.022727272727272707		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#126	0.045454545454545414	0.0	0.022727272727272707		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#127	0.045454545454545414	0.0	0.022727272727272707		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#101	0.01851851851851849	0.023809523809523836	0.021164021164021163	v[indexRm1] <= z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#100	0.01851851851851849	0.023809523809523836	0.021164021164021163	v[index] <= z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#109	0.01851851851851849	0.023809523809523836	0.021164021164021163	z4 < z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#108	0.01851851851851849	0.023809523809523836	0.021164021164021163	z4 < z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#103	0.01851851851851849	0.023809523809523836	0.021164021164021163	index < z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#111	0.01851851851851849	0.01851851851851849	0.01851851851851849	(z4 >>> (32 - bits))>= 0	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#102	0.01851851851851849	0.01851851851851849	0.01851851851851849	v[indexRm2] <= vM3	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#118	0.033333333333333326	0.0	0.016666666666666663		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#114	0.033333333333333326	0.0	0.016666666666666663		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#105	0.033333333333333326	0.0	0.016666666666666663		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#?#AbstractIntegerDistribution#?,RandomGenerator#72	0.020408163265306145	0.0	0.010204081632653073		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#98	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#96	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#97	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#90	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#91	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#94	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#95	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#92	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#86	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#87	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#89	0.01851851851851849	0.0	0.009259259259259245		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.006451612903225823	0.006451612903225823	0.006451612903225823	((high | low) * 0x1.0p-52d)!= 0	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3497	0.003215434083601254	0.007633587786259555	0.005424510934930404	((a <= b) ? b : a)== 0	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#154	0.0036900369003689537	0.0049261083743842304	0.004308072637376592	seed == null	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#115	0.0036900369003689537	0.004310344827586188	0.004000190863977571	i2[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#114	0.0036900369003689537	0.004310344827586188	0.004000190863977571	i1[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#113	0.0036900369003689537	0.004310344827586188	0.004000190863977571	iRm2[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#112	0.0036900369003689537	0.004310344827586188	0.004000190863977571	iRm1[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#116	0.0036900369003689537	0.004310344827586188	0.004000190863977571	i3[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#102	0.0036900369003689537	0.0036900369003689537	0.0036900369003689537	this.index <= m2	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#111	0.0036900369003689537	0.0036900369003689537	0.0036900369003689537	!(j < r)	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#162	0.0036900369003689537	0.0036900369003689537	0.0036900369003689537	i < v.length	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#161	0.0036900369003689537	0.0036900369003689537	0.0036900369003689537	seed.length < v.length	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#164	0.0036900369003689537	0.0036900369003689537	0.0036900369003689537	v[i] <= i	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#90	0.006451612903225823	0.0	0.0032258064516129115		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#91	0.006451612903225823	0.0	0.0032258064516129115		_
org.apache.commons.math3.random.RandomDataImpl#?#RandomDataImpl#?#115	0.005025125628140725	0.0	0.0025125628140703626		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#156	0.0049261083743842304	0.0	0.0024630541871921152		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#155	0.0049261083743842304	0.0	0.0024630541871921152		_
org.apache.commons.math3.random.Well19937c#?#Well19937c#?#57	0.0049261083743842304	0.0	0.0024630541871921152		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int#72	0.0049261083743842304	0.0	0.0024630541871921152		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,long#179	0.004587155963302725	0.0	0.0022935779816513624		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#101	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#100	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#159	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#109	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#106	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#107	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#108	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#110	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#163	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#168	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#169	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#120	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#99	0.0036900369003689537	0.0	0.0018450184501844769		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#41	0.0031250000000000444	0.0	0.0015625000000000222		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#195	0.0031250000000000444	0.0	0.0015625000000000222		_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3429	0.0013333333333332975	0.001335113484646211	0.0013342234089897542	((a <= b) ? a : b)!= 0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#385	8.196721311475308E-4	8.481764206954567E-4	8.339242759214938E-4	(Math.sqrt(a))> 0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#158	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#159	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#133	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#120	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#87	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#95	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#91	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#173	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#171	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#170	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#104	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#100	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#169	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#107	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#166	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#160	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#102	0.0	0.0	0.0		_
