line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#sample#?#193	0.9988518943742825	1.0	0.9994259471871412	(inverseCumulativeProbability(random.nextDouble()))< 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalMean#?#268	0.9986225895316804	1.0	0.9993112947658402	((double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize())< 0	GT
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#283	0.9986225895316804	0.9993108201240524	0.9989667048278663	(numericalVariance)!= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#295	0.9986225895316804	0.9993108201240524	0.9989667048278663	((n * m * (N - n)* (N - m)) / (N * N * (N - 1)))> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#110	0.9979353062629043	0.9997701677775224	0.9988527370202134	this.sampleSize < numberOfSuccesses	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#108	0.9979353062629043	0.9997701677775224	0.9988527370202134	this.numberOfSuccesses > sampleSize	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportLowerBound#?#308	0.9986225895316804	0.9990813045475424	0.9988519470396113	(FastMath.max(0,getSampleSize() + getNumberOfSuccesses() - getPopulationSize()))<= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportUpperBound#?#321	0.9986225895316804	0.9988518943742825	0.9987372419529814	(FastMath.min(getNumberOfSuccesses(),getSampleSize()))> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#279	0.9986225895316804	0.9986225895316804	0.9986225895316804	!numericalVarianceIsCalculated	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#138	0.9967919340054995	1.0	0.9983959670027498	upper <= lower	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#136	0.9967919340054995	1.0	0.9983959670027498	tmp <= p	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getNumberOfSuccesses#?#161	0.9981642955484167	0.9983933899472115	0.9982788427478141	(numberOfSuccesses)!= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getPopulationSize#?#170	0.9981642955484167	0.9981642955484167	0.9981642955484167	(populationSize)> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSampleSize#?#179	0.9981642955484167	0.9981642955484167	0.9981642955484167	(sampleSize)>= 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#109	0.9979353062629043	0.9981642955484167	0.9980498009056604	this.populationSize != sampleSize	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#103	0.9977064220183487	0.9979353062629043	0.9978208641406265	!(sampleSize > populationSize)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#86	0.9977064220183487	0.9977064220183487	0.9977064220183487	!(populationSize <= 0)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#94	0.9977064220183487	0.9977064220183487	0.9977064220183487	!(sampleSize < 0)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#99	0.9977064220183487	0.9977064220183487	0.9977064220183487	!(numberOfSuccesses > populationSize)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#90	0.9977064220183487	0.9977064220183487	0.9977064220183487	!(numberOfSuccesses < 0)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#142	0.9951956074124915	0.9997701677775224	0.9974828875950069	(solveInverseCumulativeProbability(p,lower,upper))< 0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#176	0.9951956074124915	0.9997701677775224	0.9974828875950069	(upper)< 0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#135	0.9967919340054995	0.9970203988081595	0.9969061664068295	k >= sigma	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#132	0.9967919340054995	0.9970203988081595	0.9969061664068295	!(tmp > lower)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#137	0.9967919340054995	0.9967919340054995	0.9967919340054995	tmp < upper	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#129	0.9951956074124915	0.9967919340054995	0.9959937707089954	chebyshevApplies	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#119	0.9933774834437087	0.9951956074124915	0.9942865454281	!(p == 1.0)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#106	0.9933774834437087	0.9933774834437087	0.9933774834437087	!(p == 0.0)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#109	0.9933774834437087	0.9933774834437087	0.9933774834437087	!(lower == Integer.MIN_VALUE)	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#101	0.9917920656634747	0.9933774834437087	0.9925847745535916	!(p < 0.0 || p > 1.0)	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#101	0.9879627526686351	0.9906627191983602	0.9893127359334977	v[indexRm1] <= z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#100	0.9879627526686351	0.9906627191983602	0.9893127359334977	v[index] <= z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#109	0.9879627526686351	0.9906627191983602	0.9893127359334977	z4 < z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#108	0.9879627526686351	0.9906627191983602	0.9893127359334977	z4 < z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#103	0.9879627526686351	0.9906627191983602	0.9893127359334977	index < z1	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#111	0.9879627526686351	0.9879627526686351	0.9879627526686351	(z4 >>> (32 - bits))>= 0	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#102	0.9879627526686351	0.9879627526686351	0.9879627526686351	v[indexRm2] <= vM3	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.9658081705150977	0.9658081705150977	0.9658081705150977	((high | low) * 0x1.0p-52d)!= 0	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3497	0.9334763948497854	0.9709821428571429	0.9522292688534642	((a <= b) ? b : a)== 0	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#154	0.9415584415584416	0.9556239015817222	0.9485911715700819	seed == null	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#115	0.9415584415584416	0.9495743287491814	0.9455663851538114	i2[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#114	0.9415584415584416	0.9495743287491814	0.9455663851538114	i1[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#113	0.9415584415584416	0.9495743287491814	0.9455663851538114	iRm2[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#112	0.9415584415584416	0.9495743287491814	0.9455663851538114	iRm1[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#116	0.9415584415584416	0.9495743287491814	0.9455663851538114	i3[j] >= w	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#102	0.9415584415584416	0.9415584415584416	0.9415584415584416	this.index <= m2	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#111	0.9415584415584416	0.9415584415584416	0.9415584415584416	!(j < r)	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#162	0.9415584415584416	0.9415584415584416	0.9415584415584416	i < v.length	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#161	0.9415584415584416	0.9415584415584416	0.9415584415584416	seed.length < v.length	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#164	0.9415584415584416	0.9415584415584416	0.9415584415584416	v[i] <= i	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3429	0.8531084526377721	0.853275794429188	0.8531921235334801	((a <= b) ? a : b)!= 0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#385	0.781109714490932	0.786903039073806	0.7840063767823691	(Math.sqrt(a))> 0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#280	0.9986225895316804	0.0	0.4993112947658402		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#281	0.9986225895316804	0.0	0.4993112947658402		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#292	0.9986225895316804	0.0	0.4993112947658402		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#293	0.9986225895316804	0.0	0.4993112947658402		_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#294	0.9986225895316804	0.0	0.4993112947658402		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,int,int,int#63	0.9979353062629043	0.0	0.49896765313145214		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#84	0.9977064220183487	0.0	0.49885321100917435		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#130	0.9967919340054995	0.0	0.49839596700274974		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#131	0.9967919340054995	0.0	0.49839596700274974		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#125	0.9951956074124915	0.0	0.49759780370624573		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#126	0.9951956074124915	0.0	0.49759780370624573		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#127	0.9951956074124915	0.0	0.49759780370624573		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#118	0.9933774834437087	0.0	0.49668874172185434		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#114	0.9933774834437087	0.0	0.49668874172185434		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#105	0.9933774834437087	0.0	0.49668874172185434		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#?#AbstractIntegerDistribution#?,RandomGenerator#72	0.9890859481582538	0.0	0.4945429740791269		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#98	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#96	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#97	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#90	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#91	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#94	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#95	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#92	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#86	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#87	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#89	0.9879627526686351	0.0	0.49398137633431755		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#90	0.9658081705150977	0.0	0.48290408525754885		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#91	0.9658081705150977	0.0	0.48290408525754885		_
org.apache.commons.math3.random.RandomDataImpl#?#RandomDataImpl#?#115	0.9564643799472295	0.0	0.4782321899736148		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#156	0.9556239015817222	0.0	0.4778119507908611		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#155	0.9556239015817222	0.0	0.4778119507908611		_
org.apache.commons.math3.random.Well19937c#?#Well19937c#?#57	0.9556239015817222	0.0	0.4778119507908611		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int#72	0.9556239015817222	0.0	0.4778119507908611		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,long#179	0.9524852200569301	0.0	0.4762426100284651		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#101	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#100	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#159	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#109	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#106	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#107	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#108	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#110	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#163	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#168	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#169	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#120	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#99	0.9415584415584416	0.0	0.4707792207792208		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#41	0.9316770186335405	0.0	0.46583850931677023		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#195	0.9316770186335405	0.0	0.46583850931677023		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#158	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#159	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#133	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#120	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#87	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#95	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#91	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#173	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#171	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#170	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#104	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#100	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#169	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#107	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#166	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#160	0.0	0.0	0.0		_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#102	0.0	0.0	0.0		_
