line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#87	Infinity	0.0	Infinity		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#827	0.0625	Infinity	Infinity	vals[i] == val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#751	1.0	1.0	1.0	negccov < negminresidualvariance	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#750	0.06666666666666667	1.0	0.5333333333333333	negccov > negcovMax	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#582	0.0625	1.0	0.53125	lambda <= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#612	0.0625	1.0	0.53125	mueff > sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#618	0.0625	1.0	0.53125	damps >= sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#559	0.05263157894736842	1.0	0.5263157894736842	!(inputSigma != null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#583	1.0	0.0	0.5		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#932	0.3333333333333333	0.5	0.41666666666666663	res[i] <= diff	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#930	0.3333333333333333	0.3333333333333333	0.3333333333333333	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#956	0.3333333333333333	0.3333333333333333	0.3333333333333333	!(i < x.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#958	0.3333333333333333	0.3333333333333333	0.3333333333333333	res[i] != diff	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1018	0.3333333333333333	0.3333333333333333	0.3333333333333333	!(x[i] > 1.0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1015	0.3333333333333333	0.3333333333333333	0.3333333333333333	!(i < x.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1016	0.3333333333333333	0.3333333333333333	0.3333333333333333	!(x[i] < 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1038	0.3333333333333333	0.3333333333333333	0.3333333333333333	(isMinimize ? penalty : -penalty)>= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1036	0.3333333333333333	0.3333333333333333	0.3333333333333333	penalty >= diff	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1034	0.3333333333333333	0.3333333333333333	0.3333333333333333	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#872	0.0625	0.5	0.28125	(Double.compare(value,o.value))== 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#314	0.04	0.5	0.27	this.lambda == checkFeasableCount	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#319	0.04	0.5	0.27	this.diagonalOnly == lambda	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#320	0.04	0.5	0.27	this.checkFeasableCount == lambda	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#246	0.5	0.0	0.25		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#253	0.5	0.0	0.25		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#541	0.2	0.25	0.225	!(Double.isInfinite(boundaries[1][i] - boundaries[0][i]))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#540	0.2	0.25	0.225	!(i < lB.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#926	0.0625	0.3333333333333333	0.19791666666666666	!(boundaries == null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#969	0.0625	0.3333333333333333	0.19791666666666666	boundaries != null && isRepairMode	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#952	0.0625	0.3333333333333333	0.19791666666666666	!(boundaries == null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#521	0.14285714285714285	0.2	0.17142857142857143	!(i < lB.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#529	0.14285714285714285	0.2	0.17142857142857143	!(hasInfiniteBounds)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#934	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#931	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#929	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#955	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#957	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#960	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1024	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1021	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#970	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#971	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1014	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1035	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1033	0.3333333333333333	0.0	0.16666666666666666		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#522	0.14285714285714285	0.16666666666666666	0.15476190476190477	!(Double.isInfinite(lB[i]) || Double.isInfinite(uB[i]))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#537	0.2	0.0	0.1		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#535	0.2	0.0	0.1		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#536	0.2	0.0	0.1		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#512	0.045454545454545456	0.14285714285714285	0.09415584415584416	!Double.isInfinite(lB[i]) || !Double.isInfinite(uB[i])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#520	0.045454545454545456	0.14285714285714285	0.09415584415584416	hasFiniteBounds	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#115	0.08333333333333333	0.1	0.09166666666666667	!(v > hi)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#112	0.08333333333333333	0.1	0.09166666666666667	!(i < dim)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#109	0.08333333333333333	0.08333333333333333	0.08333333333333333	!(upper.length != dim)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#103	0.07692307692307693	0.08333333333333333	0.08012820512820512	!(v < lo)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#100	0.07692307692307693	0.08333333333333333	0.08012820512820512	!(i < dim)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#97	0.06666666666666667	0.07692307692307693	0.07179487179487179	!(lower.length != dim)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#515	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#514	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#667	0.0625	0.07142857142857142	0.06696428571428571	!(hsig)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#711	0.022727272727272728	0.1111111111111111	0.06691919191919192	tmp[j] > maxAbsoluteValue	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1110	0.06666666666666667	0.06666666666666667	0.06666666666666667	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1111	0.06666666666666667	0.06666666666666667	0.06666666666666667	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1351	0.06666666666666667	0.06666666666666667	0.06666666666666667	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1352	0.06666666666666667	0.06666666666666667	0.06666666666666667	reverse[i] == i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#789	0.06666666666666667	0.06666666666666667	0.06666666666666667	ccov1 + ccovmu + negccov > 0 && (iterations % 1. / (ccov1 + ccovmu + negccov) / dimension / 10.) < 1.	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#757	0.06666666666666667	0.06666666666666667	0.06666666666666667	oldFac != negminresidualvariance	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#798	0.06666666666666667	0.06666666666666667	0.06666666666666667	!(min(diagD) <= 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1141	0.06666666666666667	0.06666666666666667	0.06666666666666667	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1140	0.06666666666666667	0.06666666666666667	0.06666666666666667	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1340	0.06666666666666667	0.06666666666666667	0.06666666666666667	inverse[indices[i]] >= i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1159	0.06666666666666667	0.06666666666666667	0.06666666666666667	d[0][c] == sum	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1156	0.06666666666666667	0.06666666666666667	0.06666666666666667	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1154	0.06666666666666667	0.06666666666666667	0.06666666666666667	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#718	0.06666666666666667	0.06666666666666667	0.06666666666666667	ccov1 + ccovmu > 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1339	0.06666666666666667	0.06666666666666667	0.06666666666666667	!(i < indices.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#725	0.06666666666666667	0.06666666666666667	0.06666666666666667	oldFac > negccov	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#726	0.06666666666666667	0.06666666666666667	0.06666666666666667	isActiveCMA	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#728	0.06666666666666667	0.06666666666666667	0.06666666666666667	negccov < oldFac	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#808	0.06666666666666667	0.06666666666666667	0.06666666666666667	!(max(diagD) > 1e14 * min(diagD))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#589	0.0625	0.06666666666666667	0.06458333333333333	sigmaArray[i][0] != range	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#122	0.02702702702702703	0.1	0.06351351351351352	!(lower == null)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#130	0.02702702702702703	0.1	0.06351351351351352	!(upper == null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1376	0.0625	0.0625	0.0625	r < size	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1377	0.0625	0.0625	0.0625	!(c < popSize)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#867	0.0625	0.0625	0.0625	this.index >= index	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#866	0.0625	0.0625	0.0625	this.value == value	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1170	0.0625	0.0625	0.0625	m.getColumnDimension() == 1	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1172	0.0625	0.0625	0.0625	i < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1096	0.0625	0.0625	0.0625	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1095	0.0625	0.0625	0.0625	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1206	0.0625	0.0625	0.0625	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#840	0.0625	0.0625	0.0625	i < doubles.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#845	0.0625	0.0625	0.0625	i < doubles.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#846	0.0625	0.0625	0.0625	indices[i] == i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1295	0.0625	0.0625	0.0625	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1294	0.0625	0.0625	0.0625	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1298	0.0625	0.0625	0.0625	min <= e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1297	0.0625	0.0625	0.0625	min > e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1280	0.0625	0.0625	0.0625	max < e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1281	0.0625	0.0625	0.0625	max >= e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1285	0.0625	0.0625	0.0625	(max)>= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#587	0.0625	0.0625	0.0625	i < guess.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1220	0.0625	0.0625	0.0625	r < m	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1277	0.0625	0.0625	0.0625	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1278	0.0625	0.0625	0.0625	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1219	0.0625	0.0625	0.0625	!(r < n)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1050	0.0625	0.0625	0.0625	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1051	0.0625	0.0625	0.0625	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#637	0.0625	0.0625	0.0625	normps < sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1125	0.0625	0.0625	0.0625	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1126	0.0625	0.0625	0.0625	!(c < cols.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#645	0.0625	0.0625	0.0625	!(i < historySize)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#646	0.0625	0.0625	0.0625	fitnessHistory[i] != sumwq	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1302	0.0625	0.0625	0.0625	(min)>= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#609	0.0625	0.0625	0.0625	sumwq != sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#608	0.0625	0.0625	0.0625	sumw <= w	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#606	0.0625	0.0625	0.0625	!(i < mu)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1080	0.0625	0.0625	0.0625	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1082	0.0625	0.0625	0.0625	d[r][c] == e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#617	0.0625	0.0625	0.0625	cs <= sumwq	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#615	0.0625	0.0625	0.0625	cc <= sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1079	0.0625	0.0625	0.0625	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#623	0.0625	0.0625	0.0625	ccov1 <= sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#624	0.0625	0.0625	0.0625	ccovmu < sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#627	0.0625	0.0625	0.0625	ccovmuSep <= sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#626	0.0625	0.0625	0.0625	ccov1Sep != sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#628	0.0625	0.0625	0.0625	chiN < sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1312	0.0625	0.0625	0.0625	!(max < m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1316	0.0625	0.0625	0.0625	(max)> 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1311	0.0625	0.0625	0.0625	r < m.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#826	0.0625	0.0625	0.0625	!(i > 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#829	0.0625	0.0625	0.0625	vals[0] >= val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1194	0.0625	0.0625	0.0625	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1325	0.0625	0.0625	0.0625	r < m.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1326	0.0625	0.0625	0.0625	!(min > m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1330	0.0625	0.0625	0.0625	(min)!= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1066	0.0625	0.0625	0.0625	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1065	0.0625	0.0625	0.0625	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1247	0.0625	0.0625	0.0625	c < m * cd	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1246	0.0625	0.0625	0.0625	!(r < n * rd)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#978	0.0625	0.0625	0.0625	(isMinimize ? value : -value)> 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1266	0.0625	0.0625	0.0625	value == start	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1264	0.0625	0.0625	0.0625	r < size	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1265	0.0625	0.0625	0.0625	d[r][0] >= start	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#1006	0.0625	0.0625	0.0625	this.valueRange <= valueRange	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#344	0.058823529411764705	0.058823529411764705	0.058823529411764705	!(i < nRows)	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#339	0.058823529411764705	0.058823529411764705	0.058823529411764705	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#115	0.05555555555555555	0.05555555555555555	0.05555555555555555	row < rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#116	0.05555555555555555	0.05555555555555555	0.05555555555555555	!(col < columnCount)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#108	0.02564102564102564	0.08333333333333333	0.05448717948717949	upper != null	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#511	0.045454545454545456	0.0625	0.05397727272727273	!(i < lB.length)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#128	0.1	0.0	0.05		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#136	0.1	0.0	0.05		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#84	0.05	0.05	0.05	row < rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#85	0.05	0.05	0.05	!(col < columnCount)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#254	0.05	0.05	0.05	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) < 0)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#251	0.05	0.05	0.05	!(i < imagEigenvalues.length)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#252	0.05	0.05	0.05	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) > 0)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#247	0.05	0.05	0.05	cachedD == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#469	0.05	0.05	0.05	i < nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#130	0.047619047619047616	0.047619047619047616	0.047619047619047616	col < columnCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#129	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(row < rowCount)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#96	0.023809523809523808	0.06666666666666667	0.04523809523809524	lower != null	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.043478260869565216	0.043478260869565216	0.043478260869565216	i < diagonal.length	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#114	0.08333333333333333	0.0	0.041666666666666664		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#113	0.08333333333333333	0.0	0.041666666666666664		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#226	0.041666666666666664	0.041666666666666664	0.041666666666666664	!(k < m)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.041666666666666664	0.041666666666666664	0.041666666666666664	cachedV == null	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#316	0.04	0.04	0.04	this.maxIterations == maxIterations	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#317	0.04	0.04	0.04	this.stopFitness >= stopFitness	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#523	0.04	0.04	0.04	!(vector.getDimension() != nRows)	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#527	0.04	0.04	0.04	!(i < nRows)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#102	0.07692307692307693	0.0	0.038461538461538464		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#101	0.07692307692307693	0.0	0.038461538461538464		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#99	0.038461538461538464	0.038461538461538464	0.038461538461538464	Double.isNaN(nextGaussian)	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#106	0.038461538461538464	0.038461538461538464	0.038461538461538464	nextGaussian < r	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#105	0.038461538461538464	0.038461538461538464	0.038461538461538464	random != y	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#110	0.038461538461538464	0.038461538461538464	0.038461538461538464	nextGaussian != random	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#113	0.038461538461538464	0.038461538461538464	0.038461538461538464	(random)>= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#927	0.07142857142857142	0.0	0.03571428571428571		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#953	0.07142857142857142	0.0	0.03571428571428571		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#975	0.07142857142857142	0.0	0.03571428571428571		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#124	0.034482758620689655	0.034482758620689655	0.034482758620689655	i < dim	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#132	0.034482758620689655	0.034482758620689655	0.034482758620689655	!(i < dim)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.034482758620689655	0.034482758620689655	0.034482758620689655	(evaluations.getMaximalCount())>= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1112	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1115	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1354	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1350	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#754	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#753	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#755	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#758	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#780	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#792	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#796	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#797	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#794	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#795	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1142	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1145	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1161	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1139	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#730	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#736	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#733	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#739	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1342	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#737	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#740	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#741	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1155	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#742	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#743	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1157	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#744	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#745	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#746	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1153	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#748	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#719	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#717	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1338	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#724	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#721	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1109	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#815	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#814	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#813	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#556	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1381	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1375	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1378	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1233	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1175	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1171	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1173	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1097	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#839	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1209	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1207	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1094	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1205	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#848	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#841	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#843	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#844	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1100	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#498	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1293	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1296	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#917	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#918	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#668	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#666	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#663	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#662	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#659	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#942	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#592	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#595	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#597	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#596	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#598	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#591	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#588	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#586	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1049	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1224	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1221	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1276	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1279	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1218	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1055	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1052	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#671	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#639	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#635	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#636	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#633	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#634	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1124	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1127	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#631	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#644	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1130	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#641	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#640	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#643	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#642	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#605	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#604	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#607	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#601	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#603	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#602	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1081	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#611	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1078	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1085	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1313	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1310	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1195	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1324	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1327	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#367	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#369	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#364	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#363	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#366	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#365	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#360	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#362	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#968	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#359	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#358	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1070	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1067	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1064	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1248	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1245	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1244	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1243	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1262	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1263	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1261	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1251	0.0625	0.0	0.03125		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1268	0.0625	0.0	0.03125		_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.029411764705882353	0.03225806451612903	0.030834914611005692	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.058823529411764705	0.0	0.029411764705882353		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#347	0.058823529411764705	0.0	0.029411764705882353		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#345	0.058823529411764705	0.0	0.029411764705882353		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#342	0.058823529411764705	0.0	0.029411764705882353		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#343	0.058823529411764705	0.0	0.029411764705882353		_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.02857142857142857	0.029411764705882353	0.028991596638655463	(maximalCount)> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.006802721088435374	0.05	0.02840136054421769	(visitor.end())!= 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.006756756756756757	0.05	0.02837837837837838	(walkInRowOrder(visitor))> 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#121	0.05555555555555555	0.0	0.027777777777777776		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#114	0.05555555555555555	0.0	0.027777777777777776		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.05555555555555555	0.0	0.027777777777777776		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#112	0.05555555555555555	0.0	0.027777777777777776		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#117	0.05555555555555555	0.0	0.027777777777777776		_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#247	0.02702702702702703	0.027777777777777776	0.027402402402402402	y >= mtNext	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#248	0.02702702702702703	0.027777777777777776	0.027402402402402402	mt[N - 1] < bits	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#250	0.02702702702702703	0.027777777777777776	0.027402402402402402	mti >= y	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#233	0.02702702702702703	0.02702702702702703	0.02702702702702703	!(mti >= N)	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#237	0.02702702702702703	0.02702702702702703	0.02702702702702703	mtNext >= mtCurr	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#238	0.02702702702702703	0.02702702702702703	0.02702702702702703	y != mtCurr	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#235	0.02702702702702703	0.02702702702702703	0.02702702702702703	k < N - M	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#239	0.02702702702702703	0.02702702702702703	0.02702702702702703	mt[k] != y	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#243	0.02702702702702703	0.02702702702702703	0.02702702702702703	mtNext != mtCurr	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#244	0.02702702702702703	0.02702702702702703	0.02702702702702703	y >= bits	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#245	0.02702702702702703	0.02702702702702703	0.02702702702702703	mt[k] <= k	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#241	0.02702702702702703	0.02702702702702703	0.02702702702702703	k < N - 1	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#259	0.02702702702702703	0.02702702702702703	0.02702702702702703	y < bits	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#257	0.02702702702702703	0.02702702702702703	0.02702702702702703	y < bits	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#258	0.02702702702702703	0.02702702702702703	0.02702702702702703	y >= bits	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#256	0.02702702702702703	0.02702702702702703	0.02702702702702703	y > bits	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#253	0.02702702702702703	0.02702702702702703	0.02702702702702703	y < bits	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#261	0.02702702702702703	0.02702702702702703	0.02702702702702703	(y >>> (32 - bits))>= 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	0.02564102564102564	0.02564102564102564	0.02564102564102564	!(i < nRows)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#90	0.05	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#79	0.05	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#81	0.05	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.05	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#83	0.05	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#86	0.05	0.0	0.025		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#259	0.05	0.0	0.025		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#249	0.05	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.05	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#466	0.05	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#468	0.05	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#473	0.05	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#470	0.05	0.0	0.025		_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.023809523809523808	0.025	0.024404761904761905	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.023809523809523808	0.025	0.024404761904761905	!(i < rows)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#131	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#135	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#128	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#126	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#582	0.022727272727272728	0.023255813953488372	0.02299154334038055	FastMath.abs(realEigenvalues[i]) > maxAbsoluteValue	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#710	0.022727272727272728	0.022727272727272728	0.022727272727272728	j < n	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#709	0.022727272727272728	0.022727272727272728	0.022727272727272728	!(i < n)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#700	0.022727272727272728	0.022727272727272728	0.022727272727272728	maxAbsoluteValue != 0.0	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#702	0.022727272727272728	0.022727272727272728	0.022727272727272728	!(FastMath.abs(realEigenvalues[i]) < Precision.EPSILON * maxAbsoluteValue)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#701	0.022727272727272728	0.022727272727272728	0.022727272727272728	!(i < n)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#510	0.045454545454545456	0.0	0.022727272727272728		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#519	0.045454545454545456	0.0	0.022727272727272728		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#592	0.022727272727272728	0.022727272727272728	0.022727272727272728	!(FastMath.abs(realEigenvalues[i]) <= Precision.EPSILON * maxAbsoluteValue)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#595	0.022727272727272728	0.022727272727272728	0.022727272727272728	FastMath.abs(e[i]) <= Precision.EPSILON * maxAbsoluteValue	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#596	0.022727272727272728	0.022727272727272728	0.022727272727272728	e[i] != maxAbsoluteValue	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#590	0.022727272727272728	0.022727272727272728	0.022727272727272728	maxAbsoluteValue != 0	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#591	0.022727272727272728	0.022727272727272728	0.022727272727272728	i < n	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#581	0.022727272727272728	0.022727272727272728	0.022727272727272728	!(i < n)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#585	0.022727272727272728	0.022727272727272728	0.022727272727272728	!(FastMath.abs(e[i]) > maxAbsoluteValue)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#507	0.045454545454545456	0.0	0.022727272727272728		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#506	0.045454545454545456	0.0	0.022727272727272728		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#505	0.045454545454545456	0.0	0.022727272727272728		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#612	0.022727272727272728	0.022727272727272728	0.022727272727272728	!(m != j)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#601	0.022727272727272728	0.022727272727272728	0.022727272727272728	j < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#356	0.045454545454545456	0.0	0.022727272727272728		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#668	0.022727272727272728	0.022727272727272728	0.022727272727272728	!(m != j)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#672	0.022727272727272728	0.022727272727272728	0.022727272727272728	i < n	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#681	0.022727272727272728	0.022727272727272728	0.022727272727272728	!(k != i)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#695	0.022727272727272728	0.022727272727272728	0.022727272727272728	FastMath.abs(realEigenvalues[i]) > maxAbsoluteValue	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#694	0.022727272727272728	0.022727272727272728	0.022727272727272728	!(i < n)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.022222222222222223	0.022222222222222223	0.022222222222222223	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.021739130434782608	0.021739130434782608	0.021739130434782608	cachedQt == null	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#220	0.043478260869565216	0.0	0.021739130434782608		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#218	0.043478260869565216	0.0	0.021739130434782608		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#216	0.043478260869565216	0.0	0.021739130434782608		_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#548	0.041666666666666664	0.0	0.020833333333333332		_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#547	0.041666666666666664	0.0	0.020833333333333332		_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#549	0.041666666666666664	0.0	0.020833333333333332		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#231	0.041666666666666664	0.0	0.020833333333333332		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#225	0.041666666666666664	0.0	0.020833333333333332		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#227	0.041666666666666664	0.0	0.020833333333333332		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#224	0.041666666666666664	0.0	0.020833333333333332		_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.020833333333333332	0.020833333333333332	0.020833333333333332	(0)>= 0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.02040816326530612	0.020833333333333332	0.020620748299319726	!(!matrix.isSquare())	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#96	0.02	0.020833333333333332	0.020416666666666666	equals(x,y,eps)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#313	0.04	0.0	0.02		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#315	0.04	0.0	0.02		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#318	0.04	0.0	0.02		_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.04	0.0	0.02		_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#521	0.04	0.0	0.02		_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#528	0.04	0.0	0.02		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#321	0.04	0.0	0.02		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#322	0.04	0.0	0.02		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.02	0.02	0.02	i < nCols	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#288	0.04	0.0	0.02		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#98	0.038461538461538464	0.0	0.019230769230769232		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#104	0.038461538461538464	0.0	0.019230769230769232		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#102	0.038461538461538464	0.0	0.019230769230769232		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#103	0.038461538461538464	0.0	0.019230769230769232		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#101	0.038461538461538464	0.0	0.019230769230769232		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#109	0.038461538461538464	0.0	0.019230769230769232		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#66	0.03571428571428571	0.0	0.017857142857142856		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#65	0.03571428571428571	0.0	0.017857142857142856		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#125	0.034482758620689655	0.0	0.017241379310344827		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#123	0.034482758620689655	0.0	0.017241379310344827		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#131	0.034482758620689655	0.0	0.017241379310344827		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#133	0.034482758620689655	0.0	0.017241379310344827		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1197	0.00641025641025641	0.022222222222222223	0.014316239316239317	yb > ab	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1196	0.00641025641025641	0.022222222222222223	0.014316239316239317	ya < aa	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.0136986301369863	0.0136986301369863	0.0136986301369863	((high | low) * 0x1.0p-52d)>= 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.013513513513513514	0.0136986301369863	0.013606071825249907	(function.value(point))> 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.02702702702702703	0.0	0.013513513513513514		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#140	0.02702702702702703	0.0	0.013513513513513514		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.02702702702702703	0.0	0.013513513513513514		_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#234	0.02702702702702703	0.0	0.013513513513513514		_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#231	0.02702702702702703	0.0	0.013513513513513514		_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#236	0.02702702702702703	0.0	0.013513513513513514		_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#242	0.02702702702702703	0.0	0.013513513513513514		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1179	0.00641025641025641	0.02	0.013205128205128206	yb < xb	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1175	0.00641025641025641	0.02	0.013205128205128206	ab < xb	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1183	0.00641025641025641	0.019230769230769232	0.01282051282051282	aa > x	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1178	0.00641025641025641	0.019230769230769232	0.01282051282051282	ya > xa	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1195	0.00641025641025641	0.019230769230769232	0.01282051282051282	tmp < xa	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1193	0.00641025641025641	0.019230769230769232	0.01282051282051282	ab > aa	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1192	0.00641025641025641	0.019230769230769232	0.01282051282051282	aa < xb	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1187	0.00641025641025641	0.019230769230769232	0.01282051282051282	ya > x	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1174	0.00641025641025641	0.019230769230769232	0.01282051282051282	aa > xa	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1165	0.00641025641025641	0.019230769230769232	0.01282051282051282	xa < xb	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1166	0.00641025641025641	0.019230769230769232	0.01282051282051282	xb > aa	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1199	0.00641025641025641	0.019230769230769232	0.01282051282051282	(ya + yb)< 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#563	0.02564102564102564	0.0	0.01282051282051282		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#566	0.02564102564102564	0.0	0.01282051282051282		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#561	0.02564102564102564	0.0	0.01282051282051282		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.02564102564102564	0.0	0.01282051282051282		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#559	0.02564102564102564	0.0	0.01282051282051282		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.011904761904761904	0.013333333333333334	0.01261904761904762	(relativeThreshold)> 0	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#208	0.025	0.0	0.0125		_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#118	0.025	0.0	0.0125		_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#117	0.025	0.0	0.0125		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.025	0.0	0.0125		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#556	0.025	0.0	0.0125		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#557	0.025	0.0	0.0125		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.012345679012345678	0.012345679012345678	0.012345679012345678	!(f == null)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#134	0.012345679012345678	0.012345679012345678	0.012345679012345678	!(startPoint == null)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#131	0.012345679012345678	0.012345679012345678	0.012345679012345678	!(goalType == null)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1184	0.00641025641025641	0.01818181818181818	0.012296037296037295	ab == yb	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1177	0.00641025641025641	0.01818181818181818	0.012296037296037295	tmp != ab	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1188	0.00641025641025641	0.01818181818181818	0.012296037296037295	yb != ab	_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.024390243902439025	0.0	0.012195121951219513		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.024390243902439025	0.0	0.012195121951219513		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.012048192771084338	0.012048192771084338	0.012048192771084338	(absoluteThreshold)> 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#95	0.023809523809523808	0.0	0.011904761904761904		_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#194	0.023809523809523808	0.0	0.011904761904761904		_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#192	0.023809523809523808	0.0	0.011904761904761904		_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#193	0.023809523809523808	0.0	0.011904761904761904		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.023809523809523808	0.0	0.011904761904761904		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#583	0.023255813953488372	0.0	0.011627906976744186		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.011494252873563218	0.011494252873563218	0.011494252873563218	i < nSum	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#148	0.011494252873563218	0.011494252873563218	0.011494252873563218	!(col < nCols)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#147	0.011494252873563218	0.011494252873563218	0.011494252873563218	!(row < nRows)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#713	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#707	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#708	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#580	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#576	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#577	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#570	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#571	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#569	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#567	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#568	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#101	0.011363636363636364	0.011363636363636364	0.011363636363636364	!(row < rowCount)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#102	0.011363636363636364	0.011363636363636364	0.011363636363636364	!(col < columnCount)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#603	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#602	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#116	0.011363636363636364	0.011363636363636364	0.011363636363636364	r < nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#117	0.011363636363636364	0.011363636363636364	0.011363636363636364	!(d[r].length != nCols)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#673	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#696	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#693	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#87	0.022222222222222223	0.0	0.011111111111111112		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#89	0.022222222222222223	0.0	0.011111111111111112		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#113	0.01098901098901099	0.01098901098901099	0.01098901098901099	!(nCols == 0)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#105	0.01098901098901099	0.01098901098901099	0.01098901098901099	!(d == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#109	0.01098901098901099	0.01098901098901099	0.01098901098901099	!(nRows == 0)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#102	0.010869565217391304	0.01098901098901099	0.010929288103201148	!(copyArray)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#131	0.021739130434782608	0.0	0.010869565217391304		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#99	0.021739130434782608	0.0	0.010869565217391304		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#100	0.021739130434782608	0.0	0.010869565217391304		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#126	0.021739130434782608	0.0	0.010869565217391304		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#127	0.021739130434782608	0.0	0.010869565217391304		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.010638297872340425	0.010416666666666666	0.010527482269503546	(sinQ(xa,xb))> 0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#252	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#68	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#69	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#77	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#74	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#73	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#72	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#71	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#70	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#194	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#193	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#534	0.02	0.0	0.01		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#538	0.02	0.0	0.01		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#535	0.02	0.0	0.01		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#536	0.02	0.0	0.01		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#541	0.02	0.0	0.01		_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.009345794392523364	0.009345794392523364	0.009345794392523364	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#81	0.018518518518518517	0.0	0.009259259259259259		_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#80	0.018518518518518517	0.0	0.009259259259259259		_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#78	0.018518518518518517	0.0	0.009259259259259259		_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#79	0.018518518518518517	0.0	0.009259259259259259		_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#77	0.018518518518518517	0.0	0.009259259259259259		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.008928571428571428	0.008928571428571428	0.008928571428571428	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1800	0.0037174721189591076	0.014084507042253521	0.008900989580606315	b < cosEpsB	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2307	0.00847457627118644	0.008547008547008548	0.008510792409097495	(-cosQ(xa,xb))<= 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.016666666666666666	0.0	0.008333333333333333		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2305	0.008064516129032258	0.008064516129032258	0.008064516129032258	(-sinQ(xa,xb))<= 0	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1798	0.0037174721189591076	0.012195121951219513	0.007956297035089311	d < b	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1797	0.0037174721189591076	0.011235955056179775	0.007476713587569441	c < temp2	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1799	0.0037174721189591076	0.011235955056179775	0.007476713587569441	a < sinEpsA	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.014705882352941176	0.0	0.007352941176470588		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.006944444444444444	0.00684931506849315	0.006896879756468797	(-cosQ(xa,xb))!= 0	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#86	0.0136986301369863	0.0	0.00684931506849315		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#85	0.0136986301369863	0.0	0.00684931506849315		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1752	0.003484320557491289	0.01020408163265306	0.006844201095072175	b > costB	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#415	0.006802721088435374	0.006802721088435374	0.006802721088435374	j < columns	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#413	0.006802721088435374	0.006802721088435374	0.006802721088435374	i < rows	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1795	0.0037174721189591076	0.00980392156862745	0.006760696843793279	t <= b	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.013513513513513514	0.0	0.006756756756756757		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#95	0.013513513513513514	0.0	0.006756756756756757		_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.006578947368421052	0.006578947368421052	0.006578947368421052	(0)== 0	_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.01282051282051282	0.0	0.00641025641025641		_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#73	0.01282051282051282	0.0	0.00641025641025641		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1186	0.00641025641025641	0.006369426751592357	0.0063898415809243835	tmp <= aa	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1172	0.00641025641025641	0.006369426751592357	0.0063898415809243835	i >= 0	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1803	0.003484320557491289	0.009174311926605505	0.006329316242048397	result < t	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1767	0.003484320557491289	0.00909090909090909	0.006287614824200189	b < cosEpsB	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1743	0.003484320557491289	0.009009009009009009	0.0062466647832501495	a == xb	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#144	0.012345679012345678	0.0	0.006172839506172839		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#145	0.012345679012345678	0.0	0.006172839506172839		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#148	0.012345679012345678	0.0	0.006172839506172839		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#140	0.012345679012345678	0.0	0.006172839506172839		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#143	0.012345679012345678	0.0	0.006172839506172839		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#139	0.012345679012345678	0.0	0.006172839506172839		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.012345679012345678	0.0	0.006172839506172839		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1748	0.003484320557491289	0.008849557522123894	0.006166939039807591	d > b	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2291	0.0051813471502590676	0.006944444444444444	0.006062895797351756	xa > 1.5707963267948966	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.011627906976744186	0.0	0.005813953488372093		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2303	0.005813953488372093	0.005780346820809248	0.005797150154590671	(cosQ(xa,xb))!= 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#157	0.011494252873563218	0.0	0.005747126436781609		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#151	0.011494252873563218	0.0	0.005747126436781609		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#153	0.011494252873563218	0.0	0.005747126436781609		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#146	0.011494252873563218	0.0	0.005747126436781609		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#145	0.011494252873563218	0.0	0.005747126436781609		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#144	0.011494252873563218	0.0	0.005747126436781609		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#143	0.011494252873563218	0.0	0.005747126436781609		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#149	0.011494252873563218	0.0	0.005747126436781609		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#141	0.011494252873563218	0.0	0.005747126436781609		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1746	0.003484320557491289	0.008	0.005742160278745644	t > xa	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1711	0.003484320557491289	0.008	0.005742160278745644	sinEpsA > xa	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#103	0.011363636363636364	0.0	0.005681818181818182		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#100	0.011363636363636364	0.0	0.005681818181818182		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#107	0.011363636363636364	0.0	0.005681818181818182		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#98	0.011363636363636364	0.0	0.005681818181818182		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#96	0.011363636363636364	0.0	0.005681818181818182		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.011363636363636364	0.0	0.005681818181818182		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.0055248618784530384	0.0055248618784530384	0.0055248618784530384	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.01098901098901099	0.0	0.005494505494505495		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#108	0.01098901098901099	0.0	0.005494505494505495		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#121	0.01098901098901099	0.0	0.005494505494505495		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1274	0.0031847133757961785	0.007407407407407408	0.005296060391601793	lnza > x	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.005263157894736842	0.005263157894736842	0.005263157894736842	!(i < nRows)	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2251	0.005235602094240838	0.005235602094240838	0.005235602094240838	(cosQ(xa,xb))> 0	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1749	0.003484320557491289	0.006944444444444444	0.005214382500967866	a < epsilon	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1747	0.003484320557491289	0.006944444444444444	0.005214382500967866	c < epsilon	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1710	0.003484320557491289	0.006944444444444444	0.005214382500967866	sinEpsB > sintA	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2272	0.005128205128205128	0.005291005291005291	0.005209605209605209	!(x < 0)	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2282	0.0051813471502590676	0.0051813471502590676	0.0051813471502590676	!(xa > 3294198.0)	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2276	0.005128205128205128	0.0051813471502590676	0.005154776139232098	!(xa != xa || xa == Double.POSITIVE_INFINITY)	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3806	0.0044444444444444444	0.005714285714285714	0.005079365079365079	remB == a	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3805	0.0044444444444444444	0.005714285714285714	0.005079365079365079	remA == b	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1744	0.003484320557491289	0.0064516129032258064	0.004967966730358548	b > costA	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1750	0.003484320557491289	0.0064516129032258064	0.004967966730358548	b >= costA	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1276	0.0031847133757961785	0.006711409395973154	0.004948061385884666	lnza >= x	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2253	0.0048543689320388345	0.004878048780487805	0.004866208856263319	(-sinQ(xa,xb))< 0	_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.009615384615384616	0.0	0.004807692307692308		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.009615384615384616	0.0	0.004807692307692308		_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1821	0.0037313432835820895	0.0058823529411764705	0.00480684811237928	b == pi2b	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0037593984962406013	0.005813953488372093	0.004786675992306347	(data[row][column])< 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.0044444444444444444	0.005128205128205128	0.004786324786324786	(finalRemB)>= 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3820	0.0044444444444444444	0.005128205128205128	0.004786324786324786	this.finalRemB > xb	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.009259259259259259	0.0	0.004629629629629629		_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3819	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	this.finalRemA != xa	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3818	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	this.finalK <= k	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	(finalK)> 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3804	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	b != xb	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3803	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	a < remA	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3801	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	remB != b	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3800	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	remA <= xa	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3795	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	remA <= xa	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3796	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	remB < remA	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3798	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	a != remA	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	(finalRemA)!= 0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1155	0.0024875621890547263	0.006369426751592357	0.004428494470323542	x < 1.01 && x > 0.99 && hiPrec == null	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1278	0.0031847133757961785	0.005649717514124294	0.004417215444960236	lnza >= x	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2249	0.004329004329004329	0.004310344827586207	0.004319674578295268	(sinQ(xa,xb))>= 0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.003424657534246575	0.005	0.004212328767123288	p < x	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.004032258064516129	0.004347826086956522	0.004190042075736325	(data[index])> 0	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2236	0.0036101083032490976	0.0045871559633027525	0.004098632133275925	xa > 1.5707963267948966	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.0029850746268656717	0.005076142131979695	0.004030608379422683	(log(x,null))< 0	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1794	0.003484320557491289	0.004291845493562232	0.0038880830255267605	!(xb != 0.0)	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.003424657534246575	0.004329004329004329	0.003876830931625452	p <= x	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.003875968992248062	0.003875968992248062	0.003875968992248062	data[row][column] == value	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#290	0.003875968992248062	0.003875968992248062	0.003875968992248062	i < data.length	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#291	0.003875968992248062	0.003875968992248062	0.003875968992248062	!(subMatrix[i].length != nCols)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#276	0.003875968992248062	0.003875968992248062	0.003875968992248062	!(column > 0)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#273	0.003875968992248062	0.003875968992248062	0.003875968992248062	!(row > 0)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#272	0.003875968992248062	0.003875968992248062	0.003875968992248062	data == null	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#286	0.003875968992248062	0.003875968992248062	0.003875968992248062	!(nCols == 0)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#281	0.003875968992248062	0.003875968992248062	0.003875968992248062	!(nRows == 0)	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.007692307692307693	0.0	0.0038461538461538464		_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1679	0.003424657534246575	0.004048582995951417	0.003736620265098996	p < x	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1661	0.003424657534246575	0.004048582995951417	0.003736620265098996	p < x	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1663	0.003424657534246575	0.004048582995951417	0.003736620265098996	(p)< 0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1823	0.0037313432835820895	0.0037313432835820895	0.0037313432835820895	(sinQ(a,b))!= 0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1676	0.003424657534246575	0.003968253968253968	0.0036964557512502716	p > x	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1656	0.003424657534246575	0.003968253968253968	0.0036964557512502716	p > x	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3523	0.0029850746268656717	0.004405286343612335	0.0036951804852390037	(a)> 0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1279	0.0031847133757961785	0.004166666666666667	0.0036756900212314226	lnza != epsilon	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2243	0.0036101083032490976	0.0037174721189591076	0.0036637902111041026	!(negative)	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2227	0.0036101083032490976	0.0036101083032490976	0.0036101083032490976	!(xa > 3294198.0)	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2207	0.0035460992907801418	0.003663003663003663	0.0036045514768919024	xa > xb	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2208	0.0035460992907801418	0.0036363636363636364	0.003591231463571889	!(x < 0)	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2222	0.0035587188612099642	0.0036101083032490976	0.003584413582229531	!(xa != xa || xa == Double.POSITIVE_INFINITY)	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2214	0.0035460992907801418	0.0035587188612099642	0.003552409075995053	!(xa == 0.0)	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1805	0.003484320557491289	0.003484320557491289	0.003484320557491289	(result)!= 0	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2294	0.006944444444444444	0.0	0.003472222222222222		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2295	0.006944444444444444	0.0	0.003472222222222222		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2292	0.006944444444444444	0.0	0.003472222222222222		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2293	0.006944444444444444	0.0	0.003472222222222222		_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1681	0.003424657534246575	0.0034965034965034965	0.0034605805153750356	(p)!= 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.00684931506849315	0.0	0.003424657534246575		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#598	0.00684931506849315	0.0	0.003424657534246575		_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1678	0.003424657534246575	0.003424657534246575	0.003424657534246575	p < x2	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1658	0.003424657534246575	0.003424657534246575	0.003424657534246575	p <= x2	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#600	0.00684931506849315	0.0	0.003424657534246575		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#601	0.00684931506849315	0.0	0.003424657534246575		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#611	0.00684931506849315	0.0	0.003424657534246575		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#416	0.006802721088435374	0.0	0.003401360544217687		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#414	0.006802721088435374	0.0	0.003401360544217687		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#412	0.006802721088435374	0.0	0.003401360544217687		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#411	0.006802721088435374	0.0	0.003401360544217687		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#410	0.006802721088435374	0.0	0.003401360544217687		_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.006756756756756757	0.0	0.0033783783783783786		_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0033222591362126247	0.0033333333333333335	0.003327796234772979	(data.length)> 0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1182	0.00641025641025641	0.0	0.003205128205128205		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1160	0.00641025641025641	0.0	0.003205128205128205		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1162	0.00641025641025641	0.0	0.003205128205128205		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1161	0.00641025641025641	0.0	0.003205128205128205		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1164	0.00641025641025641	0.0	0.003205128205128205		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1163	0.00641025641025641	0.0	0.003205128205128205		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1170	0.00641025641025641	0.0	0.003205128205128205		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1168	0.00641025641025641	0.0	0.003205128205128205		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1169	0.00641025641025641	0.0	0.003205128205128205		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1275	0.0031847133757961785	0.0031847133757961785	0.0031847133757961785	lnza < x	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1277	0.0031847133757961785	0.0031847133757961785	0.0031847133757961785	lnza != lnzb	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1273	0.0031847133757961785	0.0031847133757961785	0.0031847133757961785	lnza <= epsilon	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3520	0.0029850746268656717	0.002976190476190476	0.0029806325515280736	!(bits == 0x8000000000000000L)	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3514	0.0029585798816568047	0.002976190476190476	0.00296738517892364	!(a != b)	_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.005813953488372093	0.0	0.0029069767441860465		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.002890173410404624	0.002890173410404624	0.002890173410404624	((data == null) ? 0 : data.length)> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.002881844380403458	0.002881844380403458	0.002881844380403458	(((data == null) || (data[0] == null)) ? 0 : data[0].length)> 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#145	0.00558659217877095	0.0	0.002793296089385475		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#134	0.0055248618784530384	0.0	0.0027624309392265192		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#254	0.00546448087431694	0.0	0.00273224043715847		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.005376344086021506	0.0	0.002688172043010753		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.005291005291005291	0.0	0.0026455026455026454		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#532	0.005263157894736842	0.0	0.002631578947368421		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#534	0.005263157894736842	0.0	0.002631578947368421		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#529	0.005263157894736842	0.0	0.002631578947368421		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#528	0.005263157894736842	0.0	0.002631578947368421		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2281	0.0051813471502590676	0.0	0.0025906735751295338		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2301	0.0051813471502590676	0.0	0.0025906735751295338		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2268	0.005128205128205128	0.0	0.002564102564102564		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2271	0.005128205128205128	0.0	0.002564102564102564		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1220	0.001876172607879925	0.0031847133757961785	0.0025304429918380517	!(hiPrec != null)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1323	0.001876172607879925	0.0031847133757961785	0.0025304429918380517	!(hiPrec != null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.0024630541871921183	0.0024630541871921183	0.0024630541871921183	!(columnDimension < 1)	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#68	0.002457002457002457	0.0024630541871921183	0.0024600283220972876	!(rowDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.002421307506053269	0.002421307506053269	0.002421307506053269	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.0024154589371980675	0.0024154589371980675	0.0024154589371980675	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.0018248175182481751	0.0029411764705882353	0.002382996994418205	((x < 0l) ? -x : x)== 0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3510	0.0017921146953405018	0.0029498525073746312	0.0023709836013575663	!(a < b)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1301	0.001876172607879925	0.002840909090909091	0.002358540849394508	b == lnzb	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3508	0.002336448598130841	0.0023584905660377358	0.0023474695820842884	(a)> 0	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2238	0.0045871559633027525	0.0	0.0022935779816513763		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2237	0.0045871559633027525	0.0	0.0022935779816513763		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2239	0.0045871559633027525	0.0	0.0022935779816513763		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2240	0.0045871559633027525	0.0	0.0022935779816513763		_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.0011389521640091116	0.003401360544217687	0.0022701563541133994	(Math.sqrt(a))<= 0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1315	0.001876172607879925	0.002631578947368421	0.002253875777624173	a < lnza	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1314	0.001876172607879925	0.002631578947368421	0.002253875777624173	d > c	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1313	0.001876172607879925	0.002631578947368421	0.002253875777624173	c < d	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1311	0.001876172607879925	0.002631578947368421	0.002253875777624173	b > a	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1310	0.001876172607879925	0.002631578947368421	0.002253875777624173	a < d	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1319	0.001876172607879925	0.002631578947368421	0.002253875777624173	d > a	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1318	0.001876172607879925	0.002631578947368421	0.002253875777624173	c < lnzb	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1316	0.001876172607879925	0.002631578947368421	0.002253875777624173	b > a	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1320	0.001876172607879925	0.002631578947368421	0.002253875777624173	a < lnza	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1321	0.001876172607879925	0.002631578947368421	0.002253875777624173	b > a	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1328	0.001876172607879925	0.002631578947368421	0.002253875777624173	(a + b)< 0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1305	0.001876172607879925	0.002631578947368421	0.002253875777624173	a < d	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1306	0.001876172607879925	0.002631578947368421	0.002253875777624173	b > a	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1308	0.001876172607879925	0.002631578947368421	0.002253875777624173	c < a	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1309	0.001876172607879925	0.002631578947368421	0.002253875777624173	d > a	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1300	0.001876172607879925	0.002631578947368421	0.002253875777624173	a < b	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1303	0.001876172607879925	0.002631578947368421	0.002253875777624173	c < b	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1304	0.001876172607879925	0.002631578947368421	0.002253875777624173	d > a	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3809	0.0044444444444444444	0.0	0.0022222222222222222		_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3792	0.0044444444444444444	0.0	0.0022222222222222222		_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3793	0.0044444444444444444	0.0	0.0022222222222222222		_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3794	0.0044444444444444444	0.0	0.0022222222222222222		_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3799	0.0044444444444444444	0.0	0.0022222222222222222		_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3791	0.0044444444444444444	0.0	0.0022222222222222222		_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3788	0.0044444444444444444	0.0	0.0022222222222222222		_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#47	0.004405286343612335	0.0	0.0022026431718061676		_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.004405286343612335	0.0	0.0022026431718061676		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1154	0.0018281535648994515	0.0024875621890547263	0.002157857876977089	exp == -1 || exp == 0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3511	0.002061855670103093	0.002066115702479339	0.0020639856862912156	(b)!= 0	_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.0020491803278688526	0.0020491803278688526	0.0020491803278688526	maximalCount <= max	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3507	0.0017123287671232876	0.002336448598130841	0.0020243886826270645	a > b	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.001953125	0.0019569471624266144	0.001955036081213307	!(++count > maximalCount)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.00390625	0.0	0.001953125		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#314	0.003875968992248062	0.0	0.001937984496124031		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#294	0.003875968992248062	0.0	0.001937984496124031		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#547	0.003875968992248062	0.0	0.001937984496124031		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#279	0.003875968992248062	0.0	0.001937984496124031		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#289	0.003875968992248062	0.0	0.001937984496124031		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.003875968992248062	0.0	0.001937984496124031		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#280	0.003875968992248062	0.0	0.001937984496124031		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#337	0.0019047619047619048	0.0019569471624266144	0.0019308545335942596	!(yInt < 0)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#334	0.0019047619047619048	0.0019569471624266144	0.0019308545335942596	!(xInt < 0)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.0019120458891013384	0.0019157088122605363	0.0019138773506809374	((a <= b) ? a : b)!= 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#62	0.0037593984962406013	0.0	0.0018796992481203006		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.0037593984962406013	0.0	0.0018796992481203006		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#306	0.0037593984962406013	0.0	0.0018796992481203006		_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1819	0.0037313432835820895	0.0	0.0018656716417910447		_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1817	0.0037313432835820895	0.0	0.0018656716417910447		_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1816	0.0037313432835820895	0.0	0.0018656716417910447		_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1820	0.0037313432835820895	0.0	0.0018656716417910447		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1134	0.0018281535648994515	0.0018315018315018315	0.0018298276982006414	!((bits & 0x7ff0000000000000L) == 0)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1123	0.0018148820326678765	0.0018281535648994515	0.0018215177987836641	!(x == Double.POSITIVE_INFINITY)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1112	0.0018148820326678765	0.0018148820326678765	0.0018148820326678765	!((bits & 0x8000000000000000L) != 0 || x != x)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1106	0.0018050541516245488	0.0018148820326678765	0.0018099680921462127	!(x == 0)	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2247	0.0036101083032490976	0.0	0.0018050541516245488		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0017857142857142857	0.0017857142857142857	0.0017857142857142857	!(cb == null)	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#84	0.0017857142857142857	0.0017857142857142857	0.0017857142857142857	maximalCount == max	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2204	0.0035460992907801418	0.0	0.0017730496453900709		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2203	0.0035460992907801418	0.0	0.0017730496453900709		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2202	0.0035460992907801418	0.0	0.0017730496453900709		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2201	0.0035460992907801418	0.0	0.0017730496453900709		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1692	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1697	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1698	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1699	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1693	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1696	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1714	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1741	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1742	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1740	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1738	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1737	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1709	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1708	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1705	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1703	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1704	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1702	0.003484320557491289	0.0	0.0017421602787456446		_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1673	0.003424657534246575	0.0	0.0017123287671232876		_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1675	0.003424657534246575	0.0	0.0017123287671232876		_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1655	0.003424657534246575	0.0	0.0017123287671232876		_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1653	0.003424657534246575	0.0	0.0017123287671232876		_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3519	0.0029850746268656717	0.0	0.0014925373134328358		_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.001466275659824047	0.0014705882352941176	0.0014684319475590823	!(o == null)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#389	0.002631578947368421	0.0	0.0013157894736842105		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#390	0.002631578947368421	0.0	0.0013157894736842105		_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	8.547008547008547E-4	0.0011806375442739079	0.0010176691994873812	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)== 0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.0019880715705765406	0.0	9.940357852882703E-4		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#341	0.0019047619047619048	0.0	9.523809523809524E-4		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#343	0.0019047619047619048	0.0	9.523809523809524E-4		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#330	0.0019047619047619048	0.0	9.523809523809524E-4		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#331	0.0019047619047619048	0.0	9.523809523809524E-4		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.001893939393939394	0.0	9.46969696969697E-4		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1217	0.001876172607879925	0.0	9.380863039399625E-4		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1218	0.001876172607879925	0.0	9.380863039399625E-4		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1215	0.001876172607879925	0.0	9.380863039399625E-4		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1204	0.001876172607879925	0.0	9.380863039399625E-4		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1296	0.001876172607879925	0.0	9.380863039399625E-4		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1298	0.001876172607879925	0.0	9.380863039399625E-4		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1297	0.001876172607879925	0.0	9.380863039399625E-4		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1299	0.001876172607879925	0.0	9.380863039399625E-4		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1132	0.0018281535648994515	0.0	9.140767824497258E-4		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1109	0.0018148820326678765	0.0	9.074410163339383E-4		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.0017889087656529517	0.0	8.944543828264759E-4		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#85	0.0017857142857142857	0.0	8.928571428571428E-4		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#107	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#550	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#564	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#565	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#567	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#560	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#561	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#563	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#201	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#204	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#569	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#568	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#206	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#202	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#203	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#205	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#201	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#200	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#703	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#116	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#524	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#525	0.0	0.0	0.0		_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#508	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#532	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1181	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1177	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1179	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1178	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#104	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#543	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#542	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#547	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#548	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1229	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1222	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1223	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1224	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1225	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#210	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1226	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#211	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#218	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#217	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1230	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#219	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#222	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#223	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#220	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#221	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#227	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#225	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#224	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2290	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#231	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#232	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#233	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#239	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#235	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#238	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2289	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2286	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2287	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2288	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#244	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#245	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#247	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#246	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#109	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#107	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1136	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3815	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1149	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1148	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1147	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1146	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2277	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2273	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1113	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2244	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1115	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1114	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#593	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1118	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#602	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1124	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1128	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1125	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#98	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#586	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#574	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#572	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#573	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#151	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#150	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#154	0.0	0.0	0.0		_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#524	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#113	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#111	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#112	0.0	0.0	0.0		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#297	0.0	0.0	0.0		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#292	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#110	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#140	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#142	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#138	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#139	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#134	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#135	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#136	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3515	0.0	0.0	0.0		_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#101	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2223	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2231	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2232	0.0	0.0	0.0		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#542	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2234	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2233	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2235	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2209	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2210	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#120	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2219	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2216	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2215	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#771	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2217	0.0	0.0	0.0		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#338	0.0	0.0	0.0		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#335	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#205	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#253	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#255	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#203	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1324	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1325	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#64	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#619	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#613	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#618	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#617	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#608	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#609	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#605	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#606	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#631	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#632	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#630	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#639	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#637	0.0	0.0	0.0		_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#265	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#635	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#636	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#633	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#634	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#620	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#621	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#626	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#627	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#628	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#629	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#623	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#625	0.0	0.0	0.0		_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#156	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#650	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#653	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#654	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#651	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#652	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#657	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#658	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#655	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#656	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#640	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#641	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3521	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#642	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#643	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#645	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#106	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#107	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#104	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#105	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#103	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#404	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#109	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#108	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#277	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#198	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#120	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#199	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#121	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#196	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#197	0.0	0.0	0.0		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#274	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#111	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#113	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#114	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#115	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#116	0.0	0.0	0.0		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#287	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#118	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#110	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#119	0.0	0.0	0.0		_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#419	0.0	0.0	0.0		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#132	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#144	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1107	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#147	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#194	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#195	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#192	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#193	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#198	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#199	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#196	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#197	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#191	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#809	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#195	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#198	0.0	0.0	0.0		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#103	0.0	0.0	0.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#199	0.0	0.0	0.0		_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#69	0.0	0.0	0.0		_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#72	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#811	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#810	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#666	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#661	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#665	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#664	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#678	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#677	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#676	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#675	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#167	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#176	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#687	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#177	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#686	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#174	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#685	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#684	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#172	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#683	0.0	0.0	0.0		_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#99	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#173	0.0	0.0	0.0		_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#682	0.0	0.0	0.0		_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#98	0.0	0.0	0.0		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#340	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#179	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#178	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#180	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#186	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#187	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#181	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#182	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#183	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#184	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1244	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1245	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1242	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1249	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1246	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1251	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1250	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#97	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#54	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1239	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#55	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#56	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1231	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1019	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1232	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1235	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1236	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1237	0.0	0.0	0.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1017	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1241	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1268	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1269	0.0	0.0	0.0		_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#525	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1259	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1253	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1254	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1255	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1260	0.0	0.0	0.0		_
