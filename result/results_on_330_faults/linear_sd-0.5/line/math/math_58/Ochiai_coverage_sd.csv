line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#390	0.20851441405707477	1.0	0.6042572070285374	lmPar >= xNorm	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#274	0.5773502691896258	0.5773502691896258	0.5773502691896258	minY > maxY	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#275	0.5773502691896258	0.5773502691896258	0.5773502691896258	maxY <= minY	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#405	0.14285714285714285	1.0	0.5714285714285714	xNorm <= coeff2	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#262	0.4082482904638631	0.5773502691896258	0.49279927982674443	!((idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#533	0.22360679774997896	0.7071067811865475	0.4653567894682632	parl > dxNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#420	0.21320071635561041	0.7071067811865475	0.46015374877107895	point[pj] >= xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#389	0.20851441405707477	0.7071067811865475	0.4578105976218111	delta < coeff2	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#182	0.31622776601683794	0.5773502691896258	0.44678901760323186	param[2] <= 0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#185	0.4082482904638631	0.4082482904638631	0.4082482904638631	params[2] <= fwhmApprox	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#199	0.4082482904638631	0.4082482904638631	0.4082482904638631	points[i].getY() > points[maxYIdx].getY()	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#198	0.4082482904638631	0.4082482904638631	0.4082482904638631	!(i < points.length)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#258	0.4082482904638631	0.4082482904638631	0.4082482904638631	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#264	0.4082482904638631	0.4082482904638631	0.4082482904638631	!(isBetween(y,points[i].getY(),points[i + idxStep].getY()))	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#203	0.4082482904638631	0.4082482904638631	0.4082482904638631	(maxYIdx)> 0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#200	0.4082482904638631	0.4082482904638631	0.4082482904638631	maxYIdx == i	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.4082482904638631	0.4082482904638631	0.4082482904638631	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#156	0.4082482904638631	0.4082482904638631	0.4082482904638631	parameters == null	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#48	0.2182178902359924	0.5773502691896258	0.3977840797128091	this.weight == x	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#49	0.2182178902359924	0.5773502691896258	0.3977840797128091	this.x == weight	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#544	0.21320071635561041	0.5773502691896258	0.39527549277261814	sum <= parl	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#556	0.21320071635561041	0.5773502691896258	0.39527549277261814	lmPar > fp	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#144	0.35355339059327373	0.4082482904638631	0.38090084052856843	!(observations.length < 3)	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#132	0.3779644730092272	0.3779644730092272	0.3779644730092272	(Gaussian.value(diff,param[0],i2s2))> 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#417	0.21320071635561041	0.5	0.3566003581778052	cost <= coeff2	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#141	0.35355339059327373	0.35355339059327373	0.35355339059327373	!(observations == null)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#614	0.25	0.4472135954999579	0.34860679774997894	parl >= dxNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#620	0.22941573387056174	0.3779644730092272	0.30369010343989444	lmPar > delta	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#179	0.2886751345948129	0.31622776601683794	0.30245145030582543	!(param.length != 3)	_
org.apache.commons.math.analysis.function.Gaussian#double#value#?,double,double,double#197	0.2773500981126146	0.31622776601683794	0.29678893206472623	(norm * FastMath.exp(-xMinusMean * xMinusMean * i2s2))> 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#570	0.21320071635561041	0.3779644730092272	0.2955825946824188	work1[pj] < sPar	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#338	0.14285714285714285	0.4472135954999579	0.2950353691785504	lmDir[pj] > delta	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#183	0.5773502691896258	0.0	0.2886751345948129		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#272	0.5773502691896258	0.0	0.2886751345948129		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#271	0.5773502691896258	0.0	0.2886751345948129		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#273	0.5773502691896258	0.0	0.2886751345948129		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#277	0.5773502691896258	0.0	0.2886751345948129		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#183	0.5773502691896258	0.0	0.2886751345948129		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#520	0.22360679774997896	0.35355339059327373	0.28858009417162633	work1[pj] > fp	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getX#?#64	0.22360679774997896	0.35355339059327373	0.28858009417162633	(x)== 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#581	0.21320071635561041	0.35355339059327373	0.2833770534744421	dxNorm <= parl	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#176	0.2672612419124244	0.2886751345948129	0.2779681882536187	!(param == null)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#321	0.14285714285714285	0.3779644730092272	0.26041080793318505	oldX[pj] > xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#346	0.14285714285714285	0.3779644730092272	0.26041080793318505	delta < maxCosine	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#403	0.14285714285714285	0.3779644730092272	0.26041080793318505	xNorm < coeff2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#583	0.21320071635561041	0.30151134457776363	0.25735603046668704	fp >= gNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#530	0.22360679774997896	0.2886751345948129	0.25614096617239596	work1[pj] >= fp	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#605	0.22941573387056174	0.2773500981126146	0.25338291599158813	sum2 >= previousFP	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#602	0.22941573387056174	0.2672612419124244	0.24833848789149307	work1[permutation[i]] > gNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#688	0.2182178902359924	0.2773500981126146	0.24778399417430347	cos > dpj	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#50	0.2182178902359924	0.2773500981126146	0.24778399417430347	this.y < weight	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#578	0.21320071635561041	0.2773500981126146	0.2452754072341125	work3[pj] > delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#599	0.22941573387056174	0.2581988897471611	0.24380731180886142	work1[pj] >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#615	0.24253562503633297	0.24253562503633297	0.24253562503633297	fp < 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#595	0.22941573387056174	0.25	0.23970786693528087	work1[pj] >= previousFP	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#613	0.22941573387056174	0.25	0.23970786693528087	fp > 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#312	0.14285714285714285	0.3333333333333333	0.23809523809523808	diag[j] < maxCosine	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#279	0.14285714285714285	0.3333333333333333	0.23809523809523808	xNorm < xk	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#299	0.14285714285714285	0.3333333333333333	0.23809523809523808	maxCosine >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#691	0.21320071635561041	0.2581988897471611	0.23569980305138577	cos < rkk	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#608	0.22941573387056174	0.23570226039551587	0.2325589971330388	sum2 > parl	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#707	0.21320071635561041	0.25	0.23160035817780522	weightedResidualJacobian[i][pk] >= dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#706	0.21320071635561041	0.25	0.23160035817780522	lmDiag[i] > cos	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#579	0.21320071635561041	0.25	0.23160035817780522	dxNorm < s	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#687	0.2182178902359924	0.24253562503633297	0.23037675763616267	sin > dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#527	0.22360679774997896	0.23570226039551587	0.22965452907274742	sum < parl	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#597	0.22941573387056174	0.22941573387056174	0.22941573387056174	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#593	0.22941573387056174	0.22941573387056174	0.22941573387056174	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#606	0.22941573387056174	0.22941573387056174	0.22941573387056174	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#601	0.22941573387056174	0.22941573387056174	0.22941573387056174	i < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#692	0.21320071635561041	0.24253562503633297	0.2278681706959717	sin >= dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#699	0.21320071635561041	0.24253562503633297	0.2278681706959717	qtbpj > dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#574	0.21320071635561041	0.24253562503633297	0.2278681706959717	dxNorm > fp	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#531	0.22360679774997896	0.22941573387056174	0.22651126581027037	sum2 >= dxNorm	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getY#?#71	0.22360679774997896	0.22941573387056174	0.22651126581027037	(y)!= 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#700	0.21320071635561041	0.23570226039551587	0.22445148837556314	work[k] >= dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#545	0.21320071635561041	0.23570226039551587	0.22445148837556314	sum2 < parl	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getWeight#?#57	0.22360679774997896	0.22360679774997896	0.22360679774997896	(weight)> 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#518	0.22360679774997896	0.22360679774997896	0.22360679774997896	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#526	0.22360679774997896	0.22360679774997896	0.22360679774997896	i < j	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#523	0.22360679774997896	0.22360679774997896	0.22360679774997896	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#522	0.22360679774997896	0.22360679774997896	0.22360679774997896	sum2 < delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#587	0.21320071635561041	0.22941573387056174	0.22130822511308607	!((FastMath.abs(fp) <= 0.1 * delta) || ((parl == 0) && (fp <= previousFP) && (previousFP < 0)))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#715	0.21320071635561041	0.22360679774997896	0.2184037570527947	weightedResidualJacobian[j][permutation[j]] > dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#517	0.21320071635561041	0.22360679774997896	0.2184037570527947	rank == solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#537	0.21320071635561041	0.22360679774997896	0.2184037570527947	sum2 != parl	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#542	0.21320071635561041	0.22360679774997896	0.2184037570527947	sum >= sum2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#374	0.14285714285714285	0.2886751345948129	0.21576613872597789	coeff1 >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#697	0.21320071635561041	0.2182178902359924	0.2157093032958014	weightedResidualJacobian[k][pk] > cos	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#685	0.21320071635561041	0.2182178902359924	0.2157093032958014	FastMath.abs(rkk) < FastMath.abs(lmDiag[k])	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#714	0.21320071635561041	0.2182178902359924	0.2157093032958014	lmDiag[j] < dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#736	0.21320071635561041	0.2182178902359924	0.2157093032958014	work[j] < sum	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#252	0.1414213562373095	0.2886751345948129	0.2150482454160612	qtf[i] == xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#386	0.20851441405707477	0.2182178902359924	0.2133661521465336	!((0.1 * cost >= previousCost) || (tmp < 0.1))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#666	0.21320071635561041	0.21320071635561041	0.21320071635561041	dpj != 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#669	0.21320071635561041	0.21320071635561041	0.21320071635561041	lmDiag[j] <= dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#660	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#652	0.21320071635561041	0.21320071635561041	0.21320071635561041	i < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#650	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#680	0.21320071635561041	0.21320071635561041	0.21320071635561041	lmDiag[k] != 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#675	0.21320071635561041	0.21320071635561041	0.21320071635561041	k < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#703	0.21320071635561041	0.21320071635561041	0.21320071635561041	i < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#729	0.21320071635561041	0.21320071635561041	0.21320071635561041	nSing > 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#721	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#722	0.21320071635561041	0.21320071635561041	0.21320071635561041	!((lmDiag[j] == 0) && (nSing == solvedCols))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#725	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(nSing < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#538	0.21320071635561041	0.21320071635561041	0.21320071635561041	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#541	0.21320071635561041	0.21320071635561041	0.21320071635561041	i <= j	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#549	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(paru == 0)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#557	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(lmPar == 0)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#564	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(lmPar == 0)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#561	0.21320071635561041	0.21320071635561041	0.21320071635561041	countdown >= 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#568	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#575	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#741	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(j < lmDir.length)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#733	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(i < nSing)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#730	0.21320071635561041	0.21320071635561041	0.21320071635561041	j >= 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#418	0.21320071635561041	0.21320071635561041	0.21320071635561041	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#356	0.14285714285714285	0.2773500981126146	0.2101036204848787	actRed >= delta	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#187	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#179	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#172	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#173	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#174	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#176	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#178	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#170	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#197	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#169	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#Comparator<WeightedObservedPoint>#createWeightedObservedPointComparator#?#302	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#boolean#isBetween#?,double,double,double#291	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#226	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#147	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#121	0.4082482904638631	0.0	0.20412414523193154		GT
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#159	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#157	0.4082482904638631	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#828	0.14433756729740646	0.2581988897471611	0.20126822852228377	weightedResidualJacobian[j][permutation[k + dk]] >= ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#391	0.14285714285714285	0.2581988897471611	0.20052801630215197	!((lmPar == 0) || (ratio >= 0.75))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#778	0.1414213562373095	0.2581988897471611	0.1998101229922353	jacNorm[k] > norm2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#364	0.14285714285714285	0.24253562503633297	0.1926963839467379	work1[j] != ratio	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#161	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#155	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#154	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#153	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#152	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#158	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#159	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#157	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#131	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#130	0.3779644730092272	0.0	0.1889822365046136		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#491	0.14744195615489714	0.22941573387056174	0.18842884501272944	lmDir[permutation[i]] >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#826	0.14433756729740646	0.22941573387056174	0.18687665058398412	gamma >= ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#339	0.14285714285714285	0.22360679774997896	0.18323197030356092	point[pj] >= xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#380	0.14285714285714285	0.22360679774997896	0.18323197030356092	ratio < dirDer	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#400	0.14285714285714285	0.2182178902359924	0.18053751654656763	xNorm < coeff2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#343	0.14285714285714285	0.21320071635561041	0.17802892960637662	lmNorm >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#507	0.14285714285714285	0.21320071635561041	0.17802892960637662	!(fp <= 0.1 * delta)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#505	0.14285714285714285	0.21320071635561041	0.17802892960637662	dxNorm >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#397	0.14285714285714285	0.21320071635561041	0.17802892960637662	!(ratio >= 1.0e-4)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#776	0.1414213562373095	0.21320071635561041	0.17731103629645995	norm2 < akk	_
org.apache.commons.math.optimization.fitting.GaussianFitter#?#GaussianFitter#?,DifferentiableMultivariateVectorialOptimizer#68	0.35355339059327373	0.0	0.17677669529663687		_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#120	0.35355339059327373	0.0	0.17677669529663687		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#383	0.14285714285714285	0.20851441405707477	0.1756857784571088	ratio <= 0.25	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#280	0.14285714285714285	0.2	0.17142857142857143	diag[k] > xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#366	0.14285714285714285	0.1796053020267749	0.16123122244195887	work1[i] > previousCost	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#297	0.14285714285714285	0.17677669529663687	0.15981691907688986	sum > xNorm	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#150	0.31622776601683794	0.0	0.15811388300841897		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double#67	0.31622776601683794	0.0	0.15811388300841897		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#128	0.31622776601683794	0.0	0.15811388300841897		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#817	0.1414213562373095	0.17407765595569785	0.15774950609650368	diagR[pk] > ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#818	0.1414213562373095	0.17407765595569785	0.15774950609650368	weightedResidualJacobian[k][pk] > ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#212	0.1386750490563073	0.17407765595569785	0.15637635250600257	this.orthoTolerance == parRelativeTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#210	0.1386750490563073	0.17407765595569785	0.15637635250600257	this.costRelativeTolerance == orthoTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#211	0.1386750490563073	0.17407765595569785	0.15637635250600257	this.parRelativeTolerance == orthoTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#791	0.1414213562373095	0.1690308509457033	0.1552261035915064	norm2 == aki	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#814	0.1414213562373095	0.16666666666666666	0.1540440114519881	beta[pk] > ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#341	0.14285714285714285	0.16012815380508713	0.15149264833111498	lmNorm < maxCosine	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#345	0.14285714285714285	0.16012815380508713	0.15149264833111498	!(firstIteration)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#503	0.14285714285714285	0.16012815380508713	0.15149264833111498	dxNorm < s	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#282	0.14285714285714285	0.16012815380508713	0.15149264833111498	xNorm > delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#808	0.1414213562373095	0.16012815380508713	0.1507747550211983	permutation[k] < k	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#807	0.1414213562373095	0.16012815380508713	0.1507747550211983	permutation[nextColumn] != k	_
org.apache.commons.math.optimization.fitting.CurveFitter#WeightedObservedPoint[]#getObservations#?#100	0.30151134457776363	0.0	0.15075567228888181		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#371	0.14285714285714285	0.15811388300841897	0.1504855129327809	coeff1 < actRed	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#797	0.1414213562373095	0.1543033499620919	0.1478623530997007	!(norm2 > ak2)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#798	0.1414213562373095	0.1543033499620919	0.1478623530997007	nextColumn > k	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#502	0.14285714285714285	0.15249857033260467	0.14767785659487376	work1[pj] > dxNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#490	0.14744195615489714	0.14744195615489714	0.14744195615489714	i < k	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#849	0.14285714285714285	0.15075567228888181	0.14680640757301233	y[i] < gamma	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#824	0.14433756729740646	0.14907119849998599	0.14670438289869622	gamma >= akk	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#782	0.1414213562373095	0.14907119849998599	0.14524627736864776	!(k < cols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#266	0.14285714285714285	0.14586499149789456	0.1443610671775187	weightedResidualJacobian[k][pk] >= xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#508	0.14433756729740646	0.14433756729740646	0.14433756729740646	lmPar >= fp	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#827	0.14433756729740646	0.14433756729740646	0.14433756729740646	j < weightedResidualJacobian.length	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#823	0.14433756729740646	0.14433756729740646	0.14433756729740646	!(j < weightedResidualJacobian.length)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#821	0.14433756729740646	0.14433756729740646	0.14433756729740646	dk > 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#285	0.14285714285714285	0.14433756729740646	0.14359735507727467	delta > xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#303	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(maxCosine <= orthoTolerance)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#316	0.14285714285714285	0.14285714285714285	0.14285714285714285	ratio < 1.0e-4	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#319	0.14285714285714285	0.14285714285714285	0.14285714285714285	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#311	0.14285714285714285	0.14285714285714285	0.14285714285714285	j < cols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#336	0.14285714285714285	0.14285714285714285	0.14285714285714285	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#844	0.14285714285714285	0.14285714285714285	0.14285714285714285	i < rows	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#841	0.14285714285714285	0.14285714285714285	0.14285714285714285	k < cols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#848	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(i < rows)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#354	0.14285714285714285	0.14285714285714285	0.14285714285714285	0.1 * cost < previousCost	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#365	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(i <= j)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#361	0.14285714285714285	0.14285714285714285	0.14285714285714285	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#370	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#499	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#493	0.14285714285714285	0.14285714285714285	0.14285714285714285	lmDir[pk] == ypk	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#409	0.14285714285714285	0.14285714285714285	0.14285714285714285	checker != null	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#401	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(k < cols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#446	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(maxCosine <= 2.2204e-16)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#440	0.14285714285714285	0.14285714285714285	0.14285714285714285	!((FastMath.abs(actRed) <= 2.2204e-16) && (preRed <= 2.2204e-16) && (ratio <= 2.0))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#443	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(delta <= 2.2204e-16 * xNorm)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#431	0.14285714285714285	0.14285714285714285	0.14285714285714285	!((FastMath.abs(actRed) <= costRelativeTolerance && preRed <= costRelativeTolerance && ratio <= 2.0) || delta <= parRelativeTolerance * xNorm)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#411	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(checker.converged(iter,previous,current))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#272	0.14285714285714285	0.14285714285714285	0.14285714285714285	xNorm >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#275	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(dk == 0)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#273	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(k < cols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#264	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(k < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#269	0.14285714285714285	0.14285714285714285	0.14285714285714285	firstIteration	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#487	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(k >= 0)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#481	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(j < rank)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#482	0.14285714285714285	0.14285714285714285	0.14285714285714285	lmDir[permutation[j]] < delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#296	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(i <= j)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#290	0.14285714285714285	0.14285714285714285	0.14285714285714285	cost != 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#291	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#294	0.14285714285714285	0.14285714285714285	0.14285714285714285	s != 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#793	0.1414213562373095	0.1414213562373095	0.1414213562373095	!(Double.isInfinite(norm2) || Double.isNaN(norm2))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#799	0.1414213562373095	0.1414213562373095	0.1414213562373095	ak2 <= norm2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#789	0.1414213562373095	0.1414213562373095	0.1414213562373095	j < weightedResidualJacobian.length	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#787	0.1414213562373095	0.1414213562373095	0.1414213562373095	!(i < cols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#772	0.1414213562373095	0.1414213562373095	0.1414213562373095	permutation[k] == k	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#771	0.1414213562373095	0.1414213562373095	0.1414213562373095	!(k < cols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#774	0.1414213562373095	0.1414213562373095	0.1414213562373095	i < weightedResidualJacobian.length	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#251	0.1414213562373095	0.1414213562373095	0.1414213562373095	!(i < rows)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#802	0.1414213562373095	0.1414213562373095	0.1414213562373095	!(ak2 <= qrRankingThreshold)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#243	0.1414213562373095	0.1414213562373095	0.1414213562373095	lmPar >= delta	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#142	0.11952286093343936	0.16222142113076254	0.14087214103210094	index < i	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#213	0.1386750490563073	0.1386750490563073	0.1386750490563073	this.qrRankingThreshold < parRelativeTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#209	0.1386750490563073	0.1386750490563073	0.1386750490563073	this.initialStepBoundFactor == initialStepBoundFactor	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#141	0.11952286093343936	0.14586499149789456	0.13269392621566695	cost < residual	_
org.apache.commons.math.exception.NotStrictlyPositiveException#?#NotStrictlyPositiveException#?,Number#38	0.2581988897471611	0.0	0.12909944487358055		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#83	0.12403473458920847	0.125	0.12451736729460423	difference > size * getRelativeThreshold() && difference > getAbsoluteThreshold()	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#78	0.12403473458920847	0.12403473458920847	0.12403473458920847	i < p.length	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#616	0.24253562503633297	0.0	0.12126781251816648		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#140	0.11952286093343936	0.12126781251816648	0.12039533672580292	weightedResiduals[i] == residual	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#115	0.11952286093343936	0.1203858530857692	0.11995435700960427	weightedResidualJacobian[i][j] < wi	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#104	0.11952286093343936	0.11952286093343936	0.11952286093343936	!(weightedResidualJacobian.length != rows)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#110	0.11952286093343936	0.11952286093343936	0.11952286093343936	!(i < rows)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#113	0.11952286093343936	0.11952286093343936	0.11952286093343936	j < cols	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#138	0.11952286093343936	0.11952286093343936	0.11952286093343936	!(i < rows)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#129	0.11952286093343936	0.11952286093343936	0.11952286093343936	!(objective.length != rows)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#114	0.11867816581938533	0.11867816581938533	0.11867816581938533	!(f == null)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#117	0.11867816581938533	0.11867816581938533	0.11867816581938533	!(t == null)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#123	0.11867816581938533	0.11867816581938533	0.11867816581938533	!(startPoint == null)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#120	0.11867816581938533	0.11867816581938533	0.11867816581938533	!(w == null)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#126	0.11867816581938533	0.11867816581938533	0.11867816581938533	!(t.length != w.length)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#246	0.11867816581938533	0.11867816581938533	0.11867816581938533	cols <= maxEval	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#245	0.11867816581938533	0.11867816581938533	0.11867816581938533	rows != maxEval	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#237	0.11867816581938533	0.11867816581938533	0.11867816581938533	jacobianEvaluations != maxEval	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#598	0.22941573387056174	0.0	0.11470786693528087		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#594	0.22941573387056174	0.0	0.11470786693528087		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#600	0.22941573387056174	0.0	0.11470786693528087		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#607	0.22941573387056174	0.0	0.11470786693528087		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#610	0.22941573387056174	0.0	0.11470786693528087		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#MultivariateMatrixFunction#jacobian#?#183	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#153	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#152	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#151	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#150	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#156	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#155	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#154	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#160	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#203	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#206	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#200	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#202	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#201	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#519	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#529	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#525	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#524	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,ParametricUnivariateRealFunction,double[]#126	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#?#TheoreticalValuesFunction#?,ParametricUnivariateRealFunction#178	0.22360679774997896	0.0	0.11180339887498948		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#686	0.2182178902359924	0.0	0.1091089451179962		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Number,Number,Number#46	0.2182178902359924	0.0	0.1091089451179962		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double,double#80	0.2182178902359924	0.0	0.1091089451179962		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#690	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#698	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#52	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#53	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#664	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#665	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#667	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#655	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#656	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#653	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#651	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#683	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#682	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#684	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#676	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#674	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#705	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#704	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#720	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#516	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#515	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#539	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#540	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#547	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#548	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#567	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#569	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#572	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#576	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#577	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#582	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#589	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#742	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#732	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#731	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#734	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#427	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#426	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#425	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#424	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#422	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#423	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#419	0.21320071635561041	0.0	0.10660035817780521		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#384	0.20851441405707477	0.0	0.10425720702853739		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3831	0.10369516947304253	0.10425720702853739	0.10397618825078996	(a)>= 0	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3830	0.10369516947304253	0.10369516947304253	0.10369516947304253	a < b	_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Number,Number,boolean#52	0.20412414523193154	0.0	0.10206207261596577		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#73	0.09667364890456635	0.10101525445522107	0.09884445167989371	(relativeThreshold)> 0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#80	0.09712858623572641	0.09712858623572641	0.09712858623572641	(absoluteThreshold)> 0	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3827	0.08219949365267865	0.10369516947304253	0.09294733156286059	!(a > b)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#812	0.058823529411764705	0.12216944435630522	0.09049648688403497	result < epsilon	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#152	0.17677669529663687	0.0	0.08838834764831843		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3828	0.08770580193070293	0.08838834764831843	0.08804707478951068	(b)> 0	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#765	0.06726727939963124	0.09901475429766744	0.08314101684864934	intPartB == x	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#793	0.05352877275721892	0.09901475429766744	0.07627176352744318	z >= intPartA	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#792	0.05352877275721892	0.09853292781642932	0.07603085028682412	z == intPartA	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#832	0.14907119849998599	0.0	0.07453559924999299		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#509	0.14433756729740646	0.0	0.07216878364870323		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#822	0.14433756729740646	0.0	0.07216878364870323		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#328	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#327	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#326	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#325	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#329	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#320	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#323	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#324	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#335	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#332	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#337	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#340	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#843	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#842	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#845	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#847	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#355	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#353	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#350	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#362	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#363	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#369	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#375	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#373	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#376	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#377	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#501	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#500	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#506	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#399	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#392	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#393	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#498	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#402	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#406	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#278	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#274	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#289	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#261	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#265	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#489	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#488	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#295	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#292	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#293	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#790	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#788	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#785	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#786	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#775	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#773	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#257	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#258	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#256	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#237	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#236	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#235	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#234	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#233	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#232	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#231	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#230	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#248	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#249	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#245	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#244	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#247	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#246	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#240	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#806	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#228	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#229	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#221	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#220	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#223	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#222	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#225	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#224	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#811	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#812	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#813	0.1414213562373095	0.0	0.07071067811865475		_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.07053456158585983	0.07053456158585983	0.07053456158585983	!(++count > maximalCount)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3911	0.06375767130633382	0.07495316889958614	0.06935542010295997	(a)> 0	_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.06917144638660747	0.06917144638660747	0.06917144638660747	maximalCount >= max	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#750	0.06237828615518053	0.07580980435789034	0.06909404525653544	intPartB > extra	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#764	0.06726727939963124	0.06772854614785964	0.06749791277374545	intPartA > x	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#756	0.06666666666666667	0.06726727939963124	0.06696697303314895	!(intVal > 709)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3908	0.06375767130633382	0.06375767130633382	0.06375767130633382	!(bits == 0x8000000000000000L)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3902	0.06337242505244779	0.06375767130633382	0.0635650481793908	!(a != b)	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#85	0.125	0.0	0.0625		_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3896	0.061898446059017294	0.0629940788348712	0.06244626244694425	(a)> 0	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#749	0.06237828615518053	0.062257280636469035	0.062317783395824784	intPartA != extra	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#727	0.06237828615518053	0.062257280636469035	0.062317783395824784	!(intVal > 709)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#737	0.06237828615518053	0.062257280636469035	0.062317783395824784	!(intVal == 709)	_
org.apache.commons.math.optimization.VectorialPointValuePair#double[]#getValueRef#?#97	0.12403473458920847	0.0	0.062017367294604234		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#82	0.12403473458920847	0.0	0.062017367294604234		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#81	0.12403473458920847	0.0	0.062017367294604234		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#80	0.12403473458920847	0.0	0.062017367294604234		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#79	0.12403473458920847	0.0	0.062017367294604234		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#77	0.12403473458920847	0.0	0.062017367294604234		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#76	0.12403473458920847	0.0	0.062017367294604234		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#67	0.12309149097933272	0.0	0.06154574548966636		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#74	0.12309149097933272	0.0	0.06154574548966636		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#73	0.12309149097933272	0.0	0.06154574548966636		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#719	0.060522753266880246	0.062257280636469035	0.06139001695167464	!(intVal > 746)	_
org.apache.commons.math.util.FastMath#double#exp#?,double#697	0.0604122093330177	0.06178020632152154	0.06109620782726962	(exp(x,0.0,null))> 0	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#791	0.05352877275721892	0.06772854614785964	0.060628659452539285	z < intPartA	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#103	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#102	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#108	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#112	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#111	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getTargetRef#?#165	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#47	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#48	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getWeightRef#?#171	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#139	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#137	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#136	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#134	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#133	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#144	0.11952286093343936	0.0	0.05976143046671968		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#716	0.05270462766947299	0.06666666666666667	0.05968564716806983	!(x < 0.0)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#132	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#131	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#136	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#135	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#138	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#137	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#141	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#ConvergenceChecker<VectorialPointValuePair>#getConvergenceChecker#?#88	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#249	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#248	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#244	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#241	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#240	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#253	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#251	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#107	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#103	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#128	0.11867816581938533	0.0	0.05933908290969266		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#790	0.05352877275721892	0.06375767130633382	0.05864322203177637	z >= intPartA	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?#62	0.11704114719613057	0.0	0.058520573598065284		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?,ConvergenceChecker<VectorialPointValuePair>#68	0.11704114719613057	0.0	0.058520573598065284		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.05643326479831003	0.05892556509887897	0.0576794149485945	o instanceof Object[]	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3898	0.051366549693751415	0.06337242505244779	0.057369487373099604	!(a < b)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3899	0.05698028822981897	0.0574484989621426	0.05721439359598079	(b)!= 0	_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.05652334189442215	0.05661385170722978	0.05656859680082597	((a <= b) ? a : b)!= 0	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3895	0.05070201265633938	0.061898446059017294	0.05630022935767834	a > b	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#809	0.05352877275721892	0.058823529411764705	0.05617615108449181	!(extra != 0.0)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#815	0.05352877275721892	0.05439282932204212	0.053960801039630524	!(hiPrec != null)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#821	0.05352877275721892	0.053760333057047034	0.05364455290713298	(result)>= 0	_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#43	0.05198752449100364	0.05227083734893167	0.052129180919967655	array != null	_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.04559607525875532	0.046274481338274755	0.04593527829851504	(Math.sqrt(a))> 0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#53	0.09090909090909091	0.0	0.045454545454545456		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#54	0.09090909090909091	0.0	0.045454545454545456		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#65	0.09090909090909091	0.0	0.045454545454545456		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#64	0.09090909090909091	0.0	0.045454545454545456		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#62	0.09090909090909091	0.0	0.045454545454545456		_
org.apache.commons.math.util.FastMath#double#abs#?,double#3380	0.03883678186903087	0.04009634698823127	0.03946656442863107	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)> 0	_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.06984302957695782	0.0	0.03492151478847891		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#754	0.06666666666666667	0.0	0.03333333333333333		_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3907	0.06375767130633382	0.0	0.03187883565316691		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#50	0.06337242505244779	0.0	0.031686212526223896		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#51	0.06337242505244779	0.0	0.031686212526223896		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#747	0.06237828615518053	0.0	0.031189143077590267		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#752	0.06237828615518053	0.0	0.031189143077590267		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#717	0.060522753266880246	0.0	0.030261376633440123		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#46	0.05976143046671968	0.0	0.02988071523335984		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#47	0.05976143046671968	0.0	0.02988071523335984		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#50	0.05643326479831003	0.0	0.028216632399155017		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#44	0.05643326479831003	0.0	0.028216632399155017		_
org.apache.commons.math.exception.MathIllegalArgumentException#?#MathIllegalArgumentException#?,Localizable,Localizable,Object#44	0.05572782125753528	0.0	0.02786391062876764		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#789	0.05352877275721892	0.0	0.02676438637860946		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#780	0.05352877275721892	0.0	0.02676438637860946		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#772	0.05352877275721892	0.0	0.02676438637860946		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#773	0.05352877275721892	0.0	0.02676438637860946		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#774	0.05352877275721892	0.0	0.02676438637860946		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#800	0.05352877275721892	0.0	0.02676438637860946		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#807	0.05352877275721892	0.0	0.02676438637860946		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#808	0.05352877275721892	0.0	0.02676438637860946		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#801	0.05352877275721892	0.0	0.02676438637860946		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#709	0.05270462766947299	0.0	0.026352313834736494		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#708	0.05270462766947299	0.0	0.026352313834736494		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#710	0.05270462766947299	0.0	0.026352313834736494		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#67	0.052057920629535355	0.0	0.026028960314767677		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#68	0.052057920629535355	0.0	0.026028960314767677		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#65	0.052057920629535355	0.0	0.026028960314767677		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#66	0.052057920629535355	0.0	0.026028960314767677		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#54	0.05198752449100364	0.0	0.02599376224550182		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#42	0.05198752449100364	0.0	0.02599376224550182		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1721	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1727	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1726	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1725	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1724	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1729	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1728	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1716	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1718	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1717	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1719	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1752	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1749	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1748	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1747	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1746	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1745	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1744	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1743	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#180	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#181	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1740	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1741	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1731	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1734	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#757	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#758	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#759	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1038	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#761	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1041	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1045	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1040	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1037	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#721	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#720	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#722	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#729	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#724	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#734	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#730	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#307	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#306	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#305	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#265	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1106	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1000	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1002	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1113	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1111	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1115	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3903	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3909	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1012	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1008	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1007	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1009	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1004	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1003	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#165	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#387	0.0	0.0	0.0		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#127	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#558	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#565	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1061	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1756	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1753	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1754	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1058	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1057	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1022	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1021	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#794	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1070	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1071	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1073	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1870	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1872	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1873	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1874	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1875	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1878	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1879	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1174	0.0	0.0	0.0		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#180	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1175	0.0	0.0	0.0		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#88	0.0	0.0	0.0		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#177	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1865	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1866	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1863	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1864	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1171	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1170	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1173	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1867	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1172	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1868	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1163	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1166	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1167	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1168	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1850	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1851	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1162	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1161	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1857	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1160	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1858	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1793	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1859	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1794	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1853	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1795	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1854	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1855	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1158	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1159	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1156	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1789	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1154	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1155	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1847	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1151	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1150	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1146	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1147	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1148	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1143	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1144	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1149	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1139	0.0	0.0	0.0		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#105	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3841	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1131	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1130	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3840	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1769	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1132	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1135	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1767	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1768	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1137	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3843	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1136	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1766	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1774	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1773	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1770	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1140	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1185	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1186	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1187	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1777	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1778	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1784	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#229	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1786	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1785	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1782	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1781	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1196	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#227	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#228	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1197	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1199	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1898	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1897	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1896	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1895	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1894	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1893	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1892	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#232	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1891	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#235	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3839	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3835	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3834	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1889	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1886	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1885	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1888	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1887	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1884	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1883	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1880	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#995	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#994	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#145	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#991	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#990	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#999	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#997	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#996	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#435	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#810	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#818	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#989	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#817	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#988	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#987	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#412	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#276	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1214	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1215	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1213	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1210	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1217	0.0	0.0	0.0		_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#85	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#804	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#803	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#130	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1096	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1809	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1098	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#485	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#484	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1927	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1929	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1920	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1921	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1922	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1924	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1925	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1095	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1932	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1930	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1935	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1934	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1909	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1908	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1905	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1904	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1841	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1901	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1902	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1903	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1919	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1832	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1836	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1837	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1838	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1913	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1914	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1911	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1912	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1910	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1208	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1207	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1825	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1824	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1204	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1203	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1202	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1821	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1201	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1820	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1827	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1828	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1829	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1813	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1812	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1811	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1810	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1817	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1816	0.0	0.0	0.0		_
