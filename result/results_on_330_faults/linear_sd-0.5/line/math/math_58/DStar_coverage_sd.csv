line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#390	0.045454545454545456	Infinity	Infinity	lmPar >= xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#405	0.020833333333333332	Infinity	Infinity	xNorm <= coeff2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#533	0.05263157894736842	1.0	0.5263157894736842	parl > dxNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#420	0.047619047619047616	1.0	0.5238095238095238	point[pj] >= xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#389	0.045454545454545456	1.0	0.5227272727272727	delta < coeff2	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#274	0.5	0.5	0.5	minY > maxY	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#275	0.5	0.5	0.5	maxY <= minY	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#262	0.2	0.5	0.35	!((idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length))	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#182	0.1111111111111111	0.5	0.3055555555555556	param[2] <= 0	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#48	0.05	0.5	0.275	this.weight == x	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#49	0.05	0.5	0.275	this.x == weight	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#544	0.047619047619047616	0.5	0.27380952380952384	sum <= parl	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#556	0.047619047619047616	0.5	0.27380952380952384	lmPar > fp	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#183	0.5	0.0	0.25		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#272	0.5	0.0	0.25		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#271	0.5	0.0	0.25		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#273	0.5	0.0	0.25		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#277	0.5	0.0	0.25		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#183	0.5	0.0	0.25		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#185	0.2	0.2	0.2	params[2] <= fwhmApprox	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#199	0.2	0.2	0.2	points[i].getY() > points[maxYIdx].getY()	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#198	0.2	0.2	0.2	!(i < points.length)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#258	0.2	0.2	0.2	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#264	0.2	0.2	0.2	!(isBetween(y,points[i].getY(),points[i + idxStep].getY()))	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#203	0.2	0.2	0.2	(maxYIdx)> 0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#200	0.2	0.2	0.2	maxYIdx == i	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.2	0.2	0.2	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#156	0.2	0.2	0.2	parameters == null	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#417	0.047619047619047616	0.3333333333333333	0.19047619047619047	cost <= coeff2	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#144	0.14285714285714285	0.2	0.17142857142857143	!(observations.length < 3)	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#132	0.16666666666666666	0.16666666666666666	0.16666666666666666	(Gaussian.value(diff,param[0],i2s2))> 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#614	0.06666666666666667	0.25	0.15833333333333333	parl >= dxNorm	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#141	0.14285714285714285	0.14285714285714285	0.14285714285714285	!(observations == null)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#338	0.020833333333333332	0.25	0.13541666666666666	lmDir[pj] > delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#620	0.05555555555555555	0.16666666666666666	0.1111111111111111	lmPar > delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#570	0.047619047619047616	0.16666666666666666	0.10714285714285714	work1[pj] < sPar	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#179	0.09090909090909091	0.1111111111111111	0.10101010101010101	!(param.length != 3)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#187	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#179	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#172	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#173	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#174	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#176	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#178	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#170	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#197	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#169	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#Comparator<WeightedObservedPoint>#createWeightedObservedPointComparator#?#302	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#boolean#isBetween#?,double,double,double#291	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#226	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#147	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#121	0.2	0.0	0.1		GT
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#159	0.2	0.0	0.1		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#157	0.2	0.0	0.1		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#520	0.05263157894736842	0.14285714285714285	0.09774436090225563	work1[pj] > fp	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getX#?#64	0.05263157894736842	0.14285714285714285	0.09774436090225563	(x)== 0	_
org.apache.commons.math.analysis.function.Gaussian#double#value#?,double,double,double#197	0.08333333333333333	0.1111111111111111	0.09722222222222221	(norm * FastMath.exp(-xMinusMean * xMinusMean * i2s2))> 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#581	0.047619047619047616	0.14285714285714285	0.09523809523809523	dxNorm <= parl	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#321	0.020833333333333332	0.16666666666666666	0.09375	oldX[pj] > xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#346	0.020833333333333332	0.16666666666666666	0.09375	delta < maxCosine	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#403	0.020833333333333332	0.16666666666666666	0.09375	xNorm < coeff2	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#176	0.07692307692307693	0.09090909090909091	0.08391608391608392	!(param == null)	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#161	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#155	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#154	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#153	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#152	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#158	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#159	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#157	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#131	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#130	0.16666666666666666	0.0	0.08333333333333333		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#583	0.047619047619047616	0.1	0.07380952380952381	fp >= gNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#312	0.020833333333333332	0.125	0.07291666666666667	diag[j] < maxCosine	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#279	0.020833333333333332	0.125	0.07291666666666667	xNorm < xk	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#299	0.020833333333333332	0.125	0.07291666666666667	maxCosine >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#530	0.05263157894736842	0.09090909090909091	0.07177033492822966	work1[pj] >= fp	_
org.apache.commons.math.optimization.fitting.GaussianFitter#?#GaussianFitter#?,DifferentiableMultivariateVectorialOptimizer#68	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#120	0.14285714285714285	0.0	0.07142857142857142		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#605	0.05555555555555555	0.08333333333333333	0.06944444444444445	sum2 >= previousFP	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#688	0.05	0.08333333333333333	0.06666666666666667	cos > dpj	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#50	0.05	0.08333333333333333	0.06666666666666667	this.y < weight	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#602	0.05555555555555555	0.07692307692307693	0.06623931623931624	work1[permutation[i]] > gNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#578	0.047619047619047616	0.08333333333333333	0.06547619047619047	work3[pj] > delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#599	0.05555555555555555	0.07142857142857142	0.06349206349206349	work1[pj] >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#615	0.0625	0.0625	0.0625	fp < 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#595	0.05555555555555555	0.06666666666666667	0.06111111111111111	work1[pj] >= previousFP	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#613	0.05555555555555555	0.06666666666666667	0.06111111111111111	fp > 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#691	0.047619047619047616	0.07142857142857142	0.05952380952380952	cos < rkk	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#608	0.05555555555555555	0.058823529411764705	0.05718954248366013	sum2 > parl	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#707	0.047619047619047616	0.06666666666666667	0.05714285714285714	weightedResidualJacobian[i][pk] >= dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#706	0.047619047619047616	0.06666666666666667	0.05714285714285714	lmDiag[i] > cos	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#579	0.047619047619047616	0.06666666666666667	0.05714285714285714	dxNorm < s	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#687	0.05	0.0625	0.05625	sin > dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#374	0.020833333333333332	0.09090909090909091	0.05587121212121212	coeff1 >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#527	0.05263157894736842	0.058823529411764705	0.05572755417956656	sum < parl	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#252	0.02040816326530612	0.09090909090909091	0.055658627087198514	qtf[i] == xNorm	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#150	0.1111111111111111	0.0	0.05555555555555555		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#597	0.05555555555555555	0.05555555555555555	0.05555555555555555	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#593	0.05555555555555555	0.05555555555555555	0.05555555555555555	!(j < solvedCols)	_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double#67	0.1111111111111111	0.0	0.05555555555555555		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#606	0.05555555555555555	0.05555555555555555	0.05555555555555555	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#601	0.05555555555555555	0.05555555555555555	0.05555555555555555	i < solvedCols	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#128	0.1111111111111111	0.0	0.05555555555555555		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#692	0.047619047619047616	0.0625	0.05505952380952381	sin >= dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#699	0.047619047619047616	0.0625	0.05505952380952381	qtbpj > dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#574	0.047619047619047616	0.0625	0.05505952380952381	dxNorm > fp	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#531	0.05263157894736842	0.05555555555555555	0.054093567251461985	sum2 >= dxNorm	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getY#?#71	0.05263157894736842	0.05555555555555555	0.054093567251461985	(y)!= 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#700	0.047619047619047616	0.058823529411764705	0.05322128851540616	work[k] >= dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#545	0.047619047619047616	0.058823529411764705	0.05322128851540616	sum2 < parl	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getWeight#?#57	0.05263157894736842	0.05263157894736842	0.05263157894736842	(weight)> 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#518	0.05263157894736842	0.05263157894736842	0.05263157894736842	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#526	0.05263157894736842	0.05263157894736842	0.05263157894736842	i < j	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#523	0.05263157894736842	0.05263157894736842	0.05263157894736842	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#522	0.05263157894736842	0.05263157894736842	0.05263157894736842	sum2 < delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#356	0.020833333333333332	0.08333333333333333	0.05208333333333333	actRed >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#587	0.047619047619047616	0.05555555555555555	0.051587301587301584	!((FastMath.abs(fp) <= 0.1 * delta) || ((parl == 0) && (fp <= previousFP) && (previousFP < 0)))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#715	0.047619047619047616	0.05263157894736842	0.05012531328320802	weightedResidualJacobian[j][permutation[j]] > dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#517	0.047619047619047616	0.05263157894736842	0.05012531328320802	rank == solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#537	0.047619047619047616	0.05263157894736842	0.05012531328320802	sum2 != parl	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#542	0.047619047619047616	0.05263157894736842	0.05012531328320802	sum >= sum2	_
org.apache.commons.math.optimization.fitting.CurveFitter#WeightedObservedPoint[]#getObservations#?#100	0.1	0.0	0.05		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#697	0.047619047619047616	0.05	0.04880952380952381	weightedResidualJacobian[k][pk] > cos	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#685	0.047619047619047616	0.05	0.04880952380952381	FastMath.abs(rkk) < FastMath.abs(lmDiag[k])	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#714	0.047619047619047616	0.05	0.04880952380952381	lmDiag[j] < dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#736	0.047619047619047616	0.05	0.04880952380952381	work[j] < sum	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#386	0.045454545454545456	0.05	0.04772727272727273	!((0.1 * cost >= previousCost) || (tmp < 0.1))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#666	0.047619047619047616	0.047619047619047616	0.047619047619047616	dpj != 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#669	0.047619047619047616	0.047619047619047616	0.047619047619047616	lmDiag[j] <= dpj	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#660	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#652	0.047619047619047616	0.047619047619047616	0.047619047619047616	i < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#650	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#680	0.047619047619047616	0.047619047619047616	0.047619047619047616	lmDiag[k] != 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#675	0.047619047619047616	0.047619047619047616	0.047619047619047616	k < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#703	0.047619047619047616	0.047619047619047616	0.047619047619047616	i < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#729	0.047619047619047616	0.047619047619047616	0.047619047619047616	nSing > 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#721	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#722	0.047619047619047616	0.047619047619047616	0.047619047619047616	!((lmDiag[j] == 0) && (nSing == solvedCols))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#725	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(nSing < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#538	0.047619047619047616	0.047619047619047616	0.047619047619047616	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#541	0.047619047619047616	0.047619047619047616	0.047619047619047616	i <= j	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#549	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(paru == 0)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#557	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(lmPar == 0)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#564	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(lmPar == 0)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#561	0.047619047619047616	0.047619047619047616	0.047619047619047616	countdown >= 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#568	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#575	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#741	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(j < lmDir.length)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#733	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(i < nSing)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#730	0.047619047619047616	0.047619047619047616	0.047619047619047616	j >= 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#418	0.047619047619047616	0.047619047619047616	0.047619047619047616	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#828	0.02127659574468085	0.07142857142857142	0.04635258358662614	weightedResidualJacobian[j][permutation[k + dk]] >= ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#391	0.020833333333333332	0.07142857142857142	0.04613095238095238	!((lmPar == 0) || (ratio >= 0.75))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#778	0.02040816326530612	0.07142857142857142	0.04591836734693877	jacNorm[k] > norm2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#364	0.020833333333333332	0.0625	0.041666666666666664	work1[j] != ratio	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#491	0.022222222222222223	0.05555555555555555	0.03888888888888889	lmDir[permutation[i]] >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#826	0.02127659574468085	0.05555555555555555	0.0384160756501182	gamma >= ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#339	0.020833333333333332	0.05263157894736842	0.03673245614035087	point[pj] >= xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#380	0.020833333333333332	0.05263157894736842	0.03673245614035087	ratio < dirDer	_
org.apache.commons.math.exception.NotStrictlyPositiveException#?#NotStrictlyPositiveException#?,Number#38	0.07142857142857142	0.0	0.03571428571428571		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#400	0.020833333333333332	0.05	0.035416666666666666	xNorm < coeff2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#343	0.020833333333333332	0.047619047619047616	0.03422619047619047	lmNorm >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#507	0.020833333333333332	0.047619047619047616	0.03422619047619047	!(fp <= 0.1 * delta)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#505	0.020833333333333332	0.047619047619047616	0.03422619047619047	dxNorm >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#397	0.020833333333333332	0.047619047619047616	0.03422619047619047	!(ratio >= 1.0e-4)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#776	0.02040816326530612	0.047619047619047616	0.03401360544217687	norm2 < akk	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#383	0.020833333333333332	0.045454545454545456	0.03314393939393939	ratio <= 0.25	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#280	0.020833333333333332	0.041666666666666664	0.03125	diag[k] > xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#616	0.0625	0.0	0.03125		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#598	0.05555555555555555	0.0	0.027777777777777776		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#594	0.05555555555555555	0.0	0.027777777777777776		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#600	0.05555555555555555	0.0	0.027777777777777776		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#607	0.05555555555555555	0.0	0.027777777777777776		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#610	0.05555555555555555	0.0	0.027777777777777776		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#366	0.020833333333333332	0.03333333333333333	0.027083333333333334	work1[i] > previousCost	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#297	0.020833333333333332	0.03225806451612903	0.02654569892473118	sum > xNorm	_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#MultivariateMatrixFunction#jacobian#?#183	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#153	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#152	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#151	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#150	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#156	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#155	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#154	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#160	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#203	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#206	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#200	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#202	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#201	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#519	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#529	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#525	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#524	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,ParametricUnivariateRealFunction,double[]#126	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#?#TheoreticalValuesFunction#?,ParametricUnivariateRealFunction#178	0.05263157894736842	0.0	0.02631578947368421		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#817	0.02040816326530612	0.03125	0.02582908163265306	diagR[pk] > ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#818	0.02040816326530612	0.03125	0.02582908163265306	weightedResidualJacobian[k][pk] > ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#212	0.0196078431372549	0.03125	0.02542892156862745	this.orthoTolerance == parRelativeTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#210	0.0196078431372549	0.03125	0.02542892156862745	this.costRelativeTolerance == orthoTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#211	0.0196078431372549	0.03125	0.02542892156862745	this.parRelativeTolerance == orthoTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#686	0.05	0.0	0.025		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Number,Number,Number#46	0.05	0.0	0.025		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double,double#80	0.05	0.0	0.025		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#791	0.02040816326530612	0.029411764705882353	0.02490996398559424	norm2 == aki	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#814	0.02040816326530612	0.02857142857142857	0.024489795918367346	beta[pk] > ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#690	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#698	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#52	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#53	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#664	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#665	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#667	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#655	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#656	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#653	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#651	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#683	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#682	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#684	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#676	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#674	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#705	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#704	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#720	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#516	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#515	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#539	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#540	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#547	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#548	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#567	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#569	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#572	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#576	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#577	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#582	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#589	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#742	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#732	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#731	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#734	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#427	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#426	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#425	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#424	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#422	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#423	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#419	0.047619047619047616	0.0	0.023809523809523808		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#341	0.020833333333333332	0.02631578947368421	0.02357456140350877	lmNorm < maxCosine	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#345	0.020833333333333332	0.02631578947368421	0.02357456140350877	!(firstIteration)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#503	0.020833333333333332	0.02631578947368421	0.02357456140350877	dxNorm < s	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#282	0.020833333333333332	0.02631578947368421	0.02357456140350877	xNorm > delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#808	0.02040816326530612	0.02631578947368421	0.023361976369495163	permutation[k] < k	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#807	0.02040816326530612	0.02631578947368421	0.023361976369495163	permutation[nextColumn] != k	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#371	0.020833333333333332	0.02564102564102564	0.023237179487179488	coeff1 < actRed	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#384	0.045454545454545456	0.0	0.022727272727272728		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#797	0.02040816326530612	0.024390243902439025	0.022399203583872575	!(norm2 > ak2)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#798	0.02040816326530612	0.024390243902439025	0.022399203583872575	nextColumn > k	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#502	0.020833333333333332	0.023809523809523808	0.02232142857142857	work1[pj] > dxNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#490	0.022222222222222223	0.022222222222222223	0.022222222222222223	i < k	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#849	0.020833333333333332	0.023255813953488372	0.02204457364341085	y[i] < gamma	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#824	0.02127659574468085	0.022727272727272728	0.022001934235976787	gamma >= akk	_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Number,Number,boolean#52	0.043478260869565216	0.0	0.021739130434782608		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#782	0.02040816326530612	0.022727272727272728	0.021567717996289426	!(k < cols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#266	0.020833333333333332	0.021739130434782608	0.02128623188405797	weightedResidualJacobian[k][pk] >= xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#508	0.02127659574468085	0.02127659574468085	0.02127659574468085	lmPar >= fp	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#827	0.02127659574468085	0.02127659574468085	0.02127659574468085	j < weightedResidualJacobian.length	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#823	0.02127659574468085	0.02127659574468085	0.02127659574468085	!(j < weightedResidualJacobian.length)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#821	0.02127659574468085	0.02127659574468085	0.02127659574468085	dk > 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#285	0.020833333333333332	0.02127659574468085	0.02105496453900709	delta > xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#303	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(maxCosine <= orthoTolerance)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#316	0.020833333333333332	0.020833333333333332	0.020833333333333332	ratio < 1.0e-4	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#319	0.020833333333333332	0.020833333333333332	0.020833333333333332	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#311	0.020833333333333332	0.020833333333333332	0.020833333333333332	j < cols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#336	0.020833333333333332	0.020833333333333332	0.020833333333333332	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#844	0.020833333333333332	0.020833333333333332	0.020833333333333332	i < rows	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#841	0.020833333333333332	0.020833333333333332	0.020833333333333332	k < cols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#848	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(i < rows)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#354	0.020833333333333332	0.020833333333333332	0.020833333333333332	0.1 * cost < previousCost	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#365	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(i <= j)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#361	0.020833333333333332	0.020833333333333332	0.020833333333333332	j < solvedCols	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#370	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#499	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#493	0.020833333333333332	0.020833333333333332	0.020833333333333332	lmDir[pk] == ypk	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#409	0.020833333333333332	0.020833333333333332	0.020833333333333332	checker != null	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#401	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(k < cols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#446	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(maxCosine <= 2.2204e-16)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#440	0.020833333333333332	0.020833333333333332	0.020833333333333332	!((FastMath.abs(actRed) <= 2.2204e-16) && (preRed <= 2.2204e-16) && (ratio <= 2.0))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#443	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(delta <= 2.2204e-16 * xNorm)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#431	0.020833333333333332	0.020833333333333332	0.020833333333333332	!((FastMath.abs(actRed) <= costRelativeTolerance && preRed <= costRelativeTolerance && ratio <= 2.0) || delta <= parRelativeTolerance * xNorm)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#411	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(checker.converged(iter,previous,current))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#272	0.020833333333333332	0.020833333333333332	0.020833333333333332	xNorm >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#275	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(dk == 0)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#273	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(k < cols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#264	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(k < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#269	0.020833333333333332	0.020833333333333332	0.020833333333333332	firstIteration	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#487	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(k >= 0)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#481	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(j < rank)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#482	0.020833333333333332	0.020833333333333332	0.020833333333333332	lmDir[permutation[j]] < delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#296	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(i <= j)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#290	0.020833333333333332	0.020833333333333332	0.020833333333333332	cost != 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#291	0.020833333333333332	0.020833333333333332	0.020833333333333332	!(j < solvedCols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#294	0.020833333333333332	0.020833333333333332	0.020833333333333332	s != 0	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#142	0.014492753623188406	0.02702702702702703	0.020759890325107718	index < i	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#793	0.02040816326530612	0.02040816326530612	0.02040816326530612	!(Double.isInfinite(norm2) || Double.isNaN(norm2))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#799	0.02040816326530612	0.02040816326530612	0.02040816326530612	ak2 <= norm2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#789	0.02040816326530612	0.02040816326530612	0.02040816326530612	j < weightedResidualJacobian.length	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#787	0.02040816326530612	0.02040816326530612	0.02040816326530612	!(i < cols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#772	0.02040816326530612	0.02040816326530612	0.02040816326530612	permutation[k] == k	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#771	0.02040816326530612	0.02040816326530612	0.02040816326530612	!(k < cols)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#774	0.02040816326530612	0.02040816326530612	0.02040816326530612	i < weightedResidualJacobian.length	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#251	0.02040816326530612	0.02040816326530612	0.02040816326530612	!(i < rows)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#802	0.02040816326530612	0.02040816326530612	0.02040816326530612	!(ak2 <= qrRankingThreshold)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#243	0.02040816326530612	0.02040816326530612	0.02040816326530612	lmPar >= delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#213	0.0196078431372549	0.0196078431372549	0.0196078431372549	this.qrRankingThreshold < parRelativeTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#209	0.0196078431372549	0.0196078431372549	0.0196078431372549	this.initialStepBoundFactor == initialStepBoundFactor	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#141	0.014492753623188406	0.021739130434782608	0.018115942028985508	cost < residual	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#152	0.03225806451612903	0.0	0.016129032258064516		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#83	0.015625	0.015873015873015872	0.015749007936507936	difference > size * getRelativeThreshold() && difference > getAbsoluteThreshold()	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#78	0.015625	0.015625	0.015625	i < p.length	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#140	0.014492753623188406	0.014925373134328358	0.014709063378758382	weightedResiduals[i] == residual	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#115	0.014492753623188406	0.014705882352941176	0.01459931798806479	weightedResidualJacobian[i][j] < wi	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#104	0.014492753623188406	0.014492753623188406	0.014492753623188406	!(weightedResidualJacobian.length != rows)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#110	0.014492753623188406	0.014492753623188406	0.014492753623188406	!(i < rows)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#113	0.014492753623188406	0.014492753623188406	0.014492753623188406	j < cols	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#138	0.014492753623188406	0.014492753623188406	0.014492753623188406	!(i < rows)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#129	0.014492753623188406	0.014492753623188406	0.014492753623188406	!(objective.length != rows)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#114	0.014285714285714285	0.014285714285714285	0.014285714285714285	!(f == null)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#117	0.014285714285714285	0.014285714285714285	0.014285714285714285	!(t == null)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#123	0.014285714285714285	0.014285714285714285	0.014285714285714285	!(startPoint == null)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#120	0.014285714285714285	0.014285714285714285	0.014285714285714285	!(w == null)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#126	0.014285714285714285	0.014285714285714285	0.014285714285714285	!(t.length != w.length)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#246	0.014285714285714285	0.014285714285714285	0.014285714285714285	cols <= maxEval	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#245	0.014285714285714285	0.014285714285714285	0.014285714285714285	rows != maxEval	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#237	0.014285714285714285	0.014285714285714285	0.014285714285714285	jacobianEvaluations != maxEval	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#832	0.022727272727272728	0.0	0.011363636363636364		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3831	0.010869565217391304	0.01098901098901099	0.010929288103201148	(a)>= 0	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3830	0.010869565217391304	0.010869565217391304	0.010869565217391304	a < b	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#509	0.02127659574468085	0.0	0.010638297872340425		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#822	0.02127659574468085	0.0	0.010638297872340425		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#328	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#327	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#326	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#325	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#329	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#320	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#323	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#324	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#335	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#332	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#337	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#340	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#843	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#842	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#845	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#847	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#355	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#353	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#350	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#362	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#363	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#369	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#375	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#373	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#376	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#377	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#501	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#500	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#506	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#399	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#392	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#393	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#498	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#402	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#406	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#278	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#274	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#289	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#261	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#265	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#489	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#488	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#295	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#292	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#293	0.020833333333333332	0.0	0.010416666666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#790	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#788	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#785	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#786	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#775	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#773	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#257	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#258	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#256	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#237	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#236	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#235	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#234	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#233	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#232	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#231	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#230	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#248	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#249	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#245	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#244	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#247	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#246	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#240	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#806	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#228	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#229	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#221	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#220	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#223	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#222	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#225	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#224	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#811	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#812	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#813	0.02040816326530612	0.0	0.01020408163265306		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#73	0.009433962264150943	0.010309278350515464	0.009871620307333203	(relativeThreshold)> 0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#80	0.009523809523809525	0.009523809523809525	0.009523809523809525	(absoluteThreshold)> 0	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#812	0.003472222222222222	0.015151515151515152	0.009311868686868688	result < epsilon	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3827	0.006802721088435374	0.010869565217391304	0.00883614315291334	!(a > b)	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#85	0.015873015873015872	0.0	0.007936507936507936		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3828	0.007751937984496124	0.007874015748031496	0.00781297686626381	(b)> 0	_
org.apache.commons.math.optimization.VectorialPointValuePair#double[]#getValueRef#?#97	0.015625	0.0	0.0078125		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#82	0.015625	0.0	0.0078125		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#81	0.015625	0.0	0.0078125		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#80	0.015625	0.0	0.0078125		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#79	0.015625	0.0	0.0078125		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#77	0.015625	0.0	0.0078125		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#76	0.015625	0.0	0.0078125		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#67	0.015384615384615385	0.0	0.007692307692307693		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#74	0.015384615384615385	0.0	0.007692307692307693		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#73	0.015384615384615385	0.0	0.007692307692307693		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#103	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#102	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#108	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#112	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#111	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getTargetRef#?#165	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#47	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#48	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getWeightRef#?#171	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#139	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#137	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#136	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#134	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#133	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#144	0.014492753623188406	0.0	0.007246376811594203		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#765	0.004545454545454545	0.009900990099009901	0.007223222322232223	intPartB == x	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#132	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#131	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#136	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#135	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#138	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#137	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#141	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#ConvergenceChecker<VectorialPointValuePair>#getConvergenceChecker#?#88	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#249	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#248	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#244	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#241	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#240	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#253	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#251	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#107	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#103	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#128	0.014285714285714285	0.0	0.007142857142857143		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?#62	0.013888888888888888	0.0	0.006944444444444444		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?,ConvergenceChecker<VectorialPointValuePair>#68	0.013888888888888888	0.0	0.006944444444444444		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#793	0.0028735632183908046	0.009900990099009901	0.006387276658700353	z >= intPartA	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#792	0.0028735632183908046	0.00980392156862745	0.006338742393509128	z == intPartA	_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.005	0.005	0.005	!(++count > maximalCount)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3911	0.004081632653061225	0.005649717514124294	0.004865675083592759	(a)> 0	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#750	0.00390625	0.005780346820809248	0.004843298410404625	intPartB > extra	_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.004807692307692308	0.004807692307692308	0.004807692307692308	maximalCount >= max	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#764	0.004545454545454545	0.004608294930875576	0.00457687473816506	intPartA > x	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#756	0.004464285714285714	0.004545454545454545	0.00450487012987013	!(intVal > 709)	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#53	0.008333333333333333	0.0	0.004166666666666667		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#54	0.008333333333333333	0.0	0.004166666666666667		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#65	0.008333333333333333	0.0	0.004166666666666667		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#64	0.008333333333333333	0.0	0.004166666666666667		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#62	0.008333333333333333	0.0	0.004166666666666667		_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3908	0.004081632653061225	0.004081632653061225	0.004081632653061225	!(bits == 0x8000000000000000L)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3902	0.004032258064516129	0.004081632653061225	0.004056945358788677	!(a != b)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3896	0.0038461538461538464	0.00398406374501992	0.003915108795586883	(a)> 0	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#749	0.00390625	0.0038910505836575876	0.003898650291828794	intPartA != extra	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#727	0.00390625	0.0038910505836575876	0.003898650291828794	!(intVal > 709)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#737	0.00390625	0.0038910505836575876	0.003898650291828794	!(intVal == 709)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#719	0.003676470588235294	0.0038910505836575876	0.003783760585946441	!(intVal > 746)	_
org.apache.commons.math.util.FastMath#double#exp#?,double#697	0.003663003663003663	0.0038314176245210726	0.003747210643762368	(exp(x,0.0,null))> 0	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#791	0.0028735632183908046	0.004608294930875576	0.0037409290746331903	z < intPartA	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#716	0.002785515320334262	0.004464285714285714	0.0036249005173099877	!(x < 0.0)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#790	0.0028735632183908046	0.004081632653061225	0.0034775979357260147	z >= intPartA	_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.003194888178913738	0.003484320557491289	0.0033396043682025135	o instanceof Object[]	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3898	0.0026455026455026454	0.004032258064516129	0.003338880355009387	!(a < b)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3899	0.003257328990228013	0.0033112582781456954	0.0032842936341868543	(b)!= 0	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3895	0.002577319587628866	0.0038461538461538464	0.003211736716891356	a > b	_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.003205128205128205	0.003215434083601286	0.0032102811443647456	((a <= b) ? a : b)!= 0	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#809	0.0028735632183908046	0.003472222222222222	0.0031728927203065133	!(extra != 0.0)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#815	0.0028735632183908046	0.002967359050445104	0.0029204611344179543	!(hiPrec != null)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#821	0.0028735632183908046	0.002898550724637681	0.002886056971514243	(result)>= 0	_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#43	0.0027100271002710027	0.0027397260273972603	0.0027248765638341315	array != null	_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.004901960784313725	0.0	0.0024509803921568627		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#754	0.004464285714285714	0.0	0.002232142857142857		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.0020833333333333333	0.002145922746781116	0.0021146280400572244	(Math.sqrt(a))> 0	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3907	0.004081632653061225	0.0	0.0020408163265306124		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#50	0.004032258064516129	0.0	0.0020161290322580645		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#51	0.004032258064516129	0.0	0.0020161290322580645		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#747	0.00390625	0.0	0.001953125		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#752	0.00390625	0.0	0.001953125		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#717	0.003676470588235294	0.0	0.001838235294117647		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#46	0.0035842293906810036	0.0	0.0017921146953405018		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#47	0.0035842293906810036	0.0	0.0017921146953405018		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#50	0.003194888178913738	0.0	0.001597444089456869		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#44	0.003194888178913738	0.0	0.001597444089456869		_
org.apache.commons.math.util.FastMath#double#abs#?,double#3380	0.0015105740181268882	0.001610305958132045	0.0015604399881294665	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)> 0	_
org.apache.commons.math.exception.MathIllegalArgumentException#?#MathIllegalArgumentException#?,Localizable,Localizable,Object#44	0.003115264797507788	0.0	0.001557632398753894		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#789	0.0028735632183908046	0.0	0.0014367816091954023		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#780	0.0028735632183908046	0.0	0.0014367816091954023		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#772	0.0028735632183908046	0.0	0.0014367816091954023		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#773	0.0028735632183908046	0.0	0.0014367816091954023		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#774	0.0028735632183908046	0.0	0.0014367816091954023		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#800	0.0028735632183908046	0.0	0.0014367816091954023		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#807	0.0028735632183908046	0.0	0.0014367816091954023		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#808	0.0028735632183908046	0.0	0.0014367816091954023		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#801	0.0028735632183908046	0.0	0.0014367816091954023		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#709	0.002785515320334262	0.0	0.001392757660167131		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#708	0.002785515320334262	0.0	0.001392757660167131		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#710	0.002785515320334262	0.0	0.001392757660167131		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#67	0.002717391304347826	0.0	0.001358695652173913		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#68	0.002717391304347826	0.0	0.001358695652173913		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#65	0.002717391304347826	0.0	0.001358695652173913		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#66	0.002717391304347826	0.0	0.001358695652173913		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#54	0.0027100271002710027	0.0	0.0013550135501355014		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#42	0.0027100271002710027	0.0	0.0013550135501355014		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1721	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1727	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1726	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1725	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1724	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1729	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1728	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1716	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1718	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1717	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1719	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1752	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1749	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1748	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1747	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1746	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1745	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1744	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1743	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#180	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#181	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1740	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1741	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1731	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1734	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#757	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#758	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#759	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1038	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#761	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1041	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1042	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1045	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1040	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1037	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#721	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#720	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#722	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#729	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#724	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#734	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#730	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#307	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#306	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#305	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#265	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1107	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1106	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1104	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1103	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1000	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1002	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1113	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1111	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1118	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1115	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3903	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3909	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1012	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1008	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1007	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1009	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1004	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1003	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#165	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#387	0.0	0.0	0.0		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#127	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#558	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#565	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1061	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1756	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1753	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1754	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1058	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1057	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1022	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1023	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1021	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#794	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1070	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1071	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1073	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1870	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1872	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1873	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1874	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1875	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1878	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1879	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1174	0.0	0.0	0.0		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#180	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1175	0.0	0.0	0.0		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#88	0.0	0.0	0.0		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#177	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1865	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1866	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1863	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1864	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1171	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1170	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1173	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1867	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1172	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1868	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1163	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1166	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1167	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1168	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1850	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1851	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1162	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1790	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1161	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1857	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1160	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1858	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1793	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1859	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1794	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1853	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1795	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1854	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1855	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1158	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1159	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1156	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1789	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1154	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1155	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1847	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1151	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1150	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1146	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1147	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1148	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1143	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1144	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1149	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1139	0.0	0.0	0.0		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#105	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3841	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1131	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1130	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3840	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1769	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1132	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1135	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1767	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1768	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1137	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3843	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1136	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1766	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1775	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1774	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1773	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1771	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1770	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1140	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1185	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1186	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1187	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1777	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1778	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1784	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#229	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1786	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1785	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1782	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1781	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1196	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#227	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#228	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1197	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1199	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1898	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1897	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1896	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1895	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1894	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1893	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1892	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#232	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1891	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#235	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3839	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3835	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3834	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1889	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1886	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1885	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1888	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1887	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1884	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1883	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1880	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#995	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#994	0.0	0.0	0.0		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#145	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#992	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#991	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#990	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#999	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#997	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#996	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#435	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#810	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#818	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#989	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#817	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#988	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#987	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#412	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#276	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1214	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1215	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1213	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1210	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1217	0.0	0.0	0.0		_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#85	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#804	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#803	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#130	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1096	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1809	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1098	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#485	0.0	0.0	0.0		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#484	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1927	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1929	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1920	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1921	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1922	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1924	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1925	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1095	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1932	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1930	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1935	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1934	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1909	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1908	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1905	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1904	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1841	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1901	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1902	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1903	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1919	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1832	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1836	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1837	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1838	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1913	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1914	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1911	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1912	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1910	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1208	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1207	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1825	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1824	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1204	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1203	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1202	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1821	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1201	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1820	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1827	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1828	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1829	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1814	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1813	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1812	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1811	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1810	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1817	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1818	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1816	0.0	0.0	0.0		_
