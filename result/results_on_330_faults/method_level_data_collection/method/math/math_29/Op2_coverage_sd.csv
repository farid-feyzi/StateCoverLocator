line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.linear.OpenMapRealVector#OpenMapRealVector#ebeDivide#?,RealVector#341	-9.84898227183191E-4	0.0	-9.84898227183191E-4		GT
org.apache.commons.math3.linear.OpenMapRealVector#OpenMapRealVector#ebeMultiply#?,RealVector#359	-0.0013131976362442547	0.0	-0.0013131976362442547		GT
org.apache.commons.math3.linear.OpenMapRealVector#?#OpenMapRealVector#?,OpenMapRealVector#179	-0.005581089954038083	0.0	-0.005581089954038083		_
org.apache.commons.math3.linear.OpenMapRealVector#OpenIntToDoubleHashMap#getEntries#?#207	-0.005909389363099146	0.0	-0.005909389363099146		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#boolean#containsKey#?,int#205	-0.007879185817465528	0.0	-0.007879185817465528		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#double#doRemove#?,int#390	-0.007879185817465528	-9.84898227183191E-4	-0.008864084044648718	(previous)== 0	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#void#growTable#?#432	-0.00886408404464872	0.0	-0.00886408404464872		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,OpenIntToDoubleHashMap#130	-0.009520682862770847	0.0	-0.009520682862770847		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator#int#key#?#525	-0.010505581089954037	-3.2829940906106366E-4	-0.0108338804990151	(keys[current])< 0	_
org.apache.commons.math3.linear.OpenMapRealVector#void#setEntry#?,int,double#587	-0.012147078135259356	0.0	-0.012147078135259356		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#int#probe#?,int,int#322	-0.01247537754432042	0.0	-0.01247537754432042	((j << 2) + j + perturb+ 1)== 0	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#int#perturb#?,int#246	-0.01247537754432042	0.0	-0.01247537754432042	(hash & 0x7fffffff)< 0	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator#boolean#hasNext#?#514	-0.01247537754432042	0.0	-0.01247537754432042		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator#?#Iterator#?#495	-0.012803676953381483	0.0	-0.012803676953381483		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#Iterator#iterator#?#237	-0.012803676953381483	0.0	-0.012803676953381483		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#double#remove#?,int#349	-0.012803676953381483	0.0	-0.012803676953381483	(missingEntries)< 0	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator#double#value#?#542	-0.01247537754432042	-3.2829940906106366E-4	-0.012803676953381483	(values[current])== 0	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator#void#advance#?#558	-0.012803676953381483	0.0	-0.012803676953381483		_
org.apache.commons.math3.linear.RealVector#void#checkVectorDimensions#?,int#175	-0.014116874589625739	0.0	-0.014116874589625739		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#int#changeIndexSign#?,int#331	-0.01149047931713723	-0.005252790544977019	-0.016743269862114246	(-index - 1)== 0	_
org.apache.commons.math3.linear.OpenMapRealVector#double#getEntry#?,int#447	-0.013788575180564675	-0.002954694681549573	-0.01674326986211425	(entries.get(index))< 0	_
org.apache.commons.math3.linear.RealVector#void#checkIndex#?,int#188	-0.02133946158896914	0.0	-0.02133946158896914		_
org.apache.commons.math3.linear.OpenMapRealVector#?#OpenMapRealVector#?,double[]#122	-0.02232435981615233	0.0	-0.02232435981615233		_
org.apache.commons.math3.linear.OpenMapRealVector#?#OpenMapRealVector#?,double[],double#133	-0.02232435981615233	0.0	-0.02232435981615233		_
org.apache.commons.math3.linear.OpenMapRealVector#int#getDimension#?#400	-0.024294156270518712	0.0	-0.024294156270518712	(virtualSize)< 0	_
org.apache.commons.math3.linear.OpenMapRealVector#boolean#isDefaultValue#?,double#219	-0.02495075508864084	0.0	-0.02495075508864084		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#double#get#?,int#175	-0.025935653315824033	0.0	-0.025935653315824033	(missingEntries)> 0	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,double#99	-0.03381483913328956	0.0	-0.03381483913328956		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#boolean#shouldGrowTable#?#465	-0.03381483913328956	0.0	-0.03381483913328956		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int[],byte[],int,int#268	-0.03381483913328956	0.0	-0.03381483913328956	(changeIndexSign(index))>= 0	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#boolean#containsKey#?,int,int#381	-0.027248850952068287	-0.00984898227183191	-0.0370978332239002	key > index	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#double#put#?,int,double#406	-0.03381483913328956	-0.004924491135915955	-0.038739330269205514	(previous)< 0	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#int#hashOf#?,int#474	-0.034471437951411686	-0.004596191726854892	-0.039067629678266574	(h ^ (h >>> 7) ^ (h >>> 4))< 0	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#149	-0.03939592908732764	0.0	-0.03939592908732764	(nextPowerOfTwo(capacity))< 0	_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#117	-0.03939592908732764	0.0	-0.03939592908732764		_
org.apache.commons.math3.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int#255	-0.03381483913328956	-0.01149047931713723	-0.04530531845042679	(findInsertionIndex(keys,states,key,mask))< 0	_
org.apache.commons.math3.util.FastMath#double#ceil#?,double#3358	-0.08010505581089954	0.0	-0.08010505581089954	(x)< 0	_
org.apache.commons.math3.util.FastMath#double#floor#?,double#3331	-0.14116874589625739	0.0	-0.14116874589625739	(x)== 0	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3019	-0.3463558765594222	0.0	-0.3463558765594222	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)< 0	_
