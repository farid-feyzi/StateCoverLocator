line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.OpenMapRealVector#double#getEntry#?,int#478	0.9967858577742065	0.9991964644435516	1.995982322217758	(entries.get(index))== 0	_
org.apache.commons.math.linear.OpenMapRealVector#int#getDimension#?#421	0.9951787866613098	0.9951787866613098	1.9903575733226195	(virtualSize)!= 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#doRemove#?,int#393	0.9943752511048614	0.9943752511048614	1.9887505022097227	(previous)>= 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#int#key#?#528	0.9939734833266372	0.9947770188830856	1.9887505022097227	(keys[current])<= 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#double#value#?#545	0.9935717155484131	0.9935717155484131	1.9871434310968261	(values[current])!= 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#remove#?,int#352	0.9883487344314986	0.9943752511048614	1.98272398553636	(doRemove(index))> 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#get#?,int#178	0.9807151466452391	0.9927681799919646	1.9734833266372038	(missingEntries)== 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#put#?,int,double#409	0.978304539975894	0.9839292888710326	1.9622338288469265	(previous)== 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#boolean#containsKey#?,int,int#384	0.9791080755323424	0.9815186822016875	1.9606267577340297	key == index	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int[],byte[],int,int#271	0.978304539975894	0.9795098433105665	1.9578143832864603	(index)== 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int#258	0.978304539975894	0.9795098433105665	1.9578143832864603	(findInsertionIndex(keys,states,key,mask))== 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#hashOf#?,int#477	0.9775010044194455	0.9791080755323424	1.956609079951788	(h ^ (h >>> 7) ^ (h >>> 4))== 0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#152	0.9775010044194455	0.978304539975894	1.9558055443953395	(capacity)>= 0	_
org.apache.commons.math.util.FastMath#double#ceil#?,double#3748	0.9316994777018883	0.9369224588188028	1.868621936520691	(y)> 0	_
org.apache.commons.math.util.FastMath#double#floor#?,double#3721	0.8601848131779831	0.8810767376456408	1.7412615508236238	(y)>= 0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3409	0.6697468862997187	0.7725994375251105	1.4423463238248293	((x < 0.0) ? -x : (x == 0.0) ? 0.0 : x)<= 0	_
org.apache.commons.math.linear.OpenMapRealVector#OpenMapRealVector#ebeMultiply#?,RealVector#367	0.9995982322217758	0.0	0.9995982322217758		GT
org.apache.commons.math.MathRuntimeException#ConcurrentModificationException#createConcurrentModificationException#?,Localizable,Object#372	0.9991964644435516	0.0	0.9991964644435516		_
org.apache.commons.math.linear.AbstractRealVector#void#checkVectorDimensions#?,int#62	0.9991964644435516	0.0	0.9991964644435516		_
org.apache.commons.math.linear.OpenMapRealVector#?#OpenMapRealVector#?,OpenMapRealVector#179	0.9983929288871033	0.0	0.9983929288871033		_
org.apache.commons.math.linear.OpenMapRealVector#?#OpenMapRealVector#?,int,double#74	0.9983929288871033	0.0	0.9983929288871033		_
org.apache.commons.math.linear.OpenMapRealVector#OpenIntToDoubleHashMap#getEntries#?#207	0.9975893933306549	0.0	0.9975893933306549		_
org.apache.commons.math.linear.OpenMapRealVector#void#setEntry#?,int,double#662	0.9975893933306549	0.0	0.9975893933306549		_
org.apache.commons.math.linear.AbstractRealVector#void#checkIndex#?,int#75	0.9963840899959823	0.0	0.9963840899959823		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#boolean#containsKey#?,int#208	0.9963840899959823	0.0	0.9963840899959823		_
org.apache.commons.math.linear.OpenMapRealVector#boolean#isDefaultValue#?,double#219	0.9951787866613098	0.0	0.9951787866613098		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,OpenIntToDoubleHashMap#133	0.9943752511048614	0.0	0.9943752511048614		_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#boolean#hasNext#?#517	0.9935717155484131	0.0	0.9935717155484131		_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#?#Iterator#?#498	0.9931699477701889	0.0	0.9931699477701889		_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#void#advance#?#561	0.9931699477701889	0.0	0.9931699477701889		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#Iterator#iterator#?#240	0.9931699477701889	0.0	0.9931699477701889		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,double#102	0.9843310566492567	0.0	0.9843310566492567		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#boolean#shouldGrowTable#?#468	0.978304539975894	0.0	0.978304539975894		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#120	0.9775010044194455	0.0	0.9775010044194455		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1119	-0.06307754118119727	0.0	-0.06307754118119727		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1154	-0.06307754118119727	0.0	-0.06307754118119727		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1834	-0.06307754118119727	0.0	-0.06307754118119727	(ys[0] + ys[1])== 0	_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1742	-0.06307754118119727	0.0	-0.06307754118119727		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1208	-0.06307754118119727	0.0	-0.06307754118119727	(ys[0] + ys[1])<= 0	_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1081	-0.06307754118119727	0.0	-0.06307754118119727		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1045	-0.06307754118119727	0.0	-0.06307754118119727		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1061	-0.06307754118119727	0.0	-0.06307754118119727		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1792	-0.06307754118119727	0.0	-0.06307754118119727	(ys[0] + ys[1])< 0	_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1011	-0.06307754118119727	0.0	-0.06307754118119727	(ys[0] + ys[1])<= 0	_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1873	-0.06307754118119727	0.0	-0.06307754118119727		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1094	-0.06307754118119727	0.0	-0.06307754118119727		_
